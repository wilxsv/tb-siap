<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/var/www/html/siaptb/app</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">/var/www/html/siaptb/app/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/var/www/html/siaptb/app/logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="AsseticBundle">Symfony\Bundle\AsseticBundle\AsseticBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="SonataCoreBundle">Sonata\CoreBundle\SonataCoreBundle</parameter>
      <parameter key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</parameter>
      <parameter key="SonatajQueryBundle">Sonata\jQueryBundle\SonatajQueryBundle</parameter>
      <parameter key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="SonataDoctrineORMAdminBundle">Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle</parameter>
      <parameter key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</parameter>
      <parameter key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</parameter>
      <parameter key="SonataUserBundle">Sonata\UserBundle\SonataUserBundle</parameter>
      <parameter key="SonataEasyExtendsBundle">Sonata\EasyExtendsBundle\SonataEasyExtendsBundle</parameter>
      <parameter key="SonataCacheBundle">Sonata\CacheBundle\SonataCacheBundle</parameter>
      <parameter key="ApplicationSonataUserBundle">Application\Sonata\UserBundle\ApplicationSonataUserBundle</parameter>
      <parameter key="KnpMarkdownBundle">Knp\Bundle\MarkdownBundle\KnpMarkdownBundle</parameter>
      <parameter key="IvoryCKEditorBundle">Ivory\CKEditorBundle\IvoryCKEditorBundle</parameter>
      <parameter key="IvoryOrderedFormBundle">Ivory\OrderedFormBundle\IvoryOrderedFormBundle</parameter>
      <parameter key="SonataFormatterBundle">Sonata\FormatterBundle\SonataFormatterBundle</parameter>
      <parameter key="SonataIntlBundle">Sonata\IntlBundle\SonataIntlBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="JMSAopBundle">JMS\AopBundle\JMSAopBundle</parameter>
      <parameter key="JMSDiExtraBundle">JMS\DiExtraBundle\JMSDiExtraBundle</parameter>
      <parameter key="JMSSecurityExtraBundle">JMS\SecurityExtraBundle\JMSSecurityExtraBundle</parameter>
      <parameter key="FOSJsRoutingBundle">FOS\JsRoutingBundle\FOSJsRoutingBundle</parameter>
      <parameter key="ApplicationCoreBundle">Application\CoreBundle\ApplicationCoreBundle</parameter>
      <parameter key="MinsalSiapsBundle">Minsal\SiapsBundle\MinsalSiapsBundle</parameter>
      <parameter key="MinsalSeguimientoBundle">Minsal\SeguimientoBundle\MinsalSeguimientoBundle</parameter>
      <parameter key="MinsalCitasBundle">Minsal\CitasBundle\MinsalCitasBundle</parameter>
      <parameter key="ADesignsCalendarBundle">ADesigns\CalendarBundle\ADesignsCalendarBundle</parameter>
      <parameter key="MinsalLaboratorioBundle">Minsal\LaboratorioBundle\MinsalLaboratorioBundle</parameter>
      <parameter key="MinsalFarmaciaBundle">Minsal\FarmaciaBundle\MinsalFarmaciaBundle</parameter>
      <parameter key="EndroidQrCodeBundle">Endroid\Bundle\QrCodeBundle\EndroidQrCodeBundle</parameter>
      <parameter key="KnpSnappyBundle">Knp\Bundle\SnappyBundle\KnpSnappyBundle</parameter>
      <parameter key="ApplicationSoapBundle">Application\SoapBundle\ApplicationSoapBundle</parameter>
      <parameter key="KnpTimeBundle">Knp\Bundle\TimeBundle\KnpTimeBundle</parameter>
      <parameter key="ApplicationApiBundle">Application\ApiBundle\ApplicationApiBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="SensioDistributionBundle">Sensio\Bundle\DistributionBundle\SensioDistributionBundle</parameter>
      <parameter key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appDevDebugProjectContainer</parameter>
    <parameter key="database_driver">pdo_pgsql</parameter>
    <parameter key="database_host">localhost</parameter>
    <parameter key="database_port">5432</parameter>
    <parameter key="database_name">siap</parameter>
    <parameter key="database_user">postgres</parameter>
    <parameter key="database_password">password</parameter>
    <parameter key="mailer_transport">smtp</parameter>
    <parameter key="mailer_host">localhost</parameter>
    <parameter key="mailer_user">null</parameter>
    <parameter key="mailer_password">null</parameter>
    <parameter key="jasper_username">jasperuser</parameter>
    <parameter key="jasper_password">jasperpassword</parameter>
    <parameter key="jasper_url">http://localhost:8080/jasperserver/services/repository?wsdl</parameter>
    <parameter key="module1_url">http://localhost/siaptb/web/app_dev.php/admin/login?_moduleSelection=1</parameter>
    <parameter key="module2_url">http://localhost/siaptb/web/app_dev.php/admin/login?_moduleSelection=2</parameter>
    <parameter key="module3_url">http://localhost/siaptb/web/app_dev.php/admin/login?_moduleSelection=3</parameter>
    <parameter key="module4_url">http://localhost/siaptb/web/app_dev.php/admin/login?_moduleSelection=4</parameter>
    <parameter key="module5_url">http://localhost/siaptb/web/app_dev.php/admin/login?_moduleSelection=5</parameter>
    <parameter key="module6_url">http://localhost/siaptb/web/app_dev.php/admin/login?_moduleSelection=6</parameter>
    <parameter key="module7_url">http://localhost/siaptb/web/app_dev.php/admin/login?_moduleSelection=7</parameter>
    <parameter key="module8_url">http://localhost/siaptb/web/app_dev.php/admin/login?_moduleSelection=8</parameter>
    <parameter key="total_modules">8</parameter>
    <parameter key="hide_modules">7,8</parameter>
    <parameter key="signed_modules">3,6,7</parameter>
    <parameter key="print_ticket" type="collection">
      <parameter>2</parameter>
    </parameter>
    <parameter key="numero_receta_imprimir">4</parameter>
    <parameter key="servicio_generar_cita" type="collection">
      <parameter>8</parameter>
      <parameter>9</parameter>
    </parameter>
    <parameter key="global_host">dominio.global</parameter>
    <parameter key="ws_method">ip</parameter>
    <parameter key="locale">es_SV</parameter>
    <parameter key="secret">df1ca40cfc425c4f34e654696720435a044b9ca9</parameter>
    <parameter key="session_max_idle_time">7200</parameter>
    <parameter key="solicitud_lab_print_single">true</parameter>
    <parameter key="validate_ingreso_hospitalario">true</parameter>
    <parameter key="api_idle_time">60</parameter>
    <parameter key="user_automatizado">null</parameter>
    <parameter key="password_automatizado">null</parameter>
    <parameter key="controller_resolver.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver</parameter>
    <parameter key="controller_name_converter.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser</parameter>
    <parameter key="response_listener.class">Symfony\Component\HttpKernel\EventListener\ResponseListener</parameter>
    <parameter key="streamed_response_listener.class">Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</parameter>
    <parameter key="locale_listener.class">Symfony\Component\HttpKernel\EventListener\LocaleListener</parameter>
    <parameter key="event_dispatcher.class">Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher</parameter>
    <parameter key="http_kernel.class">Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel</parameter>
    <parameter key="filesystem.class">Symfony\Component\Filesystem\Filesystem</parameter>
    <parameter key="cache_warmer.class">Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate</parameter>
    <parameter key="cache_clearer.class">Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer</parameter>
    <parameter key="file_locator.class">Symfony\Component\HttpKernel\Config\FileLocator</parameter>
    <parameter key="uri_signer.class">Symfony\Component\HttpKernel\UriSigner</parameter>
    <parameter key="request_stack.class">Symfony\Component\HttpFoundation\RequestStack</parameter>
    <parameter key="fragment.handler.class">Symfony\Component\HttpKernel\Fragment\FragmentHandler</parameter>
    <parameter key="fragment.renderer.inline.class">Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.class">Symfony\Bundle\FrameworkBundle\Fragment\ContainerAwareHIncludeFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.renderer.esi.class">Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="translator.class">Symfony\Bundle\FrameworkBundle\Translation\Translator</parameter>
    <parameter key="translator.identity.class">Symfony\Component\Translation\IdentityTranslator</parameter>
    <parameter key="translator.selector.class">Symfony\Component\Translation\MessageSelector</parameter>
    <parameter key="translation.loader.php.class">Symfony\Component\Translation\Loader\PhpFileLoader</parameter>
    <parameter key="translation.loader.yml.class">Symfony\Component\Translation\Loader\YamlFileLoader</parameter>
    <parameter key="translation.loader.xliff.class">Symfony\Component\Translation\Loader\XliffFileLoader</parameter>
    <parameter key="translation.loader.po.class">Symfony\Component\Translation\Loader\PoFileLoader</parameter>
    <parameter key="translation.loader.mo.class">Symfony\Component\Translation\Loader\MoFileLoader</parameter>
    <parameter key="translation.loader.qt.class">Symfony\Component\Translation\Loader\QtFileLoader</parameter>
    <parameter key="translation.loader.csv.class">Symfony\Component\Translation\Loader\CsvFileLoader</parameter>
    <parameter key="translation.loader.res.class">Symfony\Component\Translation\Loader\IcuResFileLoader</parameter>
    <parameter key="translation.loader.dat.class">Symfony\Component\Translation\Loader\IcuDatFileLoader</parameter>
    <parameter key="translation.loader.ini.class">Symfony\Component\Translation\Loader\IniFileLoader</parameter>
    <parameter key="translation.loader.json.class">Symfony\Component\Translation\Loader\JsonFileLoader</parameter>
    <parameter key="translation.dumper.php.class">Symfony\Component\Translation\Dumper\PhpFileDumper</parameter>
    <parameter key="translation.dumper.xliff.class">Symfony\Component\Translation\Dumper\XliffFileDumper</parameter>
    <parameter key="translation.dumper.po.class">Symfony\Component\Translation\Dumper\PoFileDumper</parameter>
    <parameter key="translation.dumper.mo.class">Symfony\Component\Translation\Dumper\MoFileDumper</parameter>
    <parameter key="translation.dumper.yml.class">Symfony\Component\Translation\Dumper\YamlFileDumper</parameter>
    <parameter key="translation.dumper.qt.class">Symfony\Component\Translation\Dumper\QtFileDumper</parameter>
    <parameter key="translation.dumper.csv.class">Symfony\Component\Translation\Dumper\CsvFileDumper</parameter>
    <parameter key="translation.dumper.ini.class">Symfony\Component\Translation\Dumper\IniFileDumper</parameter>
    <parameter key="translation.dumper.json.class">Symfony\Component\Translation\Dumper\JsonFileDumper</parameter>
    <parameter key="translation.dumper.res.class">Symfony\Component\Translation\Dumper\IcuResFileDumper</parameter>
    <parameter key="translation.extractor.php.class">Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor</parameter>
    <parameter key="translation.loader.class">Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader</parameter>
    <parameter key="translation.extractor.class">Symfony\Component\Translation\Extractor\ChainExtractor</parameter>
    <parameter key="translation.writer.class">Symfony\Component\Translation\Writer\TranslationWriter</parameter>
    <parameter key="property_accessor.class">Symfony\Component\PropertyAccess\PropertyAccessor</parameter>
    <parameter key="debug.errors_logger_listener.class">Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener</parameter>
    <parameter key="debug.event_dispatcher.class">Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher</parameter>
    <parameter key="debug.stopwatch.class">Symfony\Component\Stopwatch\Stopwatch</parameter>
    <parameter key="debug.container.dump">/var/www/html/siaptb/app/cache/dev/appDevDebugProjectContainer.xml</parameter>
    <parameter key="debug.controller_resolver.class">Symfony\Component\HttpKernel\Controller\TraceableControllerResolver</parameter>
    <parameter key="debug.debug_handlers_listener.class">Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</parameter>
    <parameter key="kernel.secret">df1ca40cfc425c4f34e654696720435a044b9ca9</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.trusted_proxies" type="collection"/>
    <parameter key="kernel.default_locale">es_SV</parameter>
    <parameter key="session.class">Symfony\Component\HttpFoundation\Session\Session</parameter>
    <parameter key="session.flashbag.class">Symfony\Component\HttpFoundation\Session\Flash\FlashBag</parameter>
    <parameter key="session.attribute_bag.class">Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag</parameter>
    <parameter key="session.storage.metadata_bag.class">Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.native.class">Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage</parameter>
    <parameter key="session.storage.php_bridge.class">Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage</parameter>
    <parameter key="session.storage.mock_file.class">Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage</parameter>
    <parameter key="session.handler.native_file.class">Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler</parameter>
    <parameter key="session.handler.write_check.class">Symfony\Component\HttpFoundation\Session\Storage\Handler\WriteCheckSessionHandler</parameter>
    <parameter key="session_listener.class">Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cookie_lifetime">0</parameter>
      <parameter key="gc_probability">0</parameter>
    </parameter>
    <parameter key="session.save_path">/var/www/html/siaptb/app/cache/dev/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="security.secure_random.class">Symfony\Component\Security\Core\Util\SecureRandom</parameter>
    <parameter key="form.resolved_type_factory.class">Symfony\Component\Form\ResolvedFormTypeFactory</parameter>
    <parameter key="form.registry.class">Symfony\Component\Form\FormRegistry</parameter>
    <parameter key="form.factory.class">Symfony\Component\Form\FormFactory</parameter>
    <parameter key="form.extension.class">Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension</parameter>
    <parameter key="form.type_guesser.validator.class">Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</parameter>
    <parameter key="form.type_extension.form.request_handler.class">Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="security.csrf.token_generator.class">Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator</parameter>
    <parameter key="security.csrf.token_storage.class">Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage</parameter>
    <parameter key="security.csrf.token_manager.class">Symfony\Component\Security\Csrf\CsrfTokenManager</parameter>
    <parameter key="templating.engine.delegating.class">Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine</parameter>
    <parameter key="templating.name_parser.class">Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser</parameter>
    <parameter key="templating.filename_parser.class">Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser</parameter>
    <parameter key="templating.cache_warmer.template_paths.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer</parameter>
    <parameter key="templating.locator.class">Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator</parameter>
    <parameter key="templating.loader.filesystem.class">Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader</parameter>
    <parameter key="templating.loader.cache.class">Symfony\Component\Templating\Loader\CacheLoader</parameter>
    <parameter key="templating.loader.chain.class">Symfony\Component\Templating\Loader\ChainLoader</parameter>
    <parameter key="templating.finder.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder</parameter>
    <parameter key="templating.engine.php.class">Symfony\Bundle\FrameworkBundle\Templating\PhpEngine</parameter>
    <parameter key="templating.helper.slots.class">Symfony\Component\Templating\Helper\SlotsHelper</parameter>
    <parameter key="templating.helper.assets.class">Symfony\Component\Templating\Helper\CoreAssetsHelper</parameter>
    <parameter key="templating.helper.actions.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper</parameter>
    <parameter key="templating.helper.router.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper</parameter>
    <parameter key="templating.helper.request.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper</parameter>
    <parameter key="templating.helper.session.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper</parameter>
    <parameter key="templating.helper.code.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper</parameter>
    <parameter key="templating.helper.translator.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper</parameter>
    <parameter key="templating.helper.form.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper</parameter>
    <parameter key="templating.helper.stopwatch.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper</parameter>
    <parameter key="templating.form.engine.class">Symfony\Component\Form\Extension\Templating\TemplatingRendererEngine</parameter>
    <parameter key="templating.form.renderer.class">Symfony\Component\Form\FormRenderer</parameter>
    <parameter key="templating.globals.class">Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables</parameter>
    <parameter key="templating.asset.path_package.class">Symfony\Bundle\FrameworkBundle\Templating\Asset\PathPackage</parameter>
    <parameter key="templating.asset.url_package.class">Symfony\Component\Templating\Asset\UrlPackage</parameter>
    <parameter key="templating.asset.package_factory.class">Symfony\Bundle\FrameworkBundle\Templating\Asset\PackageFactory</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="templating.helper.form.resources" type="collection">
      <parameter>FrameworkBundle:Form</parameter>
    </parameter>
    <parameter key="debug.templating.engine.php.class">Symfony\Bundle\FrameworkBundle\Templating\TimedPhpEngine</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.class">Symfony\Component\Validator\ValidatorInterface</parameter>
    <parameter key="validator.builder.class">Symfony\Component\Validator\ValidatorBuilderInterface</parameter>
    <parameter key="validator.builder.factory.class">Symfony\Component\Validator\Validation</parameter>
    <parameter key="validator.mapping.cache.apc.class">Symfony\Component\Validator\Mapping\Cache\ApcCache</parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.validator_factory.class">Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory</parameter>
    <parameter key="validator.expression.class">Symfony\Component\Validator\Constraints\ExpressionValidator</parameter>
    <parameter key="validator.email.class">Symfony\Component\Validator\Constraints\EmailValidator</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="fragment.listener.class">Symfony\Component\HttpKernel\EventListener\FragmentListener</parameter>
    <parameter key="form.resolved_type_factory.data_collector_proxy.class">Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy</parameter>
    <parameter key="form.type_extension.form.data_collector.class">Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</parameter>
    <parameter key="profiler.class">Symfony\Component\HttpKernel\Profiler\Profiler</parameter>
    <parameter key="profiler_listener.class">Symfony\Component\HttpKernel\EventListener\ProfilerListener</parameter>
    <parameter key="data_collector.config.class">Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector</parameter>
    <parameter key="data_collector.request.class">Symfony\Component\HttpKernel\DataCollector\RequestDataCollector</parameter>
    <parameter key="data_collector.exception.class">Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector</parameter>
    <parameter key="data_collector.events.class">Symfony\Component\HttpKernel\DataCollector\EventDataCollector</parameter>
    <parameter key="data_collector.logger.class">Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector</parameter>
    <parameter key="data_collector.time.class">Symfony\Component\HttpKernel\DataCollector\TimeDataCollector</parameter>
    <parameter key="data_collector.memory.class">Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector</parameter>
    <parameter key="data_collector.router.class">Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector</parameter>
    <parameter key="data_collector.form.class">Symfony\Component\Form\Extension\DataCollector\FormDataCollector</parameter>
    <parameter key="data_collector.form.extractor.class">Symfony\Component\Form\Extension\DataCollector\FormDataExtractor</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/var/www/html/siaptb/app/cache/dev/profiler</parameter>
    <parameter key="profiler.storage.username"></parameter>
    <parameter key="profiler.storage.password"></parameter>
    <parameter key="profiler.storage.lifetime">86400</parameter>
    <parameter key="router.class">Symfony\Bundle\FrameworkBundle\Routing\Router</parameter>
    <parameter key="router.request_context.class">Symfony\Component\Routing\RequestContext</parameter>
    <parameter key="routing.loader.class">Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader</parameter>
    <parameter key="routing.resolver.class">Symfony\Component\Config\Loader\LoaderResolver</parameter>
    <parameter key="routing.loader.xml.class">Symfony\Component\Routing\Loader\XmlFileLoader</parameter>
    <parameter key="routing.loader.yml.class">Symfony\Component\Routing\Loader\YamlFileLoader</parameter>
    <parameter key="routing.loader.php.class">Symfony\Component\Routing\Loader\PhpFileLoader</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.cache_warmer.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer</parameter>
    <parameter key="router.options.matcher.cache_class">appDevUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">appDevUrlGenerator</parameter>
    <parameter key="router_listener.class">Symfony\Component\HttpKernel\EventListener\RouterListener</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">/var/www/html/siaptb/app/cache/dev/assetic/routing.yml</parameter>
    <parameter key="router.cache_class_prefix">appDev</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="annotations.reader.class">Doctrine\Common\Annotations\AnnotationReader</parameter>
    <parameter key="annotations.cached_reader.class">Doctrine\Common\Annotations\CachedReader</parameter>
    <parameter key="annotations.file_cache_reader.class">Doctrine\Common\Annotations\FileCacheReader</parameter>
    <parameter key="security.context.class">Symfony\Component\Security\Core\SecurityContext</parameter>
    <parameter key="security.user_checker.class">Symfony\Component\Security\Core\User\UserChecker</parameter>
    <parameter key="security.encoder_factory.generic.class">Symfony\Component\Security\Core\Encoder\EncoderFactory</parameter>
    <parameter key="security.encoder.digest.class">Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder</parameter>
    <parameter key="security.encoder.plain.class">Symfony\Component\Security\Core\Encoder\PlaintextPasswordEncoder</parameter>
    <parameter key="security.encoder.pbkdf2.class">Symfony\Component\Security\Core\Encoder\Pbkdf2PasswordEncoder</parameter>
    <parameter key="security.encoder.bcrypt.class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</parameter>
    <parameter key="security.user.provider.in_memory.class">Symfony\Component\Security\Core\User\InMemoryUserProvider</parameter>
    <parameter key="security.user.provider.in_memory.user.class">Symfony\Component\Security\Core\User\User</parameter>
    <parameter key="security.user.provider.chain.class">Symfony\Component\Security\Core\User\ChainUserProvider</parameter>
    <parameter key="security.authentication.trust_resolver.class">Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.authentication.manager.class">Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager</parameter>
    <parameter key="security.authentication.session_strategy.class">Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy</parameter>
    <parameter key="security.access.decision_manager.class">Symfony\Component\Security\Core\Authorization\AccessDecisionManager</parameter>
    <parameter key="security.access.simple_role_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleVoter</parameter>
    <parameter key="security.access.authenticated_voter.class">Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter</parameter>
    <parameter key="security.access.role_hierarchy_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter</parameter>
    <parameter key="security.access.expression_voter.class">Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter</parameter>
    <parameter key="security.firewall.class">Symfony\Component\Security\Http\Firewall</parameter>
    <parameter key="security.firewall.map.class">Symfony\Bundle\SecurityBundle\Security\FirewallMap</parameter>
    <parameter key="security.firewall.context.class">Symfony\Bundle\SecurityBundle\Security\FirewallContext</parameter>
    <parameter key="security.matcher.class">Symfony\Component\HttpFoundation\RequestMatcher</parameter>
    <parameter key="security.expression_matcher.class">Symfony\Component\HttpFoundation\ExpressionRequestMatcher</parameter>
    <parameter key="security.role_hierarchy.class">Symfony\Component\Security\Core\Role\RoleHierarchy</parameter>
    <parameter key="security.http_utils.class">Symfony\Component\Security\Http\HttpUtils</parameter>
    <parameter key="security.validator.user_password.class">Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator</parameter>
    <parameter key="security.expression_language.class">Symfony\Component\Security\Core\Authorization\ExpressionLanguage</parameter>
    <parameter key="security.authentication.retry_entry_point.class">Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint</parameter>
    <parameter key="security.channel_listener.class">Symfony\Component\Security\Http\Firewall\ChannelListener</parameter>
    <parameter key="security.authentication.form_entry_point.class">Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.form.class">Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.simple_form.class">Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.simple_preauth.class">Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.basic.class">Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener</parameter>
    <parameter key="security.authentication.basic_entry_point.class">Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.digest.class">Symfony\Component\Security\Http\Firewall\DigestAuthenticationListener</parameter>
    <parameter key="security.authentication.digest_entry_point.class">Symfony\Component\Security\Http\EntryPoint\DigestAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.x509.class">Symfony\Component\Security\Http\Firewall\X509AuthenticationListener</parameter>
    <parameter key="security.authentication.listener.anonymous.class">Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener</parameter>
    <parameter key="security.authentication.switchuser_listener.class">Symfony\Component\Security\Http\Firewall\SwitchUserListener</parameter>
    <parameter key="security.logout_listener.class">Symfony\Component\Security\Http\Firewall\LogoutListener</parameter>
    <parameter key="security.logout.handler.session.class">Symfony\Component\Security\Http\Logout\SessionLogoutHandler</parameter>
    <parameter key="security.logout.handler.cookie_clearing.class">Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler</parameter>
    <parameter key="security.logout.success_handler.class">Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler</parameter>
    <parameter key="security.access_listener.class">Symfony\Component\Security\Http\Firewall\AccessListener</parameter>
    <parameter key="security.access_map.class">Symfony\Component\Security\Http\AccessMap</parameter>
    <parameter key="security.exception_listener.class">Symfony\Component\Security\Http\Firewall\ExceptionListener</parameter>
    <parameter key="security.context_listener.class">Symfony\Component\Security\Http\Firewall\ContextListener</parameter>
    <parameter key="security.authentication.provider.dao.class">Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.simple.class">Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.pre_authenticated.class">Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.anonymous.class">Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider</parameter>
    <parameter key="security.authentication.success_handler.class">Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler</parameter>
    <parameter key="security.authentication.failure_handler.class">Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler</parameter>
    <parameter key="security.authentication.simple_success_failure_handler.class">Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler</parameter>
    <parameter key="security.authentication.provider.rememberme.class">Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider</parameter>
    <parameter key="security.authentication.listener.rememberme.class">Symfony\Component\Security\Http\Firewall\RememberMeListener</parameter>
    <parameter key="security.rememberme.token.provider.in_memory.class">Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider</parameter>
    <parameter key="security.authentication.rememberme.services.persistent.class">Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices</parameter>
    <parameter key="security.authentication.rememberme.services.simplehash.class">Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices</parameter>
    <parameter key="security.rememberme.response_listener.class">Symfony\Component\Security\Http\RememberMe\ResponseListener</parameter>
    <parameter key="templating.helper.logout_url.class">Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper</parameter>
    <parameter key="templating.helper.security.class">Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper</parameter>
    <parameter key="twig.extension.logout_url.class">Symfony\Bundle\SecurityBundle\Twig\Extension\LogoutUrlExtension</parameter>
    <parameter key="twig.extension.security.class">Symfony\Bridge\Twig\Extension\SecurityExtension</parameter>
    <parameter key="data_collector.security.class">Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector</parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
        <parameter>ROLE_SONATA_ADMIN</parameter>
        <parameter>ROLE_USER_LISTAREXPEDIENTES</parameter>
        <parameter>ROLE_USER_BUSCAREMERGENCIA</parameter>
        <parameter>ROLE_USER_CONSULTAR</parameter>
        <parameter>ROLE_USER_DEPURACION</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
      </parameter>
      <parameter key="SONATA" type="collection">
        <parameter>ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT</parameter>
      </parameter>
      <parameter key="ROLE_SONATA_LAB_SEC_SOLICITUDESTUDIOS" type="collection">
        <parameter>ROLE_MINSAL_LABORATORIO_ADMIN_SEC_SOLICITUDESTUDIOS_ASSIGNEXAM</parameter>
        <parameter>ROLE_MINSAL_LABORATORIO_ADMIN_SEC_SOLICITUDESTUDIOS_HISTORY</parameter>
      </parameter>
      <parameter key="ROLE_SONATA_FARM_RECETAS" type="collection">
        <parameter>ROLE_MINSAL_FARMACIA_ADMIN_FARM_RECETAS_ASSIGNRECETA</parameter>
        <parameter>ROLE_SONATA_ADMIN_FARMRECETAS_COMPLEMENT</parameter>
        <parameter>ROLE_SONATA_ADMIN_FARMRECETAS_COMPLEMENTALL</parameter>
      </parameter>
      <parameter key="ROLE_SONATA_CIT_CITAS_DIA" type="collection">
        <parameter>ROLE_SONATA_ADMIN_CITCITASDIA_TRANSFER</parameter>
        <parameter>ROLE_SONATA_ADMIN_CITAMEDICAS</parameter>
        <parameter>ROLE_SONATA_ADMIN_CITCITASDIA_CITAINTEGRAL</parameter>
        <parameter>ROLE_SONATA_ADMIN_CITCITASDIA_ASIGNAR</parameter>
        <parameter>ROLE_SONATA_ADMIN_CITCITASDIA_LISTAMEDICA_LIST</parameter>
        <parameter>ROLE_SONATA_ADMIN_CITCITASDIA_REFERENCIA</parameter>
        <parameter>ROLE_SONATA_ADMIN_CITCITASDIA_REPROGRAMAR</parameter>
        <parameter>ROLE_SONATA_ADMIN_AGENDAMEDICA_EMPLEADO_ESPECIALIDAD_LIST</parameter>
        <parameter>ROLE_SONATA_ADMIN_CITCITASDIA_EXCLUYENDO_TIPO_CITA</parameter>
        <parameter>ROLE_SONATA_ADMIN_CITCITASDIA_MEDICO_EXCLUYENDO_TIPO_CITA</parameter>
        <parameter>ROLE_SONATA_ADMIN_CITCITASDIA_REPORTES</parameter>
        <parameter>ROLE_SONATA_ADMIN_AGENDADIA</parameter>
      </parameter>
      <parameter key="ROLE_SONATA_CIT_CITAS_PROCEDIMIENTOS" type="collection">
        <parameter>ROLE_SONATA_ADMIN_CITCITASPROCEDIMIENTOS_REFERENCIA</parameter>
        <parameter>ROLE_MINSAL_CITAS_ADMIN_CIT_CITAS_PROCEDIMIENTOS_AGENDA</parameter>
        <parameter>ROLE_MINSAL_CITAS_ADMIN_CIT_CITAS_PROCEDIMIENTOS_PROCEDIMIENTOEMPLEADO_LIST</parameter>
        <parameter>ROLE_MINSAL_CITAS_ADMIN_CIT_CITAS_PROCEDIMIENTOS_REPORTES</parameter>
      </parameter>
      <parameter key="ROLE_SONATA_SECHISTORIALCLINICO" type="collection">
        <parameter>ROLE_SONATA_ADMIN_SECHISTORIALCLINICO_RETROACTIVE</parameter>
        <parameter>ROLE_SONATA_ADMIN_SECHISTORIALCLINICO_PACIENTESAPTOSESPECIALIZADA</parameter>
        <parameter>ROLE_SONATA_ADMIN_CONSULTAS_ATENDIDAS</parameter>
      </parameter>
      <parameter key="ROLE_SONATA_CLINICASELECCION" type="collection">
        <parameter>ROLE_SONATA_ADMIN_CITCITASDIA_CSELECCION</parameter>
      </parameter>
      <parameter key="ROLE_API_LABORATORIO" type="collection">
        <parameter>ROLE_API_CHECKOUT</parameter>
        <parameter>ROLE_API_LABORATORIO_INGRESORESULTADOS</parameter>
        <parameter>ROLE_API_LABORATORIO_ENVIAR_SOLICITUD_EQUIPOAUTOMATIZADO</parameter>
      </parameter>
    </parameter>
    <parameter key="twig.class">Twig_Environment</parameter>
    <parameter key="twig.loader.filesystem.class">Symfony\Bundle\TwigBundle\Loader\FilesystemLoader</parameter>
    <parameter key="twig.loader.chain.class">Twig_Loader_Chain</parameter>
    <parameter key="templating.engine.twig.class">Symfony\Bundle\TwigBundle\TwigEngine</parameter>
    <parameter key="twig.cache_warmer.class">Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer</parameter>
    <parameter key="twig.extension.trans.class">Symfony\Bridge\Twig\Extension\TranslationExtension</parameter>
    <parameter key="twig.extension.assets.class">Symfony\Bundle\TwigBundle\Extension\AssetsExtension</parameter>
    <parameter key="twig.extension.actions.class">Symfony\Bundle\TwigBundle\Extension\ActionsExtension</parameter>
    <parameter key="twig.extension.code.class">Symfony\Bridge\Twig\Extension\CodeExtension</parameter>
    <parameter key="twig.extension.routing.class">Symfony\Bridge\Twig\Extension\RoutingExtension</parameter>
    <parameter key="twig.extension.yaml.class">Symfony\Bridge\Twig\Extension\YamlExtension</parameter>
    <parameter key="twig.extension.form.class">Symfony\Bridge\Twig\Extension\FormExtension</parameter>
    <parameter key="twig.extension.httpkernel.class">Symfony\Bridge\Twig\Extension\HttpKernelExtension</parameter>
    <parameter key="twig.extension.debug.stopwatch.class">Symfony\Bridge\Twig\Extension\StopwatchExtension</parameter>
    <parameter key="twig.extension.expression.class">Symfony\Bridge\Twig\Extension\ExpressionExtension</parameter>
    <parameter key="twig.form.engine.class">Symfony\Bridge\Twig\Form\TwigRendererEngine</parameter>
    <parameter key="twig.form.renderer.class">Symfony\Bridge\Twig\Form\TwigRenderer</parameter>
    <parameter key="twig.translation.extractor.class">Symfony\Bridge\Twig\Translation\TwigExtractor</parameter>
    <parameter key="twig.exception_listener.class">Symfony\Component\HttpKernel\EventListener\ExceptionListener</parameter>
    <parameter key="twig.controller.exception.class">Symfony\Bundle\TwigBundle\Controller\ExceptionController</parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception:showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>SonataFormatterBundle:Form:formatter.html.twig</parameter>
      <parameter>ApplicationCoreBundle:CRUD:FieldType/edit_field_file.html.twig</parameter>
      <parameter>SonataUserBundle:Form:form_admin_fields.html.twig</parameter>
      <parameter>IvoryCKEditorBundle:Form:ckeditor_widget.html.twig</parameter>
    </parameter>
    <parameter key="debug.templating.engine.twig.class">Symfony\Bundle\TwigBundle\Debug\TimedTwigEngine</parameter>
    <parameter key="twig.options" type="collection">
      <parameter key="debug">true</parameter>
      <parameter key="strict_variables">true</parameter>
      <parameter key="exception_controller">twig.controller.exception:showAction</parameter>
      <parameter key="autoescape_service">null</parameter>
      <parameter key="autoescape_service_method">null</parameter>
      <parameter key="cache">/var/www/html/siaptb/app/cache/dev/twig</parameter>
      <parameter key="charset">UTF-8</parameter>
      <parameter key="paths" type="collection"/>
    </parameter>
    <parameter key="monolog.logger.class">Symfony\Bridge\Monolog\Logger</parameter>
    <parameter key="monolog.gelf.publisher.class">Gelf\MessagePublisher</parameter>
    <parameter key="monolog.gelfphp.publisher.class">Gelf\Publisher</parameter>
    <parameter key="monolog.handler.stream.class">Monolog\Handler\StreamHandler</parameter>
    <parameter key="monolog.handler.console.class">Symfony\Bridge\Monolog\Handler\ConsoleHandler</parameter>
    <parameter key="monolog.handler.group.class">Monolog\Handler\GroupHandler</parameter>
    <parameter key="monolog.handler.buffer.class">Monolog\Handler\BufferHandler</parameter>
    <parameter key="monolog.handler.rotating_file.class">Monolog\Handler\RotatingFileHandler</parameter>
    <parameter key="monolog.handler.syslog.class">Monolog\Handler\SyslogHandler</parameter>
    <parameter key="monolog.handler.syslogudp.class">Monolog\Handler\SyslogUdpHandler</parameter>
    <parameter key="monolog.handler.null.class">Monolog\Handler\NullHandler</parameter>
    <parameter key="monolog.handler.test.class">Monolog\Handler\TestHandler</parameter>
    <parameter key="monolog.handler.gelf.class">Monolog\Handler\GelfHandler</parameter>
    <parameter key="monolog.handler.rollbar.class">Monolog\Handler\RollbarHandler</parameter>
    <parameter key="monolog.handler.flowdock.class">Monolog\Handler\FlowdockHandler</parameter>
    <parameter key="monolog.handler.browser_console.class">Monolog\Handler\BrowserConsoleHandler</parameter>
    <parameter key="monolog.handler.firephp.class">Symfony\Bridge\Monolog\Handler\FirePHPHandler</parameter>
    <parameter key="monolog.handler.chromephp.class">Symfony\Bridge\Monolog\Handler\ChromePhpHandler</parameter>
    <parameter key="monolog.handler.debug.class">Symfony\Bridge\Monolog\Handler\DebugHandler</parameter>
    <parameter key="monolog.handler.swift_mailer.class">Symfony\Bridge\Monolog\Handler\SwiftMailerHandler</parameter>
    <parameter key="monolog.handler.native_mailer.class">Monolog\Handler\NativeMailerHandler</parameter>
    <parameter key="monolog.handler.socket.class">Monolog\Handler\SocketHandler</parameter>
    <parameter key="monolog.handler.pushover.class">Monolog\Handler\PushoverHandler</parameter>
    <parameter key="monolog.handler.raven.class">Monolog\Handler\RavenHandler</parameter>
    <parameter key="monolog.handler.newrelic.class">Monolog\Handler\NewRelicHandler</parameter>
    <parameter key="monolog.handler.hipchat.class">Monolog\Handler\HipChatHandler</parameter>
    <parameter key="monolog.handler.cube.class">Monolog\Handler\CubeHandler</parameter>
    <parameter key="monolog.handler.amqp.class">Monolog\Handler\AmqpHandler</parameter>
    <parameter key="monolog.handler.error_log.class">Monolog\Handler\ErrorLogHandler</parameter>
    <parameter key="monolog.handler.loggly.class">Monolog\Handler\LogglyHandler</parameter>
    <parameter key="monolog.handler.logentries.class">Monolog\Handler\LogEntriesHandler</parameter>
    <parameter key="monolog.activation_strategy.not_found.class">Symfony\Bundle\MonologBundle\NotFoundActivationStrategy</parameter>
    <parameter key="monolog.handler.fingers_crossed.class">Monolog\Handler\FingersCrossedHandler</parameter>
    <parameter key="monolog.handler.fingers_crossed.error_level_activation_strategy.class">Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy</parameter>
    <parameter key="monolog.handler.filter.class">Monolog\Handler\FilterHandler</parameter>
    <parameter key="monolog.handler.mongo.class">Monolog\Handler\MongoDBHandler</parameter>
    <parameter key="monolog.mongo.client.class">MongoClient</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console">null</parameter>
      <parameter key="monolog.handler.main">null</parameter>
    </parameter>
    <parameter key="swiftmailer.class">Swift_Mailer</parameter>
    <parameter key="swiftmailer.transport.sendmail.class">Swift_Transport_SendmailTransport</parameter>
    <parameter key="swiftmailer.transport.mail.class">Swift_Transport_MailTransport</parameter>
    <parameter key="swiftmailer.transport.failover.class">Swift_Transport_FailoverTransport</parameter>
    <parameter key="swiftmailer.plugin.redirecting.class">Swift_Plugins_RedirectingPlugin</parameter>
    <parameter key="swiftmailer.plugin.impersonate.class">Swift_Plugins_ImpersonatePlugin</parameter>
    <parameter key="swiftmailer.plugin.messagelogger.class">Swift_Plugins_MessageLogger</parameter>
    <parameter key="swiftmailer.plugin.antiflood.class">Swift_Plugins_AntiFloodPlugin</parameter>
    <parameter key="swiftmailer.transport.smtp.class">Swift_Transport_EsmtpTransport</parameter>
    <parameter key="swiftmailer.plugin.blackhole.class">Swift_Plugins_BlackholePlugin</parameter>
    <parameter key="swiftmailer.spool.file.class">Swift_FileSpool</parameter>
    <parameter key="swiftmailer.spool.memory.class">Swift_MemorySpool</parameter>
    <parameter key="swiftmailer.email_sender.listener.class">Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</parameter>
    <parameter key="swiftmailer.data_collector.class">Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">smtp</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">25</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">localhost</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">/var/www/html/siaptb/app/cache/dev/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="assetic.asset_factory.class">Symfony\Bundle\AsseticBundle\Factory\AssetFactory</parameter>
    <parameter key="assetic.asset_manager.class">Assetic\Factory\LazyAssetManager</parameter>
    <parameter key="assetic.asset_manager_cache_warmer.class">Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer</parameter>
    <parameter key="assetic.cached_formula_loader.class">Assetic\Factory\Loader\CachedFormulaLoader</parameter>
    <parameter key="assetic.config_cache.class">Assetic\Cache\ConfigCache</parameter>
    <parameter key="assetic.config_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\ConfigurationLoader</parameter>
    <parameter key="assetic.config_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\ConfigurationResource</parameter>
    <parameter key="assetic.coalescing_directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource</parameter>
    <parameter key="assetic.directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource</parameter>
    <parameter key="assetic.filter_manager.class">Symfony\Bundle\AsseticBundle\FilterManager</parameter>
    <parameter key="assetic.worker.ensure_filter.class">Assetic\Factory\Worker\EnsureFilterWorker</parameter>
    <parameter key="assetic.value_supplier.class">Symfony\Bundle\AsseticBundle\DefaultValueSupplier</parameter>
    <parameter key="assetic.node.paths" type="collection"/>
    <parameter key="assetic.cache_dir">/var/www/html/siaptb/app/cache/dev/assetic</parameter>
    <parameter key="assetic.bundles" type="collection"/>
    <parameter key="assetic.twig_extension.class">Symfony\Bundle\AsseticBundle\Twig\AsseticExtension</parameter>
    <parameter key="assetic.twig_formula_loader.class">Assetic\Extension\Twig\TwigFormulaLoader</parameter>
    <parameter key="assetic.helper.dynamic.class">Symfony\Bundle\AsseticBundle\Templating\DynamicAsseticHelper</parameter>
    <parameter key="assetic.helper.static.class">Symfony\Bundle\AsseticBundle\Templating\StaticAsseticHelper</parameter>
    <parameter key="assetic.php_formula_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\AsseticHelperFormulaLoader</parameter>
    <parameter key="assetic.debug">true</parameter>
    <parameter key="assetic.use_controller">true</parameter>
    <parameter key="assetic.enable_profiler">false</parameter>
    <parameter key="assetic.read_from">/var/www/html/siaptb/app/../web</parameter>
    <parameter key="assetic.write_to">/var/www/html/siaptb/app/../web</parameter>
    <parameter key="assetic.variables" type="collection"/>
    <parameter key="assetic.java.bin">/usr/bin/java</parameter>
    <parameter key="assetic.node.bin">/usr/bin/node</parameter>
    <parameter key="assetic.ruby.bin">/usr/bin/ruby</parameter>
    <parameter key="assetic.sass.bin">/usr/bin/sass</parameter>
    <parameter key="assetic.filter.cssrewrite.class">Assetic\Filter\CssRewriteFilter</parameter>
    <parameter key="assetic.twig_extension.functions" type="collection"/>
    <parameter key="assetic.controller.class">Symfony\Bundle\AsseticBundle\Controller\AsseticController</parameter>
    <parameter key="assetic.routing_loader.class">Symfony\Bundle\AsseticBundle\Routing\AsseticLoader</parameter>
    <parameter key="assetic.cache.class">Assetic\Cache\FilesystemCache</parameter>
    <parameter key="assetic.use_controller_worker.class">Symfony\Bundle\AsseticBundle\Factory\Worker\UseControllerWorker</parameter>
    <parameter key="assetic.request_listener.class">Symfony\Bundle\AsseticBundle\EventListener\RequestListener</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="json" type="collection">
        <parameter key="class">Sonata\Doctrine\Types\JsonType</parameter>
        <parameter key="commented">true</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\ORM\Mapping\Driver\DriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/var/www/html/siaptb/app/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="sonata.core.flashmessage.manager.class">Sonata\CoreBundle\FlashMessage\FlashManager</parameter>
    <parameter key="sonata.core.twig.extension.flashmessage.class">Sonata\CoreBundle\Twig\Extension\FlashMessageExtension</parameter>
    <parameter key="sonata.block.service.container.class">Sonata\BlockBundle\Block\Service\ContainerBlockService</parameter>
    <parameter key="sonata.block.service.empty.class">Sonata\BlockBundle\Block\Service\EmptyBlockService</parameter>
    <parameter key="sonata.block.service.text.class">Sonata\BlockBundle\Block\Service\TextBlockService</parameter>
    <parameter key="sonata.block.service.rss.class">Sonata\BlockBundle\Block\Service\RssBlockService</parameter>
    <parameter key="sonata.block.service.menu.class">Sonata\BlockBundle\Block\Service\MenuBlockService</parameter>
    <parameter key="sonata.block.exception.strategy.manager.class">Sonata\BlockBundle\Exception\Strategy\StrategyManager</parameter>
    <parameter key="sonata_block.blocks" type="collection">
      <parameter key="sonata.admin.block.admin_list" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.user.block.menu" type="collection">
        <parameter key="contexts" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.user.block.account" type="collection">
        <parameter key="contexts" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.text" type="collection">
        <parameter key="contexts" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.rss" type="collection">
        <parameter key="contexts" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata_block.blocks_by_class" type="collection"/>
    <parameter key="sonata_block.cache_blocks" type="collection">
      <parameter key="by_type" type="collection">
        <parameter key="sonata.admin.block.admin_list">sonata.cache.noop</parameter>
        <parameter key="sonata.user.block.menu">sonata.cache.noop</parameter>
        <parameter key="sonata.user.block.account">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.text">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.rss">sonata.cache.noop</parameter>
      </parameter>
    </parameter>
    <parameter key="knp_menu.factory.class">Knp\Menu\Silex\RouterAwareFactory</parameter>
    <parameter key="knp_menu.helper.class">Knp\Menu\Twig\Helper</parameter>
    <parameter key="knp_menu.menu_provider.chain.class">Knp\Menu\Provider\ChainProvider</parameter>
    <parameter key="knp_menu.menu_provider.container_aware.class">Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.menu_provider.builder_alias.class">Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider</parameter>
    <parameter key="knp_menu.renderer_provider.class">Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.renderer.list.class">Knp\Menu\Renderer\ListRenderer</parameter>
    <parameter key="knp_menu.renderer.list.options" type="collection"/>
    <parameter key="knp_menu.twig.extension.class">Knp\Menu\Twig\MenuExtension</parameter>
    <parameter key="knp_menu.renderer.twig.class">Knp\Menu\Renderer\TwigRenderer</parameter>
    <parameter key="knp_menu.renderer.twig.options" type="collection"/>
    <parameter key="knp_menu.renderer.twig.template">knp_menu.html.twig</parameter>
    <parameter key="knp_menu.default_renderer">twig</parameter>
    <parameter key="sensio_framework_extra.view.guesser.class">Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser</parameter>
    <parameter key="sensio_framework_extra.controller.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_dir.class">Symfony\Component\Routing\Loader\AnnotationDirectoryLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_file.class">Symfony\Component\Routing\Loader\AnnotationFileLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_class.class">Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader</parameter>
    <parameter key="sensio_framework_extra.converter.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</parameter>
    <parameter key="sensio_framework_extra.converter.manager.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager</parameter>
    <parameter key="sensio_framework_extra.converter.doctrine.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter</parameter>
    <parameter key="sensio_framework_extra.converter.datetime.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter</parameter>
    <parameter key="sensio_framework_extra.view.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</parameter>
    <parameter key="sonata.admin.manipulator.acl.object.orm.class">Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator</parameter>
    <parameter key="sonata_doctrine_orm_admin.entity_manager">null</parameter>
    <parameter key="sonata_doctrine_orm_admin.templates" type="collection">
      <parameter key="types" type="collection">
        <parameter key="list" type="collection">
          <parameter key="array">SonataAdminBundle:CRUD:list_array.html.twig</parameter>
          <parameter key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</parameter>
          <parameter key="date">SonataIntlBundle:CRUD:list_date.html.twig</parameter>
          <parameter key="time">SonataAdminBundle:CRUD:list_time.html.twig</parameter>
          <parameter key="datetime">SonataIntlBundle:CRUD:list_datetime.html.twig</parameter>
          <parameter key="text">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="email">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</parameter>
          <parameter key="string">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="smallint">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="bigint">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="integer">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="decimal">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="currency">SonataIntlBundle:CRUD:list_currency.html.twig</parameter>
          <parameter key="percent">SonataIntlBundle:CRUD:list_percent.html.twig</parameter>
          <parameter key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</parameter>
          <parameter key="url">SonataAdminBundle:CRUD:list_url.html.twig</parameter>
        </parameter>
        <parameter key="show" type="collection">
          <parameter key="array">SonataAdminBundle:CRUD:show_array.html.twig</parameter>
          <parameter key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</parameter>
          <parameter key="date">SonataIntlBundle:CRUD:show_date.html.twig</parameter>
          <parameter key="time">SonataAdminBundle:CRUD:show_time.html.twig</parameter>
          <parameter key="datetime">SonataIntlBundle:CRUD:show_datetime.html.twig</parameter>
          <parameter key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</parameter>
          <parameter key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="smallint">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="bigint">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="integer">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="decimal">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="currency">SonataIntlBundle:CRUD:show_currency.html.twig</parameter>
          <parameter key="percent">SonataIntlBundle:CRUD:show_percent.html.twig</parameter>
          <parameter key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</parameter>
          <parameter key="url">SonataAdminBundle:CRUD:show_url.html.twig</parameter>
          <parameter key="file">ApplicationCoreBundle:CRUD:FieldType/show_field_file.html.twig</parameter>
          <parameter key="html">MinsalSiapsBundle:CRUD:Type/show_field_html.html.twig</parameter>
        </parameter>
      </parameter>
      <parameter key="form" type="collection">
        <parameter>MinsalSiapsBundle:Form:form_admin_fields.html.twig</parameter>
      </parameter>
      <parameter key="filter" type="collection">
        <parameter>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.templates" type="collection">
      <parameter key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</parameter>
      <parameter key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</parameter>
      <parameter key="layout">SonataAdminBundle::layout.html.twig</parameter>
      <parameter key="ajax">SonataAdminBundle::ajax_layout.html.twig</parameter>
      <parameter key="list">SonataAdminBundle:CRUD:list.html.twig</parameter>
      <parameter key="show">SonataAdminBundle:CRUD:show.html.twig</parameter>
      <parameter key="edit">SonataAdminBundle:CRUD:edit.html.twig</parameter>
      <parameter key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</parameter>
      <parameter key="add_block">SonataAdminBundle:Core:add_block.html.twig</parameter>
      <parameter key="search">SonataAdminBundle:Core:search.html.twig</parameter>
      <parameter key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      <parameter key="preview">SonataAdminBundle:CRUD:preview.html.twig</parameter>
      <parameter key="history">SonataAdminBundle:CRUD:history.html.twig</parameter>
      <parameter key="acl">SonataAdminBundle:CRUD:acl.html.twig</parameter>
      <parameter key="action">SonataAdminBundle:CRUD:action.html.twig</parameter>
      <parameter key="select">SonataAdminBundle:CRUD:list__select.html.twig</parameter>
      <parameter key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</parameter>
      <parameter key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</parameter>
      <parameter key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</parameter>
      <parameter key="delete">SonataAdminBundle:CRUD:delete.html.twig</parameter>
      <parameter key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</parameter>
      <parameter key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</parameter>
      <parameter key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</parameter>
      <parameter key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</parameter>
      <parameter key="pager_links">SonataAdminBundle:Pager:links.html.twig</parameter>
      <parameter key="pager_results">SonataAdminBundle:Pager:results.html.twig</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.admin_services" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_groups" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_blocks" type="collection">
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="type">sonata.admin.block.admin_list</parameter>
        <parameter key="settings" type="collection"/>
        <parameter key="class">col-md-4</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.security.acl_user_manager">fos_user.user_manager</parameter>
    <parameter key="sonata.admin.configuration.security.information" type="collection">
      <parameter key="EDIT" type="collection">
        <parameter>EDIT</parameter>
      </parameter>
      <parameter key="LIST" type="collection">
        <parameter>LIST</parameter>
      </parameter>
      <parameter key="CREATE" type="collection">
        <parameter>CREATE</parameter>
      </parameter>
      <parameter key="VIEW" type="collection">
        <parameter>VIEW</parameter>
      </parameter>
      <parameter key="DELETE" type="collection">
        <parameter>DELETE</parameter>
      </parameter>
      <parameter key="EXPORT" type="collection">
        <parameter>EXPORT</parameter>
      </parameter>
      <parameter key="OPERATOR" type="collection">
        <parameter>OPERATOR</parameter>
      </parameter>
      <parameter key="MASTER" type="collection">
        <parameter>MASTER</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.admin_permissions" type="collection">
      <parameter>CREATE</parameter>
      <parameter>LIST</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>EXPORT</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.object_permissions" type="collection">
      <parameter>VIEW</parameter>
      <parameter>EDIT</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
      <parameter>OWNER</parameter>
    </parameter>
    <parameter key="sonata.admin.security.handler.noop.class">Sonata\AdminBundle\Security\Handler\NoopSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.role.class">Sonata\AdminBundle\Security\Handler\RoleSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.acl.class">Sonata\AdminBundle\Security\Handler\AclSecurityHandler</parameter>
    <parameter key="sonata.admin.security.mask.builder.class">Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</parameter>
    <parameter key="sonata.admin.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminAclManipulator</parameter>
    <parameter key="sonata.admin.object.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminObjectAclManipulator</parameter>
    <parameter key="sonata.admin.extension.map" type="collection">
      <parameter key="admins" type="collection"/>
      <parameter key="excludes" type="collection"/>
      <parameter key="implements" type="collection"/>
      <parameter key="extends" type="collection"/>
      <parameter key="instanceof" type="collection"/>
    </parameter>
    <parameter key="sonata.admin.configuration.filters.persist">false</parameter>
    <parameter key="fos_user.validator.password.class">FOS\UserBundle\Validator\PasswordValidator</parameter>
    <parameter key="fos_user.validator.unique.class">FOS\UserBundle\Validator\UniqueValidator</parameter>
    <parameter key="fos_user.security.interactive_login_listener.class">FOS\UserBundle\Security\InteractiveLoginListener</parameter>
    <parameter key="fos_user.security.login_manager.class">FOS\UserBundle\Security\LoginManager</parameter>
    <parameter key="fos_user.resetting.email.template">FOSUserBundle:Resetting:email.txt.twig</parameter>
    <parameter key="fos_user.registration.confirmation.template">FOSUserBundle:Registration:email.txt.twig</parameter>
    <parameter key="fos_user.storage">orm</parameter>
    <parameter key="fos_user.firewall_name">main</parameter>
    <parameter key="fos_user.model_manager_name">null</parameter>
    <parameter key="fos_user.model.user.class">Application\Sonata\UserBundle\Entity\User</parameter>
    <parameter key="fos_user.template.engine">twig</parameter>
    <parameter key="fos_user.profile.form.type">fos_user_profile</parameter>
    <parameter key="fos_user.profile.form.name">fos_user_profile_form</parameter>
    <parameter key="fos_user.profile.form.validation_groups" type="collection">
      <parameter>Authentication</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.from_email" type="collection">
      <parameter key="webmaster@example.com">webmaster</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.enabled">false</parameter>
    <parameter key="fos_user.registration.form.type">fos_user_registration</parameter>
    <parameter key="fos_user.registration.form.name">fos_user_registration_form</parameter>
    <parameter key="fos_user.registration.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.change_password.form.type">fos_user_change_password</parameter>
    <parameter key="fos_user.change_password.form.name">fos_user_change_password_form</parameter>
    <parameter key="fos_user.change_password.form.validation_groups" type="collection">
      <parameter>ChangePassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.resetting.email.from_email" type="collection">
      <parameter key="webmaster@example.com">webmaster</parameter>
    </parameter>
    <parameter key="fos_user.resetting.token_ttl">86400</parameter>
    <parameter key="fos_user.resetting.form.type">fos_user_resetting</parameter>
    <parameter key="fos_user.resetting.form.name">fos_user_resetting_form</parameter>
    <parameter key="fos_user.resetting.form.validation_groups" type="collection">
      <parameter>ResetPassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.group_manager.class">FOS\UserBundle\Doctrine\GroupManager</parameter>
    <parameter key="fos_user.model.group.class">Application\Sonata\UserBundle\Entity\Group</parameter>
    <parameter key="fos_user.group.form.type">fos_user_group</parameter>
    <parameter key="fos_user.group.form.name">fos_user_group_form</parameter>
    <parameter key="fos_user.group.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="sonata.user.admin.groupname">sonata_user</parameter>
    <parameter key="sonata.user.admin.user.class">Sonata\UserBundle\Admin\Entity\UserAdmin</parameter>
    <parameter key="sonata.user.admin.group.class">Sonata\UserBundle\Admin\Entity\GroupAdmin</parameter>
    <parameter key="sonata.user.admin.user.entity">Application\Sonata\UserBundle\Entity\User</parameter>
    <parameter key="sonata.user.admin.group.entity">Application\Sonata\UserBundle\Entity\Group</parameter>
    <parameter key="sonata.user.admin.user.translation_domain">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.group.translation_domain">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.user.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.user.admin.group.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.user.default_avatar">bundles/sonatauser/default_avatar.png</parameter>
    <parameter key="sonata.user.impersonating">false</parameter>
    <parameter key="sonata.user.google.authenticator.enabled">false</parameter>
    <parameter key="sonata.user.profile.form.type">sonata_user_profile</parameter>
    <parameter key="sonata.user.profile.form.name">sonata_user_profile_form</parameter>
    <parameter key="sonata.user.profile.form.validation_groups" type="collection">
      <parameter>Profile</parameter>
    </parameter>
    <parameter key="sonata.user.register.confirm.redirect_route">sonata_user_profile_show</parameter>
    <parameter key="sonata.user.register.confirm.redirect_route_params" type="collection"/>
    <parameter key="sonata.user.configuration.profile_blocks" type="collection">
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="settings" type="collection">
          <parameter key="content">&lt;h2&gt;Welcome!&lt;/h2&gt; This is a sample user profile dashboard, feel free to override it in the configuration!</parameter>
        </parameter>
        <parameter key="type">sonata.block.service.text</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.user.registration.form.options" type="collection"/>
    <parameter key="sonata.user.registration.form.type">sonata_user_registration</parameter>
    <parameter key="sonata.user.registration.form.name">sonata_user_registration_form</parameter>
    <parameter key="sonata.user.registration.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="templating.helper.markdown.class">Knp\Bundle\MarkdownBundle\Helper\MarkdownHelper</parameter>
    <parameter key="ivory_ck_editor.helper.assets_version_trimer.class">Ivory\CKEditorBundle\Helper\AssetsVersionTrimerHelper</parameter>
    <parameter key="ivory_ck_editor.helper.templating.class">Ivory\CKEditorBundle\Helper\CKEditorHelper</parameter>
    <parameter key="ivory_ck_editor.form.type.class">Ivory\CKEditorBundle\Form\Type\CKEditorType</parameter>
    <parameter key="ivory_ck_editor.config_manager.class">Ivory\CKEditorBundle\Model\ConfigManager</parameter>
    <parameter key="ivory_ck_editor.plugin_manager.class">Ivory\CKEditorBundle\Model\PluginManager</parameter>
    <parameter key="ivory_ck_editor.styles_set_manager.class">Ivory\CKEditorBundle\Model\StylesSetManager</parameter>
    <parameter key="ivory_ck_editor.template_manager.class">Ivory\CKEditorBundle\Model\TemplateManager</parameter>
    <parameter key="ivory_ck_editor.twig_extension.class">Ivory\CKEditorBundle\Twig\CKEditorExtension</parameter>
    <parameter key="ivory_ck_editor.form.type.enable">true</parameter>
    <parameter key="ivory_ck_editor.form.type.base_path">bundles/ivoryckeditor/</parameter>
    <parameter key="ivory_ck_editor.form.type.js_path">bundles/ivoryckeditor/ckeditor.js</parameter>
    <parameter key="sonata.formatter.text.markdown.class">Sonata\FormatterBundle\Formatter\MarkdownFormatter</parameter>
    <parameter key="sonata.formatter.text.text.class">Sonata\FormatterBundle\Formatter\TextFormatter</parameter>
    <parameter key="sonata.formatter.text.raw.class">Sonata\FormatterBundle\Formatter\RawFormatter</parameter>
    <parameter key="sonata.formatter.text.twigengine.class">Sonata\FormatterBundle\Formatter\TwigFormatter</parameter>
    <parameter key="sonata.formatter.block.formatter.class">Sonata\FormatterBundle\Block\FormatterBlockService</parameter>
    <parameter key="sonata.formatter.ckeditor.configuration.templates" type="collection">
      <parameter key="browser">SonataFormatterBundle:Ckeditor:browser.html.twig</parameter>
      <parameter key="upload">SonataFormatterBundle:Ckeditor:upload.html.twig</parameter>
    </parameter>
    <parameter key="sonata.intl.locale_detector.request.class">Sonata\IntlBundle\Locale\RequestDetector</parameter>
    <parameter key="sonata.intl.locale_detector.session.class">Sonata\IntlBundle\Locale\SessionDetector</parameter>
    <parameter key="sonata.intl.templating.helper.locale.class">Sonata\IntlBundle\Templating\Helper\LocaleHelper</parameter>
    <parameter key="sonata.intl.templating.helper.number.class">Sonata\IntlBundle\Templating\Helper\NumberHelper</parameter>
    <parameter key="sonata.intl.templating.helper.datetime.class">Sonata\IntlBundle\Templating\Helper\DateTimeHelper</parameter>
    <parameter key="sonata.intl.timezone_detector.chain.class">Sonata\IntlBundle\Timezone\ChainTimezoneDetector</parameter>
    <parameter key="sonata.intl.timezone_detector.user.class">Sonata\IntlBundle\Timezone\UserBasedTimezoneDetector</parameter>
    <parameter key="sonata.intl.timezone_detector.locale.class">Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector</parameter>
    <parameter key="sonata.intl.twig.helper.locale.class">Sonata\IntlBundle\Twig\Extension\LocaleExtension</parameter>
    <parameter key="sonata.intl.twig.helper.number.class">Sonata\IntlBundle\Twig\Extension\NumberExtension</parameter>
    <parameter key="sonata.intl.twig.helper.datetime.class">Sonata\IntlBundle\Twig\Extension\DateTimeExtension</parameter>
    <parameter key="sonata_intl.timezone.detectors" type="collection">
      <parameter>sonata.intl.timezone_detector.user</parameter>
      <parameter>sonata.intl.timezone_detector.locale</parameter>
    </parameter>
    <parameter key="jms_serializer.metadata.file_locator.class">Metadata\Driver\FileLocator</parameter>
    <parameter key="jms_serializer.metadata.annotation_driver.class">JMS\Serializer\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="jms_serializer.metadata.chain_driver.class">Metadata\Driver\DriverChain</parameter>
    <parameter key="jms_serializer.metadata.yaml_driver.class">JMS\Serializer\Metadata\Driver\YamlDriver</parameter>
    <parameter key="jms_serializer.metadata.xml_driver.class">JMS\Serializer\Metadata\Driver\XmlDriver</parameter>
    <parameter key="jms_serializer.metadata.php_driver.class">JMS\Serializer\Metadata\Driver\PhpDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrineTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_phpcr_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="jms_serializer.metadata.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="jms_serializer.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="jms_serializer.event_dispatcher.class">JMS\Serializer\EventDispatcher\LazyEventDispatcher</parameter>
    <parameter key="jms_serializer.camel_case_naming_strategy.class">JMS\Serializer\Naming\CamelCaseNamingStrategy</parameter>
    <parameter key="jms_serializer.serialized_name_annotation_strategy.class">JMS\Serializer\Naming\SerializedNameAnnotationStrategy</parameter>
    <parameter key="jms_serializer.cache_naming_strategy.class">JMS\Serializer\Naming\CacheNamingStrategy</parameter>
    <parameter key="jms_serializer.doctrine_object_constructor.class">JMS\Serializer\Construction\DoctrineObjectConstructor</parameter>
    <parameter key="jms_serializer.unserialize_object_constructor.class">JMS\Serializer\Construction\UnserializeObjectConstructor</parameter>
    <parameter key="jms_serializer.version_exclusion_strategy.class">JMS\Serializer\Exclusion\VersionExclusionStrategy</parameter>
    <parameter key="jms_serializer.serializer.class">JMS\Serializer\Serializer</parameter>
    <parameter key="jms_serializer.twig_extension.class">JMS\Serializer\Twig\SerializerExtension</parameter>
    <parameter key="jms_serializer.templating.helper.class">JMS\SerializerBundle\Templating\SerializerHelper</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.class">JMS\Serializer\JsonSerializationVisitor</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.options">0</parameter>
    <parameter key="jms_serializer.json_deserialization_visitor.class">JMS\Serializer\JsonDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_serialization_visitor.class">JMS\Serializer\XmlSerializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.class">JMS\Serializer\XmlDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.doctype_whitelist" type="collection"/>
    <parameter key="jms_serializer.yaml_serialization_visitor.class">JMS\Serializer\YamlSerializationVisitor</parameter>
    <parameter key="jms_serializer.handler_registry.class">JMS\Serializer\Handler\LazyHandlerRegistry</parameter>
    <parameter key="jms_serializer.datetime_handler.class">JMS\Serializer\Handler\DateHandler</parameter>
    <parameter key="jms_serializer.array_collection_handler.class">JMS\Serializer\Handler\ArrayCollectionHandler</parameter>
    <parameter key="jms_serializer.php_collection_handler.class">JMS\Serializer\Handler\PhpCollectionHandler</parameter>
    <parameter key="jms_serializer.form_error_handler.class">JMS\Serializer\Handler\FormErrorHandler</parameter>
    <parameter key="jms_serializer.constraint_violation_handler.class">JMS\Serializer\Handler\ConstraintViolationHandler</parameter>
    <parameter key="jms_serializer.doctrine_proxy_subscriber.class">JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber</parameter>
    <parameter key="jms_serializer.stopwatch_subscriber.class">JMS\SerializerBundle\Serializer\StopwatchEventSubscriber</parameter>
    <parameter key="jms_serializer.infer_types_from_doctrine_metadata">true</parameter>
    <parameter key="jms_aop.cache_dir">/var/www/html/siaptb/app/cache/dev/jms_aop</parameter>
    <parameter key="jms_aop.interceptor_loader.class">JMS\AopBundle\Aop\InterceptorLoader</parameter>
    <parameter key="jms_di_extra.metadata.driver.annotation_driver.class">JMS\DiExtraBundle\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="jms_di_extra.metadata.driver.configured_controller_injections.class">JMS\DiExtraBundle\Metadata\Driver\ConfiguredControllerInjectionsDriver</parameter>
    <parameter key="jms_di_extra.metadata.driver.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="jms_di_extra.metadata.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="jms_di_extra.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="jms_di_extra.metadata.converter.class">JMS\DiExtraBundle\Metadata\MetadataConverter</parameter>
    <parameter key="jms_di_extra.controller_resolver.class">JMS\DiExtraBundle\HttpKernel\ControllerResolver</parameter>
    <parameter key="jms_di_extra.controller_injectors_warmer.class">JMS\DiExtraBundle\HttpKernel\ControllerInjectorsWarmer</parameter>
    <parameter key="jms_di_extra.all_bundles">false</parameter>
    <parameter key="jms_di_extra.bundles" type="collection"/>
    <parameter key="jms_di_extra.directories" type="collection"/>
    <parameter key="jms_di_extra.cache_dir">/var/www/html/siaptb/app/cache/dev/jms_diextra</parameter>
    <parameter key="jms_di_extra.disable_grep">false</parameter>
    <parameter key="jms_di_extra.doctrine_integration">true</parameter>
    <parameter key="jms_di_extra.cache_warmer.controller_file_blacklist" type="collection"/>
    <parameter key="jms_di_extra.doctrine_integration.entity_manager.file">/var/www/html/siaptb/app/cache/dev/jms_diextra/doctrine/EntityManager_59480f3fc0c25.php</parameter>
    <parameter key="jms_di_extra.doctrine_integration.entity_manager.class">EntityManager59480f3fc0c25_546a8d27f194334ee012bfe64f629947b07e4919\__CG__\Doctrine\ORM\EntityManager</parameter>
    <parameter key="security.secured_services" type="collection"/>
    <parameter key="security.access.method_interceptor.class">JMS\SecurityExtraBundle\Security\Authorization\Interception\MethodSecurityInterceptor</parameter>
    <parameter key="security.access.method_access_control" type="collection"/>
    <parameter key="security.access.remembering_access_decision_manager.class">JMS\SecurityExtraBundle\Security\Authorization\RememberingAccessDecisionManager</parameter>
    <parameter key="security.access.run_as_manager.class">JMS\SecurityExtraBundle\Security\Authorization\RunAsManager</parameter>
    <parameter key="security.authentication.provider.run_as.class">JMS\SecurityExtraBundle\Security\Authentication\Provider\RunAsAuthenticationProvider</parameter>
    <parameter key="security.run_as.key">RunAsToken</parameter>
    <parameter key="security.run_as.role_prefix">ROLE_</parameter>
    <parameter key="security.access.after_invocation_manager.class">JMS\SecurityExtraBundle\Security\Authorization\AfterInvocation\AfterInvocationManager</parameter>
    <parameter key="security.access.after_invocation.acl_provider.class">JMS\SecurityExtraBundle\Security\Authorization\AfterInvocation\AclAfterInvocationProvider</parameter>
    <parameter key="security.access.iddqd_voter.class">JMS\SecurityExtraBundle\Security\Authorization\Voter\IddqdVoter</parameter>
    <parameter key="security.extra.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="security.extra.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="security.extra.driver_chain.class">Metadata\Driver\DriverChain</parameter>
    <parameter key="security.extra.annotation_driver.class">JMS\SecurityExtraBundle\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="security.extra.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="security.access.secure_all_services">false</parameter>
    <parameter key="security.extra.cache_dir">/var/www/html/siaptb/app/cache/dev/jms_security</parameter>
    <parameter key="security.acl.permission_evaluator.class">JMS\SecurityExtraBundle\Security\Acl\Expression\PermissionEvaluator</parameter>
    <parameter key="security.acl.has_permission_compiler.class">JMS\SecurityExtraBundle\Security\Acl\Expression\HasPermissionFunctionCompiler</parameter>
    <parameter key="security.expressions.voter.class">JMS\SecurityExtraBundle\Security\Authorization\Expression\LazyLoadingExpressionVoter</parameter>
    <parameter key="security.expressions.handler.class">JMS\SecurityExtraBundle\Security\Authorization\Expression\ContainerAwareExpressionHandler</parameter>
    <parameter key="security.expressions.compiler.class">JMS\SecurityExtraBundle\Security\Authorization\Expression\ExpressionCompiler</parameter>
    <parameter key="security.expressions.expression.class">JMS\SecurityExtraBundle\Security\Authorization\Expression\Expression</parameter>
    <parameter key="security.expressions.variable_compiler.class">JMS\SecurityExtraBundle\Security\Authorization\Expression\Compiler\ContainerAwareVariableCompiler</parameter>
    <parameter key="security.expressions.parameter_compiler.class">JMS\SecurityExtraBundle\Security\Authorization\Expression\Compiler\ParameterExpressionCompiler</parameter>
    <parameter key="security.expressions.reverse_interpreter.class">JMS\SecurityExtraBundle\Security\Authorization\Expression\ReverseInterpreter</parameter>
    <parameter key="security.extra.config_driver.class">JMS\SecurityExtraBundle\Metadata\Driver\ConfigDriver</parameter>
    <parameter key="security.extra.twig_extension.class">JMS\SecurityExtraBundle\Twig\SecurityExtension</parameter>
    <parameter key="security.authenticated_voter.disabled">false</parameter>
    <parameter key="security.role_voter.disabled">false</parameter>
    <parameter key="security.acl_voter.disabled">false</parameter>
    <parameter key="security.extra.iddqd_ignore_roles" type="collection">
      <parameter>ROLE_PREVIOUS_ADMIN</parameter>
    </parameter>
    <parameter key="security.iddqd_aliases" type="collection"/>
    <parameter key="fos_js_routing.extractor.class">FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor</parameter>
    <parameter key="fos_js_routing.controller.class">FOS\JsRoutingBundle\Controller\Controller</parameter>
    <parameter key="fos_js_routing.cache_control" type="collection">
      <parameter key="enabled">false</parameter>
    </parameter>
    <parameter key="fullcalendar.event.class">ADesigns\CalendarBundle\Entity\EventEntity</parameter>
    <parameter key="fullcalendar.loader.event">calendar.load_events</parameter>
    <parameter key="endroid_qrcode.size">10</parameter>
    <parameter key="endroid_qrcode.padding">10</parameter>
    <parameter key="endroid_qrcode.extension">png</parameter>
    <parameter key="endroid_qrcode.error_correction_level">high</parameter>
    <parameter key="endroid_qrcode.foreground_color" type="collection">
      <parameter key="r">0</parameter>
      <parameter key="g">0</parameter>
      <parameter key="b">0</parameter>
      <parameter key="a">0</parameter>
    </parameter>
    <parameter key="endroid_qrcode.background_color" type="collection">
      <parameter key="r">255</parameter>
      <parameter key="g">255</parameter>
      <parameter key="b">255</parameter>
      <parameter key="a">0</parameter>
    </parameter>
    <parameter key="knp_snappy.pdf.internal_generator.class">Knp\Snappy\Pdf</parameter>
    <parameter key="knp_snappy.pdf.class">Knp\Bundle\SnappyBundle\Snappy\LoggableGenerator</parameter>
    <parameter key="knp_snappy.pdf.binary">wkhtmltopdf</parameter>
    <parameter key="knp_snappy.pdf.options" type="collection"/>
    <parameter key="knp_snappy.pdf.env" type="collection"/>
    <parameter key="knp_snappy.image.internal_generator.class">Knp\Snappy\Image</parameter>
    <parameter key="knp_snappy.image.class">Knp\Bundle\SnappyBundle\Snappy\LoggableGenerator</parameter>
    <parameter key="knp_snappy.image.binary">wkhtmltoimage</parameter>
    <parameter key="knp_snappy.image.options" type="collection"/>
    <parameter key="knp_snappy.image.env" type="collection"/>
    <parameter key="time.templating.helper.time.class">Knp\Bundle\TimeBundle\Templating\Helper\TimeHelper</parameter>
    <parameter key="time.datetime_formatter.class">Knp\Bundle\TimeBundle\DateTimeFormatter</parameter>
    <parameter key="time.twig.extension.time.class">Knp\Bundle\TimeBundle\Twig\Extension\TimeExtension</parameter>
    <parameter key="web_profiler.controller.profiler.class">Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController</parameter>
    <parameter key="web_profiler.controller.router.class">Symfony\Bundle\WebProfilerBundle\Controller\RouterController</parameter>
    <parameter key="web_profiler.controller.exception.class">Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController</parameter>
    <parameter key="twig.extension.webprofiler.class">Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension</parameter>
    <parameter key="web_profiler.debug_toolbar.position">bottom</parameter>
    <parameter key="web_profiler.debug_toolbar.class">Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="sensio_distribution.webconfigurator.class">Sensio\Bundle\DistributionBundle\Configurator\Configurator</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>DoctrineBundle:Collector:db</parameter>
      </parameter>
      <parameter key="sonata.block.data_collector" type="collection">
        <parameter>block</parameter>
        <parameter>SonataBlockBundle:Profiler:block.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection"/>
  </parameters>
  <services>
    <service id="sonata.admin.establecimiento" class="Minsal\SiapsBundle\Admin\CtlEstablecimientoAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="AD-1-Administración" label="Configurar Establecimiento"/>
      <argument>sonata.admin.establecimiento</argument>
      <argument>Minsal\SiapsBundle\Entity\CtlEstablecimiento</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Configurar Establecimiento</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.modalidadestablecimiento" class="Minsal\SiapsBundle\Admin\MntModalidadEstablecimientoAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="AD-1-Administración" label="Modalidad del Establecimiento"/>
      <argument>sonata.admin.modalidadestablecimiento</argument>
      <argument>Minsal\SiapsBundle\Entity\MntModalidadEstablecimiento</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Modalidad del Establecimiento</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.areamodalidadestablecimiento" class="Minsal\SiapsBundle\Admin\MntAreaModEstabAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="AD-1-Administración" label="Áreas del Establecimiento"/>
      <argument>sonata.admin.areamodalidadestablecimiento</argument>
      <argument>Minsal\SiapsBundle\Entity\MntAreaModEstab</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Áreas del Establecimiento</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.ambientes" class="Minsal\SiapsBundle\Admin\MntAtenAreaModEstabAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="AD-1-Administración" label="Servicios de Hospitalización"/>
      <argument>sonata.admin.ambientes</argument>
      <argument>Minsal\SiapsBundle\Entity\MntAtenAreaModEstab</argument>
      <argument>MinsalSiapsBundle:MntAtenAreaModEstabAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Servicios de Hospitalización</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.manualusuario" class="Minsal\SiapsBundle\Admin\MntManualUsuarioAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="AD-1-Administración" label="Manuales de Usuario"/>
      <argument>sonata.admin.manualusuario</argument>
      <argument>Minsal\SiapsBundle\Entity\MntManualUsuario</argument>
      <argument>MinsalSiapsBundle:MntManualUsuarioAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Manuales de Usuario</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.conexion" class="Minsal\SiapsBundle\Admin\MntConexionAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="AD-1-Administración" label="Conexiones a bases regionales"/>
      <argument>sonata.admin.conexion</argument>
      <argument>Minsal\SiapsBundle\Entity\MntConexion</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Conexiones a bases regionales</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.mntpaciente" class="Minsal\SiapsBundle\Admin\MntPacienteAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="IP-1-Identificación Paciente" label="Buscar Paciente"/>
      <argument>sonata.admin.mntpaciente</argument>
      <argument>Minsal\SiapsBundle\Entity\MntPaciente</argument>
      <argument>MinsalSiapsBundle:MntPacienteAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Buscar Paciente</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.secingreso" class="Minsal\SeguimientoBundle\Admin\SecIngresoAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="IP-1-Identificación Paciente" label="Consultar Ingresos"/>
      <argument>sonata.admin.secingreso</argument>
      <argument>Minsal\SeguimientoBundle\Entity\SecIngreso</argument>
      <argument>MinsalSeguimientoBundle:SecIngresoAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Consultar Ingresos</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.secemergencia" class="Minsal\SeguimientoBundle\Admin\SecEmergenciaAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="IP-1-Identificación Paciente" label="Consultar Emergencias"/>
      <argument>sonata.admin.secemergencia</argument>
      <argument>Minsal\SeguimientoBundle\Entity\SecEmergencia</argument>
      <argument>MinsalSeguimientoBundle:SecEmergenciaAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Consultar Emergencias</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.expediente" class="Minsal\SiapsBundle\Admin\MntExpedienteAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="RP-2-Identificación Paciente" label="Expedientes Creados"/>
      <argument>sonata.admin.expediente</argument>
      <argument>Minsal\SiapsBundle\Entity\MntExpediente</argument>
      <argument>MinsalSiapsBundle:MntExpedienteAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Expedientes Creados</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.reporte.ingreso" class="Minsal\SeguimientoBundle\Admin\SecProcedenciaIngresoAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="RP-2-Identificación Paciente" label="Pacientes Ingresados por Fecha"/>
      <argument>sonata.admin.reporte.ingreso</argument>
      <argument>Minsal\SeguimientoBundle\Entity\SecProcedenciaIngreso</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Pacientes Ingresados por Fecha</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.cie10" class="Minsal\SiapsBundle\Admin\MntCie10Admin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="RP-1-Reportes" label="Diágnosticos CIE10"/>
      <argument>sonata.admin.cie10</argument>
      <argument>Minsal\SiapsBundle\Entity\MntCie10</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Diágnosticos CIE10</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.ciq" class="Minsal\SiapsBundle\Admin\MntCiqAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="RP-1-Reportes" label="Prócedimientos Médicos CIE9"/>
      <argument>sonata.admin.ciq</argument>
      <argument>Minsal\SiapsBundle\Entity\MntCiq</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Prócedimientos Médicos CIE9</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.user.admin.user" class="Application\Sonata\UserBundle\Admin\UserAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="US-1-Usuario" label="Usuario" label_catalogue="SonataUserBundle" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.user.admin.user</argument>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setUserManager">
        <argument type="service" id="fos_user.user_manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataUserBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>Usuario</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.user.admin.group" class="Application\Sonata\UserBundle\Admin\GroupAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="US-1-Usuario" label="groups" label_catalogue="SonataUserBundle" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.user.admin.group</argument>
      <argument>Application\Sonata\UserBundle\Entity\Group</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataUserBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabel">
        <argument>groups</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.empleado" class="Minsal\SiapsBundle\Admin\MntEmpleadoAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="US-1-Usuario" label="Médicos"/>
      <argument>sonata.admin.empleado</argument>
      <argument>Minsal\SiapsBundle\Entity\MntEmpleado</argument>
      <argument>MinsalSiapsBundle:MntEmpleadoAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Médicos</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.sechistorialclinico" class="Minsal\SeguimientoBundle\Admin\SecHistorialClinicoAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="HC-1-Historia Clinica" label="Consultar Historial"/>
      <argument>sonata.admin.sechistorialclinico</argument>
      <argument>Minsal\SeguimientoBundle\Entity\SecHistorialClinico</argument>
      <argument>MinsalSeguimientoBundle:SecHistorialClinicoAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Consultar Historial</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.sechistoriallugar" class="Minsal\SeguimientoBundle\Admin\SecHistorialLugarAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard=""/>
      <argument>sonata.admin.sechistoriallugar</argument>
      <argument>Minsal\SeguimientoBundle\Entity\SecHistorialLugar</argument>
      <argument>MinsalSeguimientoBundle:SecHistorialLugarAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>-</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.secmotivoconsulta" class="Minsal\SeguimientoBundle\Admin\SecMotivoConsultaAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard=""/>
      <argument>sonata.admin.secmotivoconsulta</argument>
      <argument>Minsal\SeguimientoBundle\Entity\SecMotivoConsulta</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>-</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.frmformulario" class="Application\CoreBundle\Admin\FrmFormularioAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="AD-1-Administración" label="Generacion Formularios"/>
      <argument>sonata.admin.frmformulario</argument>
      <argument>Application\CoreBundle\Entity\FrmFormulario</argument>
      <argument>ApplicationCoreBundle:FrmFormularioAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Generacion Formularios</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.mntusertour" class="Application\CoreBundle\Admin\MntUserTourAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="AD-1-Administración" label="Tutorial de Usuario" show_in_dashboard=""/>
      <argument>sonata.admin.mntusertour</argument>
      <argument>Application\CoreBundle\Entity\MntUserTour</argument>
      <argument>ApplicationCoreBundle:MntUserTourAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Tutorial de Usuario</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.secantecedentes" class="Minsal\SeguimientoBundle\Admin\SecAntecedentesAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="AD-1-Administración" label="Antecedentes" show_in_dashboard=""/>
      <argument>sonata.admin.secantecedentes</argument>
      <argument>Minsal\SeguimientoBundle\Entity\SecAntecedentes</argument>
      <argument>MinsalSeguimientoBundle:SecAntecedentesAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Antecedentes</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.tarsolicitudfvih" class="Minsal\SeguimientoBundle\Admin\TarSolicitudFvihAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="AD-1-Administración" label="FVIH" show_in_dashboard=""/>
      <argument>sonata.admin.tarsolicitudfvih</argument>
      <argument>Minsal\SeguimientoBundle\Entity\TarSolicitudFvih</argument>
      <argument>MinsalSeguimientoBundle:TarSolicitudFvihAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>FVIH</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.tarsectar" class="Minsal\SeguimientoBundle\Admin\TarSecTarAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="AD-1-Administración" label="Ficha Tar" show_in_dashboard=""/>
      <argument>sonata.admin.tarsectar</argument>
      <argument>Minsal\SeguimientoBundle\Entity\TarSecTar</argument>
      <argument>MinsalSeguimientoBundle:TarSecTarAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Ficha Tar</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="sonata.admin.secremisionpaciente" class="Minsal\SeguimientoBundle\Admin\SecRemisionPacienteAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="AD-1-Administración" label="Remision" show_in_dashboard=""/>
      <argument>sonata.admin.secremisionpaciente</argument>
      <argument>Minsal\SeguimientoBundle\Entity\SecRemisionPaciente</argument>
      <argument>MinsalSeguimientoBundle:SecRemisionPacienteAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Remision</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_farmacia.admin.farm_recetas" class="Minsal\FarmaciaBundle\Admin\FarmRecetasAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="FR-1-Farmacia" label="Consultar Recetas"/>
      <argument>minsal_farmacia.admin.farm_recetas</argument>
      <argument>Minsal\FarmaciaBundle\Entity\FarmRecetas</argument>
      <argument>MinsalFarmaciaBundle:FarmRecetasAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Consultar Recetas</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_farmacia.admin.farm_medicinarecetada" class="Minsal\FarmaciaBundle\Admin\FarmMedicinarecetadaAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="RP-2-Farmacia" label="FarmMedicinarecetada" show_in_dashboard=""/>
      <argument>minsal_farmacia.admin.farm_medicinarecetada</argument>
      <argument>Minsal\FarmaciaBundle\Entity\FarmMedicinarecetada</argument>
      <argument>MinsalFarmaciaBundle:FarmMedicinarecetadaAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>FarmMedicinarecetada</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_farmacia.admin.farm_estados" class="Minsal\FarmaciaBundle\Admin\FarmEstadosAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="RP-2-Farmacia" label="Pacientes y Médicamentos Derivados a Farmacia Especializada"/>
      <argument>minsal_farmacia.admin.farm_estados</argument>
      <argument>Minsal\FarmaciaBundle\Entity\FarmEstados</argument>
      <argument>MinsalFarmaciaBundle:FarmEstadosAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Pacientes y Médicamentos Derivados a Farmacia Especializada</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_siaps.admin.mnt_paciente_referido" class="Minsal\SiapsBundle\Admin\MntPacienteReferidoAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="IP-1-Identificación Paciente" label="Buscar Referencia"/>
      <argument>minsal_siaps.admin.mnt_paciente_referido</argument>
      <argument>Minsal\SiapsBundle\Entity\MntPacienteReferido</argument>
      <argument>MinsalSiapsBundle:MntPacienteReferidoAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Buscar Referencia</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_siaps.admin.mnt_consultorio" class="Minsal\SiapsBundle\Admin\MntConsultorioAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="CT-2-Administración" label="Consultorios"/>
      <argument>minsal_siaps.admin.mnt_consultorio</argument>
      <argument>Minsal\SiapsBundle\Entity\MntConsultorio</argument>
      <argument>MinsalSiapsBundle:MntConsultorioAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Consultorios</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_siaps.admin.mnt_rangohora" class="Minsal\SiapsBundle\Admin\MntRangohoraAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="CT-2-Administración" label="Rango Hora"/>
      <argument>minsal_siaps.admin.mnt_rangohora</argument>
      <argument>Minsal\SiapsBundle\Entity\MntRangohora</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Rango Hora</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_siaps.admin.mnt_procedimiento_establecimiento" class="Minsal\SiapsBundle\Admin\MntProcedimientoEstablecimientoAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="CT-2-Administración" label="Procedimiento"/>
      <argument>minsal_siaps.admin.mnt_procedimiento_establecimiento</argument>
      <argument>Minsal\SiapsBundle\Entity\MntProcedimientoEstablecimiento</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Procedimiento</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_siaps.admin.mnt_tipo_evento" class="Minsal\SiapsBundle\Admin\MntTipoEventoAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="CT-2-Administración" label="Tipos de Evento"/>
      <argument>minsal_siaps.admin.mnt_tipo_evento</argument>
      <argument>Minsal\SiapsBundle\Entity\MntTipoEvento</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Tipos de Evento</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_siaps.admin.mnt_evento" class="Minsal\SiapsBundle\Admin\MntEventoAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="CT-2-Administración" label="Eventos"/>
      <argument>minsal_siaps.admin.mnt_evento</argument>
      <argument>Minsal\SiapsBundle\Entity\MntEvento</argument>
      <argument>MinsalSiapsBundle:MntEventoAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Eventos</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_seguimiento.admin.sec_dato_embarazo" class="Minsal\SeguimientoBundle\Admin\SecDatoEmbarazoAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="SecDatoEmbarazo" show_in_dashboard=""/>
      <argument>minsal_seguimiento.admin.sec_dato_embarazo</argument>
      <argument>Minsal\SeguimientoBundle\Entity\SecDatoEmbarazo</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>SecDatoEmbarazo</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_seguimiento.admin.sec_solicitud_quirurgica" class="Minsal\SeguimientoBundle\Admin\SecSolicitudQuirurgicaAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="SQ-1-Solicitud Quirurgica" label="Solicitud Quirurgica"/>
      <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica</argument>
      <argument>Minsal\SeguimientoBundle\Entity\SecSolicitudQuirurgica</argument>
      <argument>MinsalSeguimientoBundle:SecSolicitudQuirurgicaAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Solicitud Quirurgica</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_seguimiento.admin.sec_solicitud_quirurgica_aptitud" class="Minsal\SeguimientoBundle\Admin\SecSolicitudQuirurgicaAptitudAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="SecSolicitudQuirurgicaAptitud" show_in_dashboard=""/>
      <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica_aptitud</argument>
      <argument>Minsal\SeguimientoBundle\Entity\SecSolicitudQuirurgicaAptitud</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>SecSolicitudQuirurgicaAptitud</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_seguimiento.admin.sec_solicitud_quirurgica_procedimiento" class="Minsal\SeguimientoBundle\Admin\SecSolicitudQuirurgicaProcedimientoAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="SecSolicitudQuirurgicaProcedimiento" show_in_dashboard=""/>
      <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica_procedimiento</argument>
      <argument>Minsal\SeguimientoBundle\Entity\SecSolicitudQuirurgicaProcedimiento</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>SecSolicitudQuirurgicaProcedimiento</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_seguimiento.admin.sec_solicitud_quirurgica_tipo_anestesia" class="Minsal\SeguimientoBundle\Admin\SecSolicitudQuirurgicaTipoAnestesiaAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="admin" label="SecSolicitudQuirurgicaTipoAnestesia" show_in_dashboard=""/>
      <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica_tipo_anestesia</argument>
      <argument>Minsal\SeguimientoBundle\Entity\SecSolicitudQuirurgicaTipoAnestesia</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>SecSolicitudQuirurgicaTipoAnestesia</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="request_listener.service" class="Application\CoreBundle\EventListener\RequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onRouteRequest"/>
      <argument type="service" id="security.context"/>
      <argument type="service" id="router"/>
      <argument type="service" id="session"/>
    </service>
    <service id="session_idle.service" class="Application\CoreBundle\EventListener\SessionOutListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <argument type="service" id="session"/>
      <argument type="service" id="security.context"/>
      <argument type="service" id="router"/>
      <argument>7200</argument>
    </service>
    <service id="calendar.load_events" class="Minsal\SiapsBundle\EventListener\CalendarEventListener">
      <tag name="kernel.event_listener" event="calendar.load_events" method="loadEvents"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="jasper.build.reports" class="Minsal\SiapsBundle\Service\JasperReportService\JasperReportService">
      <argument>jasperuser</argument>
      <argument>jasperpassword</argument>
      <argument>http://localhost:8080/jasperserver/services/repository?wsdl</argument>
    </service>
    <service id="core_user_manager" class="Application\CoreBundle\Security\User\UserProvider">
      <argument type="service" id="fos_user.user_manager"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="core.security.authentication.provider" class="Application\CoreBundle\Security\Authentication\Provider\AuthenticationProvider">
      <argument></argument>
      <argument>/var/www/html/siaptb/app/cache/dev/security/nonces</argument>
      <argument type="service" id="service_container"/>
      <argument>rsa</argument>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="core.security.authentication.listener" class="Application\CoreBundle\Security\Firewall\ListenerInterface">
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>rsa</argument>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="logger"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="core.authentication.handler" class="Application\CoreBundle\Security\Authentication\Handler\AuthenticationHandler">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="logger"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="twig.extension.intl" class="Twig_Extensions_Extension_Intl">
      <tag name="twig.extension"/>
    </service>
    <service id="form.generator.service" class="Application\CoreBundle\Service\FormGeneratorService" scope="prototype">
      <argument type="service" id="service_container"/>
    </service>
    <service id="form.type_extension.help_message" class="Application\CoreBundle\Form\Extension\HelpMessageTypeExtension">
      <tag name="form.type_extension" alias="form"/>
    </service>
    <service id="lab_examnresult" class="Minsal\LaboratorioBundle\Service\ExamnResultService">
      <argument type="service" id="service_container"/>
    </service>
    <service id="hl7.service" class="Minsal\LaboratorioBundle\Service\Hl7Service">
      <argument type="service" id="service_container"/>
    </service>
    <service id="cit_citas_dia.services" class="Minsal\CitasBundle\Service\CitasService">
      <argument type="service" id="service_container"/>
    </service>
    <service id="cit_citas_procedimientos.services" class="Minsal\CitasBundle\Service\CitasProcedimientosService">
      <argument type="service" id="service_container"/>
    </service>
    <service id="mnt_expediente.services" class="Minsal\SiapsBundle\Service\ExpedienteService">
      <argument type="service" id="service_container"/>
    </service>
    <service id="application_core_bundle.file_type_extension" class="Application\CoreBundle\Form\Extension\FileTypeExtension">
      <tag name="form.type_extension" alias="file"/>
    </service>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument>es_SV</argument>
      <argument type="service" id="router" on-invalid="ignore"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="20"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/var/www/html/siaptb/app/Resources</argument>
              </service>
            </argument>
            <argument type="service" id="templating.locator"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="10"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="service_container"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/var/www/html/siaptb/app/Resources</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="doctrine"/>
          </service>
        </argument>
        <argument type="service" id="sonata.admin.route.cache_warmup"/>
        <argument type="service">
          <service class="JMS\DiExtraBundle\HttpKernel\ControllerInjectorsWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="kernel"/>
            <argument type="service" id="jms_di_extra.controller_resolver"/>
            <argument type="collection"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="collection"/>
    </service>
    <service id="request" scope="request" synthetic="true" synchronized="true"/>
    <service id="service_container" synthetic="true"/>
    <service id="kernel" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>/var/www/html/siaptb/app/Resources</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>df1ca40cfc425c4f34e654696720435a044b9ca9</argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\Fragment\FragmentHandler">
      <argument type="collection"/>
      <argument>true</argument>
      <argument type="service" id="request_stack"/>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.inline"/>
      </call>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.hinclude"/>
      </call>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.esi"/>
      </call>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Bundle\FrameworkBundle\Fragment\ContainerAwareHIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_container"/>
      <argument type="service">
        <service class="Symfony\Component\Translation\MessageSelector" public="false"/>
      </argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/html/siaptb/app/cache/dev/translations</argument>
        <argument key="debug">true</argument>
      </argument>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>es_SV</argument>
        </argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf</argument>
        <argument>ca</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf</argument>
        <argument>hu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf</argument>
        <argument>da</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf</argument>
        <argument>de</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf</argument>
        <argument>sv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf</argument>
        <argument>ro</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf</argument>
        <argument>sl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf</argument>
        <argument>mn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf</argument>
        <argument>ru</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf</argument>
        <argument>pt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf</argument>
        <argument>cy</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf</argument>
        <argument>bg</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf</argument>
        <argument>hr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf</argument>
        <argument>lt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf</argument>
        <argument>nl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf</argument>
        <argument>ar</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf</argument>
        <argument>sr_Latn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf</argument>
        <argument>vi</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf</argument>
        <argument>cs</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
        <argument>sr_Cyrl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf</argument>
        <argument>sq</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf</argument>
        <argument>es</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf</argument>
        <argument>tr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf</argument>
        <argument>af</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf</argument>
        <argument>no</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf</argument>
        <argument>he</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf</argument>
        <argument>en</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf</argument>
        <argument>fi</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf</argument>
        <argument>uk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf</argument>
        <argument>pl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf</argument>
        <argument>fa</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf</argument>
        <argument>sk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nb.xlf</argument>
        <argument>nb</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf</argument>
        <argument>hy</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf</argument>
        <argument>zh_CN</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf</argument>
        <argument>eu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf</argument>
        <argument>zh_TW</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf</argument>
        <argument>ja</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf</argument>
        <argument>th</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf</argument>
        <argument>et</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf</argument>
        <argument>lb</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf</argument>
        <argument>gl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf</argument>
        <argument>el</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf</argument>
        <argument>it</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf</argument>
        <argument>pt_BR</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf</argument>
        <argument>id</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf</argument>
        <argument>ca</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf</argument>
        <argument>hu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf</argument>
        <argument>da</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf</argument>
        <argument>de</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf</argument>
        <argument>sv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf</argument>
        <argument>ro</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf</argument>
        <argument>sl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf</argument>
        <argument>mn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf</argument>
        <argument>ru</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf</argument>
        <argument>pt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf</argument>
        <argument>bg</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf</argument>
        <argument>hr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf</argument>
        <argument>lt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf</argument>
        <argument>nl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf</argument>
        <argument>ar</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf</argument>
        <argument>sr_Latn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf</argument>
        <argument>cs</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf</argument>
        <argument>sr_Cyrl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf</argument>
        <argument>es</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf</argument>
        <argument>lv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf</argument>
        <argument>he</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf</argument>
        <argument>en</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf</argument>
        <argument>fi</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf</argument>
        <argument>uk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf</argument>
        <argument>pl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf</argument>
        <argument>fa</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf</argument>
        <argument>sk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nb.xlf</argument>
        <argument>nb</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf</argument>
        <argument>hy</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf</argument>
        <argument>zh_CN</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf</argument>
        <argument>eu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf</argument>
        <argument>ja</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf</argument>
        <argument>et</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf</argument>
        <argument>lb</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf</argument>
        <argument>gl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf</argument>
        <argument>el</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf</argument>
        <argument>it</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf</argument>
        <argument>pt_BR</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf</argument>
        <argument>id</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.el.xlf</argument>
        <argument>el</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pl.xlf</argument>
        <argument>pl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.gl.xlf</argument>
        <argument>gl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pt_BR.xlf</argument>
        <argument>pt_BR</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sl.xlf</argument>
        <argument>sl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pt_PT.xlf</argument>
        <argument>pt_PT</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.da.xlf</argument>
        <argument>da</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fa.xlf</argument>
        <argument>fa</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sv.xlf</argument>
        <argument>sv</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fr.xlf</argument>
        <argument>fr</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.tr.xlf</argument>
        <argument>tr</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sr_Latn.xlf</argument>
        <argument>sr_Latn</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.cs.xlf</argument>
        <argument>cs</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sr_Cyrl.xlf</argument>
        <argument>sr_Cyrl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ru.xlf</argument>
        <argument>ru</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ua.xlf</argument>
        <argument>ua</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ro.xlf</argument>
        <argument>ro</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.it.xlf</argument>
        <argument>it</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.lb.xlf</argument>
        <argument>lb</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.de.xlf</argument>
        <argument>de</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.no.xlf</argument>
        <argument>no</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.nl.xlf</argument>
        <argument>nl</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sk.xlf</argument>
        <argument>sk</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.en.xlf</argument>
        <argument>en</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ar.xlf</argument>
        <argument>ar</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.es.xlf</argument>
        <argument>es</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.hu.xlf</argument>
        <argument>hu</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xlf</argument>
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ca.xlf</argument>
        <argument>ca</argument>
        <argument>security</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ca.xliff</argument>
        <argument>ca</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ru.xliff</argument>
        <argument>ru</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.zh_CN.xliff</argument>
        <argument>zh_CN</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ro.xliff</argument>
        <argument>ro</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pt.xliff</argument>
        <argument>pt</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.uk.xliff</argument>
        <argument>uk</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.cs.xliff</argument>
        <argument>cs</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.lt.xliff</argument>
        <argument>lt</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ja.xliff</argument>
        <argument>ja</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fa.xliff</argument>
        <argument>fa</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.hu.xliff</argument>
        <argument>hu</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.it.xliff</argument>
        <argument>it</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.lb.xliff</argument>
        <argument>lb</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pl.xliff</argument>
        <argument>pl</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.eu.xliff</argument>
        <argument>eu</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.hr.xliff</argument>
        <argument>hr</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.bg.xliff</argument>
        <argument>bg</argument>
        <argument>SonataCoreBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pl.xliff</argument>
        <argument>pl</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.hu.xliff</argument>
        <argument>hu</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ru.xliff</argument>
        <argument>ru</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.lb.xliff</argument>
        <argument>lb</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.it.xliff</argument>
        <argument>it</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.uk.xliff</argument>
        <argument>uk</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.lt.xliff</argument>
        <argument>lt</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ja.xliff</argument>
        <argument>ja</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.eu.xliff</argument>
        <argument>eu</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ca.xliff</argument>
        <argument>ca</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.zh_CN.xliff</argument>
        <argument>zh_CN</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.bg.xliff</argument>
        <argument>bg</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.hr.xliff</argument>
        <argument>hr</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pt.xliff</argument>
        <argument>pt</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.fa.xliff</argument>
        <argument>fa</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.cs.xliff</argument>
        <argument>cs</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ro.xliff</argument>
        <argument>ro</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.fa.yml</argument>
        <argument>fa</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.ru.yml</argument>
        <argument>ru</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.fr.yml</argument>
        <argument>fr</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.nl.yml</argument>
        <argument>nl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.sr_Latn.yml</argument>
        <argument>sr_Latn</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.zh_CN.yml</argument>
        <argument>zh_CN</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.et.yml</argument>
        <argument>et</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.sk.yml</argument>
        <argument>sk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.sr_Latn.yml</argument>
        <argument>sr_Latn</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.lv.yml</argument>
        <argument>lv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.hu.yml</argument>
        <argument>hu</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.hr.yml</argument>
        <argument>hr</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.de.yml</argument>
        <argument>de</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.pt_BR.yml</argument>
        <argument>pt_BR</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.sl.yml</argument>
        <argument>sl</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.pt.yml</argument>
        <argument>pt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.zh_CN.yml</argument>
        <argument>zh_CN</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.bg.yml</argument>
        <argument>bg</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.fr.yml</argument>
        <argument>fr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.hu.yml</argument>
        <argument>hu</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.ja.yml</argument>
        <argument>ja</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.tr.yml</argument>
        <argument>tr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.it.yml</argument>
        <argument>it</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.ro.yml</argument>
        <argument>ro</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.lt.yml</argument>
        <argument>lt</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.fi.yml</argument>
        <argument>fi</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.lt.yml</argument>
        <argument>lt</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.es.yml</argument>
        <argument>es</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.es.yml</argument>
        <argument>es</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.pt_PT.yml</argument>
        <argument>pt_PT</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.uk.yml</argument>
        <argument>uk</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.sv.yml</argument>
        <argument>sv</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.fa.yml</argument>
        <argument>fa</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.pt_BR.yml</argument>
        <argument>pt_BR</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.en.yml</argument>
        <argument>en</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.da.yml</argument>
        <argument>da</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.ca.yml</argument>
        <argument>ca</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.lb.yml</argument>
        <argument>lb</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.da.yml</argument>
        <argument>da</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.lv.yml</argument>
        <argument>lv</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.en.yml</argument>
        <argument>en</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.bg.yml</argument>
        <argument>bg</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.sv.yml</argument>
        <argument>sv</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.uk.yml</argument>
        <argument>uk</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.it.yml</argument>
        <argument>it</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.cs.yml</argument>
        <argument>cs</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.de.yml</argument>
        <argument>de</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.pl.yml</argument>
        <argument>pl</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.sk.yml</argument>
        <argument>sk</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.ru.yml</argument>
        <argument>ru</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.fi.yml</argument>
        <argument>fi</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.sl.yml</argument>
        <argument>sl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.ja.yml</argument>
        <argument>ja</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.nl.yml</argument>
        <argument>nl</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.hr.yml</argument>
        <argument>hr</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.tr.yml</argument>
        <argument>tr</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.cs.yml</argument>
        <argument>cs</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.pl.yml</argument>
        <argument>pl</argument>
        <argument>validators</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.lt.xliff</argument>
        <argument>lt</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.pt.xliff</argument>
        <argument>pt</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/FOSUserBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.pl.xliff</argument>
        <argument>pl</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.ru.xliff</argument>
        <argument>ru</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.nl.xliff</argument>
        <argument>nl</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.ca.xliff</argument>
        <argument>ca</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.fa.xliff</argument>
        <argument>fa</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.it.xliff</argument>
        <argument>it</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/FOSUserBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.zh_TW.xliff</argument>
        <argument>zh_TW</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.cs.xliff</argument>
        <argument>cs</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/FOSUserBundle.hr.xliff</argument>
        <argument>hr</argument>
        <argument>FOSUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.bg.xliff</argument>
        <argument>bg</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.hr.xliff</argument>
        <argument>hr</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/src/Application/Sonata/UserBundle/Resources/translations/SonataUserBundle.es.xliff</argument>
        <argument>es</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.de.xliff</argument>
        <argument>de</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.cs.xliff</argument>
        <argument>cs</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.en.xliff</argument>
        <argument>en</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.fr.xliff</argument>
        <argument>fr</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.pl.xliff</argument>
        <argument>pl</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.ru.xliff</argument>
        <argument>ru</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.sl.xliff</argument>
        <argument>sl</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.sk.xliff</argument>
        <argument>sk</argument>
        <argument>SonataFormatterBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/src/Application/CoreBundle/Resources/translations/SonataAdminBundle.es.yml</argument>
        <argument>es</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/src/Minsal/SiapsBundle/Resources/translations/SonataUserBundle.es.yml</argument>
        <argument>es</argument>
        <argument>SonataUserBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/src/Minsal/SiapsBundle/Resources/translations/SonataAdminBundle.es.yml</argument>
        <argument>es</argument>
        <argument>SonataAdminBundle</argument>
      </call>
      <call method="addResource">
        <argument>yml</argument>
        <argument>/var/www/html/siaptb/src/Minsal/SiapsBundle/Resources/translations/messages.es.yml</argument>
        <argument>es</argument>
        <argument>messages</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.nl.xliff</argument>
        <argument>nl</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.it.xliff</argument>
        <argument>it</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.sr_Latin.xliff</argument>
        <argument>sr_Latin</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.ja.xliff</argument>
        <argument>ja</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.zh_TW.xliff</argument>
        <argument>zh_TW</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.zh_HK.xliff</argument>
        <argument>zh_HK</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.hu.xliff</argument>
        <argument>hu</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.ru.xliff</argument>
        <argument>ru</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.eu.xliff</argument>
        <argument>eu</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.lt.xliff</argument>
        <argument>lt</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.pt_PT.xliff</argument>
        <argument>pt_PT</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.de.xliff</argument>
        <argument>de</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.es.xliff</argument>
        <argument>es</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.zh.xliff</argument>
        <argument>zh</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.sl.xliff</argument>
        <argument>sl</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.sv.xliff</argument>
        <argument>sv</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.pt.xliff</argument>
        <argument>pt</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.pt_BR.xliff</argument>
        <argument>pt_BR</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.id.xliff</argument>
        <argument>id</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.da.xliff</argument>
        <argument>da</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.en.xliff</argument>
        <argument>en</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.pl.xliff</argument>
        <argument>pl</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.zh_CN.xliff</argument>
        <argument>zh_CN</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.cs.xliff</argument>
        <argument>cs</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.uk.xliff</argument>
        <argument>uk</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.ar.xliff</argument>
        <argument>ar</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.fr.xliff</argument>
        <argument>fr</argument>
        <argument>time</argument>
      </call>
      <call method="addResource">
        <argument>xliff</argument>
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/translations/time.ro.xliff</argument>
        <argument>ro</argument>
        <argument>time</argument>
      </call>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor"/>
    <service id="debug.emergency_logger_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="emergency"/>
      <argument>emergency</argument>
      <argument type="service" id="monolog.logger.emergency" on-invalid="null"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch"/>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="monolog.logger" channel="event"/>
      <argument type="service">
        <service class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>request_listener.service</argument>
          <argument>onRouteRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>session_idle.service</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>calendar.load_events</argument>
        <argument type="collection">
          <argument>calendar.load_events</argument>
          <argument>loadEvents</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument>data_collector.router</argument>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>assetic.request_listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>sonata.block.cache.handler.default</argument>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument>fos_user.security.interactive_login_listener</argument>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addSubscriberService">
        <argument>response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>streamed_response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>locale_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\LocaleListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.emergency_logger_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.deprecation_logger_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.scream_logger_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.debug_handlers_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session_listener</argument>
        <argument>Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fragment.listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\FragmentListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>profiler_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ProfilerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>data_collector.request</argument>
        <argument>Symfony\Component\HttpKernel\DataCollector\RequestDataCollector</argument>
      </call>
      <call method="addSubscriberService">
        <argument>router_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\RouterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.firewall</argument>
        <argument>Symfony\Component\Security\Http\Firewall</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.rememberme.response_listener</argument>
        <argument>Symfony\Component\Security\Http\RememberMe\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>twig.exception_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ExceptionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>monolog.handler.console</argument>
        <argument>Symfony\Bridge\Monolog\Handler\ConsoleHandler</argument>
      </call>
      <call method="addSubscriberService">
        <argument>swiftmailer.email_sender.listener</argument>
        <argument>Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.controller.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.converter.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.view.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.cache.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.security.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>web_profiler.debug_toolbar</argument>
        <argument>Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <argument type="service" id="jms_di_extra.controller_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.deprecation_logger_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="deprecation"/>
      <argument>deprecation</argument>
      <argument type="service" id="monolog.logger.deprecation" on-invalid="null"/>
    </service>
    <service id="debug.scream_logger_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="scream"/>
      <argument>scream</argument>
      <argument type="service" id="monolog.logger.scream" on-invalid="null"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="collection">
        <argument type="service" id="http_kernel" on-invalid="null"/>
        <argument>terminateWithException</argument>
      </argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
      <argument type="service" id="session.storage.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
      </argument>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument type="collection">
        <argument key="cookie_lifetime">0</argument>
        <argument key="gc_probability">0</argument>
      </argument>
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session_listener" class="Symfony\Bundle\FrameworkBundle\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="security.secure_random" class="Symfony\Component\Security\Core\Util\SecureRandom">
      <tag name="monolog.logger" channel="security"/>
      <argument>/var/www/html/siaptb/app/cache/dev/secure_random.seed</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="ignore"/>
    </service>
    <service id="form.resolved_type_factory" class="Ivory\OrderedForm\OrderedResolvedFormTypeFactory">
      <argument type="service">
        <service class="Ivory\OrderedForm\Orderer\FormOrderer" public="false"/>
      </argument>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
            <argument type="service" id="service_container"/>
            <argument type="collection">
              <argument key="form">form.type.form</argument>
              <argument key="birthday">form.type.birthday</argument>
              <argument key="checkbox">form.type.checkbox</argument>
              <argument key="choice">form.type.choice</argument>
              <argument key="collection">form.type.collection</argument>
              <argument key="country">form.type.country</argument>
              <argument key="date">form.type.date</argument>
              <argument key="datetime">form.type.datetime</argument>
              <argument key="email">form.type.email</argument>
              <argument key="file">form.type.file</argument>
              <argument key="hidden">form.type.hidden</argument>
              <argument key="integer">form.type.integer</argument>
              <argument key="language">form.type.language</argument>
              <argument key="locale">form.type.locale</argument>
              <argument key="money">form.type.money</argument>
              <argument key="number">form.type.number</argument>
              <argument key="password">form.type.password</argument>
              <argument key="percent">form.type.percent</argument>
              <argument key="radio">form.type.radio</argument>
              <argument key="repeated">form.type.repeated</argument>
              <argument key="search">form.type.search</argument>
              <argument key="textarea">form.type.textarea</argument>
              <argument key="text">form.type.text</argument>
              <argument key="time">form.type.time</argument>
              <argument key="timezone">form.type.timezone</argument>
              <argument key="url">form.type.url</argument>
              <argument key="button">form.type.button</argument>
              <argument key="submit">form.type.submit</argument>
              <argument key="reset">form.type.reset</argument>
              <argument key="currency">form.type.currency</argument>
              <argument key="entity">form.type.entity</argument>
              <argument key="sonata_type_immutable_array">sonata.core.form.type.array</argument>
              <argument key="sonata_type_boolean">sonata.core.form.type.boolean</argument>
              <argument key="sonata_type_collection">sonata.core.form.type.collection</argument>
              <argument key="sonata_type_translatable_choice">sonata.core.form.type.translatable_choice</argument>
              <argument key="sonata_type_date_range">sonata.core.form.type.date_range</argument>
              <argument key="sonata_type_datetime_range">sonata.core.form.type.datetime_range</argument>
              <argument key="sonata_type_date_picker">sonata.core.form.type.date_picker</argument>
              <argument key="sonata_type_datetime_picker">sonata.core.form.type.datetime_picker</argument>
              <argument key="sonata_type_equal">sonata.core.form.type.equal</argument>
              <argument key="sonata_block_service_choice">sonata.block.form.type.block</argument>
              <argument key="sonata_type_admin">sonata.admin.form.type.admin</argument>
              <argument key="sonata_type_model">sonata.admin.form.type.model_choice</argument>
              <argument key="sonata_type_model_list">sonata.admin.form.type.model_list</argument>
              <argument key="sonata_type_model_reference">sonata.admin.form.type.model_reference</argument>
              <argument key="sonata_type_model_hidden">sonata.admin.form.type.model_hidden</argument>
              <argument key="sonata_type_filter_number">sonata.admin.form.filter.type.number</argument>
              <argument key="sonata_type_filter_choice">sonata.admin.form.filter.type.choice</argument>
              <argument key="sonata_type_filter_default">sonata.admin.form.filter.type.default</argument>
              <argument key="sonata_type_filter_date">sonata.admin.form.filter.type.date</argument>
              <argument key="sonata_type_filter_date_range">sonata.admin.form.filter.type.daterange</argument>
              <argument key="sonata_type_filter_datetime">sonata.admin.form.filter.type.datetime</argument>
              <argument key="sonata_type_filter_datetime_range">sonata.admin.form.filter.type.datetime_range</argument>
              <argument key="fos_user_username">fos_user.username_form_type</argument>
              <argument key="fos_user_profile">fos_user.profile.form.type</argument>
              <argument key="fos_user_registration">fos_user.registration.form.type</argument>
              <argument key="fos_user_change_password">fos_user.change_password.form.type</argument>
              <argument key="fos_user_resetting">fos_user.resetting.form.type</argument>
              <argument key="fos_user_group">fos_user.group.form.type</argument>
              <argument key="sonata_security_roles">sonata.user.form.type.security_roles</argument>
              <argument key="sonata_user_profile">sonata.user.profile.form.type</argument>
              <argument key="sonata_user_gender">sonata.user.form.gender_list</argument>
              <argument key="sonata_user_registration">sonata.user.registration.form.type</argument>
              <argument key="ckeditor">ivory_ck_editor.form.type</argument>
              <argument key="sonata_formatter_type">sonata.formatter.form.type.selector</argument>
            </argument>
            <argument type="collection">
              <argument key="form" type="collection">
                <argument>form.type_extension.help_message</argument>
                <argument>form.type_extension.form.http_foundation</argument>
                <argument>form.type_extension.form.validator</argument>
                <argument>form.type_extension.csrf</argument>
                <argument>form.type_extension.form.data_collector</argument>
                <argument>sonata.admin.form.extension.field</argument>
                <argument>sonata.admin.form.extension.field.mopa</argument>
                <argument>ivory_ordered_form.form_extension</argument>
              </argument>
              <argument key="file" type="collection">
                <argument>application_core_bundle.file_type_extension</argument>
              </argument>
              <argument key="repeated" type="collection">
                <argument>form.type_extension.repeated.validator</argument>
              </argument>
              <argument key="submit" type="collection">
                <argument>form.type_extension.submit.validator</argument>
              </argument>
              <argument key="button" type="collection">
                <argument>ivory_ordered_form.button_extension</argument>
              </argument>
            </argument>
            <argument type="collection">
              <argument>form.type_guesser.validator</argument>
              <argument>form.type_guesser.doctrine</argument>
            </argument>
          </service>
        </argument>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type" alias="form"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.birthday" class="Symfony\Component\Form\Extension\Core\Type\BirthdayType">
      <tag name="form.type" alias="birthday"/>
    </service>
    <service id="form.type.checkbox" class="Symfony\Component\Form\Extension\Core\Type\CheckboxType">
      <tag name="form.type" alias="checkbox"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type" alias="choice"/>
    </service>
    <service id="form.type.collection" class="Symfony\Component\Form\Extension\Core\Type\CollectionType">
      <tag name="form.type" alias="collection"/>
    </service>
    <service id="form.type.country" class="Symfony\Component\Form\Extension\Core\Type\CountryType">
      <tag name="form.type" alias="country"/>
    </service>
    <service id="form.type.date" class="Symfony\Component\Form\Extension\Core\Type\DateType">
      <tag name="form.type" alias="date"/>
    </service>
    <service id="form.type.datetime" class="Symfony\Component\Form\Extension\Core\Type\DateTimeType">
      <tag name="form.type" alias="datetime"/>
    </service>
    <service id="form.type.email" class="Symfony\Component\Form\Extension\Core\Type\EmailType">
      <tag name="form.type" alias="email"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <tag name="form.type" alias="file"/>
    </service>
    <service id="form.type.hidden" class="Symfony\Component\Form\Extension\Core\Type\HiddenType">
      <tag name="form.type" alias="hidden"/>
    </service>
    <service id="form.type.integer" class="Symfony\Component\Form\Extension\Core\Type\IntegerType">
      <tag name="form.type" alias="integer"/>
    </service>
    <service id="form.type.language" class="Symfony\Component\Form\Extension\Core\Type\LanguageType">
      <tag name="form.type" alias="language"/>
    </service>
    <service id="form.type.locale" class="Symfony\Component\Form\Extension\Core\Type\LocaleType">
      <tag name="form.type" alias="locale"/>
    </service>
    <service id="form.type.money" class="Symfony\Component\Form\Extension\Core\Type\MoneyType">
      <tag name="form.type" alias="money"/>
    </service>
    <service id="form.type.number" class="Symfony\Component\Form\Extension\Core\Type\NumberType">
      <tag name="form.type" alias="number"/>
    </service>
    <service id="form.type.password" class="Symfony\Component\Form\Extension\Core\Type\PasswordType">
      <tag name="form.type" alias="password"/>
    </service>
    <service id="form.type.percent" class="Symfony\Component\Form\Extension\Core\Type\PercentType">
      <tag name="form.type" alias="percent"/>
    </service>
    <service id="form.type.radio" class="Symfony\Component\Form\Extension\Core\Type\RadioType">
      <tag name="form.type" alias="radio"/>
    </service>
    <service id="form.type.repeated" class="Symfony\Component\Form\Extension\Core\Type\RepeatedType">
      <tag name="form.type" alias="repeated"/>
    </service>
    <service id="form.type.search" class="Symfony\Component\Form\Extension\Core\Type\SearchType">
      <tag name="form.type" alias="search"/>
    </service>
    <service id="form.type.textarea" class="Symfony\Component\Form\Extension\Core\Type\TextareaType">
      <tag name="form.type" alias="textarea"/>
    </service>
    <service id="form.type.text" class="Symfony\Component\Form\Extension\Core\Type\TextType">
      <tag name="form.type" alias="text"/>
    </service>
    <service id="form.type.time" class="Symfony\Component\Form\Extension\Core\Type\TimeType">
      <tag name="form.type" alias="time"/>
    </service>
    <service id="form.type.timezone" class="Symfony\Component\Form\Extension\Core\Type\TimezoneType">
      <tag name="form.type" alias="timezone"/>
    </service>
    <service id="form.type.url" class="Symfony\Component\Form\Extension\Core\Type\UrlType">
      <tag name="form.type" alias="url"/>
    </service>
    <service id="form.type.button" class="Symfony\Component\Form\Extension\Core\Type\ButtonType">
      <tag name="form.type" alias="button"/>
    </service>
    <service id="form.type.submit" class="Symfony\Component\Form\Extension\Core\Type\SubmitType">
      <tag name="form.type" alias="submit"/>
    </service>
    <service id="form.type.reset" class="Symfony\Component\Form\Extension\Core\Type\ResetType">
      <tag name="form.type" alias="reset"/>
    </service>
    <service id="form.type.currency" class="Symfony\Component\Form\Extension\Core\Type\CurrencyType">
      <tag name="form.type" alias="currency"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service">
        <service class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false"/>
      </argument>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension" alias="repeated"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" alias="submit"/>
    </service>
    <service id="form.csrf_provider" class="Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter">
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service" id="form.csrf_provider"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false">
          <argument type="service" id="security.secure_random"/>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
          <argument type="service" id="session"/>
        </service>
      </argument>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>/var/www/html/siaptb/app/cache/dev</argument>
    </service>
    <service id="templating.helper.slots" class="Symfony\Component\Templating\Helper\SlotsHelper">
      <tag name="templating.helper" alias="slots"/>
    </service>
    <service id="templating.helper.assets" class="Symfony\Component\Templating\Helper\CoreAssetsHelper" scope="request">
      <tag name="templating.helper" alias="assets"/>
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Templating\Asset\PathPackage" scope="request" public="false">
          <argument type="service" id="request"/>
          <argument>null</argument>
          <argument>%%s?%%s</argument>
        </service>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="templating.asset.package_factory" class="Symfony\Bundle\FrameworkBundle\Templating\Asset\PackageFactory">
      <argument type="service" id="service_container"/>
    </service>
    <service id="templating.helper.request" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper">
      <tag name="templating.helper" alias="request"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="templating.helper.session" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper">
      <tag name="templating.helper" alias="session"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="templating.helper.router" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper">
      <tag name="templating.helper" alias="router"/>
      <argument type="service" id="router"/>
    </service>
    <service id="templating.helper.actions" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper">
      <tag name="templating.helper" alias="actions"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="templating.helper.code" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper">
      <tag name="templating.helper" alias="code"/>
      <argument>null</argument>
      <argument>/var/www/html/siaptb/app</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="templating.helper.translator" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper">
      <tag name="templating.helper" alias="translator"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="templating.helper.form" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper">
      <tag name="templating.helper" alias="form"/>
      <argument type="service">
        <service class="Symfony\Component\Form\FormRenderer" public="false">
          <argument type="service">
            <service class="Symfony\Component\Form\Extension\Templating\TemplatingRendererEngine" public="false">
              <argument type="service" id="debug.templating.engine.php"/>
              <argument type="collection">
                <argument>FrameworkBundle:Form</argument>
              </argument>
            </service>
          </argument>
          <argument type="service" id="form.csrf_provider" on-invalid="null"/>
        </service>
      </argument>
    </service>
    <service id="templating.helper.stopwatch" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper">
      <tag name="templating.helper" alias="stopwatch"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="templating.globals" class="Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\ValidatorInterface" factory-method="getValidator" factory-service="validator.builder"/>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface" factory-method="createValidatorBuilder">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml</argument>
          <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotation_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadClassMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
          <argument type="service">
            <service class="FOS\UserBundle\Validator\Initializer" public="false">
              <tag name="validator.initializer"/>
              <argument type="service" id="fos_user.user_manager"/>
            </service>
          </argument>
        </argument>
      </call>
    </service>
    <service id="validator.validator_factory" class="Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="validator.expression">validator.expression</argument>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator">validator.email</argument>
        <argument key="security.validator.user_password">security.validator.user_password</argument>
        <argument key="doctrine.orm.validator.unique">doctrine.orm.validator.unique</argument>
        <argument key="sonata.admin.validator.inline">sonata.admin.validator.inline</argument>
        <argument key="sonata.formatter.validator.formatter">sonata.formatter.validator.formatter</argument>
      </argument>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>false</argument>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="27d6ce1a6aaa17e82a0d5b59d4e9541eae14e2443c1f13bfc255f0f5b29dc2c6_1" class="Symfony\Component\Form\ResolvedFormTypeFactory"/>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler">
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service">
        <service class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
          <argument>file:/var/www/html/siaptb/app/cache/dev/profiler</argument>
          <argument></argument>
          <argument></argument>
          <argument>86400</argument>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="255"/>
            <call method="setKernel">
              <argument type="service" id="kernel" on-invalid="ignore"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="255"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="255"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="255"/>
            <tag name="monolog.logger" channel="profiler"/>
            <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="255"/>
            <argument type="service" id="kernel" on-invalid="ignore"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="255"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
            <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security"/>
            <argument type="service" id="security.context" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
            <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
            <tag name="data_collector" template="DoctrineBundle:Collector:db" id="db"/>
            <argument type="service" id="doctrine"/>
            <call method="addLogger">
              <argument>default</argument>
              <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Sonata\BlockBundle\Profiler\DataCollector\BlockDataCollector" public="false">
            <tag name="data_collector" id="block" template="SonataBlockBundle:Profiler:block.html.twig"/>
            <argument type="service" id="sonata.block.templating.helper"/>
            <argument type="collection">
              <argument>sonata.block.service.container</argument>
              <argument>sonata.page.block.container</argument>
              <argument>cmf.block.container</argument>
              <argument>cmf.block.slideshow</argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="profiler"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="255"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="255"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="255"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.router" on-invalid="null"/>
      <argument type="service">
        <service class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Bundle\AsseticBundle\Routing\AsseticLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="assetic.asset_manager"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service" id="sonata.admin.route_loader"/>
          </call>
        </service>
      </argument>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="router"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.context" class="Symfony\Component\Security\Core\SecurityContext">
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
            <argument>59480f3ecdef9</argument>
          </service>
        </argument>
        <argument type="service" id="security.authentication.provider.core.admin"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="core_user_manager"/>
            <argument type="service" id="security.user_checker"/>
            <argument>admin</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
            <argument>59480f3ecdef9</argument>
          </service>
        </argument>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.access.decision_manager" class="JMS\SecurityExtraBundle\Security\Authorization\RememberingAccessDecisionManager">
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
          <argument type="collection">
            <argument type="service">
              <service class="JMS\SecurityExtraBundle\Security\Authorization\Expression\LazyLoadingExpressionVoter" public="false">
                <tag name="security.voter" priority="230"/>
                <tag name="monolog.logger" channel="security"/>
                <argument type="service" id="security.expressions.handler"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <call method="setLazyCompiler">
                  <argument type="service" id="service_container"/>
                  <argument>security.expressions.compiler</argument>
                </call>
                <call method="setCacheDir">
                  <argument>/var/www/html/siaptb/app/cache/dev/jms_security/expressions</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
                <tag name="security.voter" priority="245"/>
                <argument type="service">
                  <service class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false"/>
                </argument>
                <argument type="service" id="security.authentication.trust_resolver"/>
                <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
                <tag name="security.voter" priority="245"/>
                <argument type="service" id="security.role_hierarchy"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
                <tag name="security.voter" priority="250"/>
                <argument type="service" id="security.authentication.trust_resolver"/>
              </service>
            </argument>
          </argument>
          <argument>affirmative</argument>
          <argument>false</argument>
          <argument>true</argument>
        </service>
      </argument>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy">
      <argument type="collection">
        <argument key="ROLE_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
          <argument>ROLE_USER_LISTAREXPEDIENTES</argument>
          <argument>ROLE_USER_BUSCAREMERGENCIA</argument>
          <argument>ROLE_USER_CONSULTAR</argument>
          <argument>ROLE_USER_DEPURACION</argument>
        </argument>
        <argument key="ROLE_SUPER_ADMIN" type="collection">
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_ALLOWED_TO_SWITCH</argument>
        </argument>
        <argument key="SONATA" type="collection">
          <argument>ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT</argument>
        </argument>
        <argument key="ROLE_SONATA_LAB_SEC_SOLICITUDESTUDIOS" type="collection">
          <argument>ROLE_MINSAL_LABORATORIO_ADMIN_SEC_SOLICITUDESTUDIOS_ASSIGNEXAM</argument>
          <argument>ROLE_MINSAL_LABORATORIO_ADMIN_SEC_SOLICITUDESTUDIOS_HISTORY</argument>
        </argument>
        <argument key="ROLE_SONATA_FARM_RECETAS" type="collection">
          <argument>ROLE_MINSAL_FARMACIA_ADMIN_FARM_RECETAS_ASSIGNRECETA</argument>
          <argument>ROLE_SONATA_ADMIN_FARMRECETAS_COMPLEMENT</argument>
          <argument>ROLE_SONATA_ADMIN_FARMRECETAS_COMPLEMENTALL</argument>
        </argument>
        <argument key="ROLE_SONATA_CIT_CITAS_DIA" type="collection">
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_TRANSFER</argument>
          <argument>ROLE_SONATA_ADMIN_CITAMEDICAS</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_CITAINTEGRAL</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_ASIGNAR</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_LISTAMEDICA_LIST</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_REFERENCIA</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_REPROGRAMAR</argument>
          <argument>ROLE_SONATA_ADMIN_AGENDAMEDICA_EMPLEADO_ESPECIALIDAD_LIST</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_EXCLUYENDO_TIPO_CITA</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_MEDICO_EXCLUYENDO_TIPO_CITA</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_REPORTES</argument>
          <argument>ROLE_SONATA_ADMIN_AGENDADIA</argument>
        </argument>
        <argument key="ROLE_SONATA_CIT_CITAS_PROCEDIMIENTOS" type="collection">
          <argument>ROLE_SONATA_ADMIN_CITCITASPROCEDIMIENTOS_REFERENCIA</argument>
          <argument>ROLE_MINSAL_CITAS_ADMIN_CIT_CITAS_PROCEDIMIENTOS_AGENDA</argument>
          <argument>ROLE_MINSAL_CITAS_ADMIN_CIT_CITAS_PROCEDIMIENTOS_PROCEDIMIENTOEMPLEADO_LIST</argument>
          <argument>ROLE_MINSAL_CITAS_ADMIN_CIT_CITAS_PROCEDIMIENTOS_REPORTES</argument>
        </argument>
        <argument key="ROLE_SONATA_SECHISTORIALCLINICO" type="collection">
          <argument>ROLE_SONATA_ADMIN_SECHISTORIALCLINICO_RETROACTIVE</argument>
          <argument>ROLE_SONATA_ADMIN_SECHISTORIALCLINICO_PACIENTESAPTOSESPECIALIZADA</argument>
          <argument>ROLE_SONATA_ADMIN_CONSULTAS_ATENDIDAS</argument>
        </argument>
        <argument key="ROLE_SONATA_CLINICASELECCION" type="collection">
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_CSELECCION</argument>
        </argument>
        <argument key="ROLE_API_LABORATORIO" type="collection">
          <argument>ROLE_API_CHECKOUT</argument>
          <argument>ROLE_API_LABORATORIO_INGRESORESULTADOS</argument>
          <argument>ROLE_API_LABORATORIO_ENVIAR_SOLICITUD_EQUIPOAUTOMATIZADO</argument>
        </argument>
      </argument>
    </service>
    <service id="security.firewall" class="Symfony\Component\Security\Http\Firewall">
      <tag name="kernel.event_subscriber"/>
      <argument type="service">
        <service class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="security.firewall.map.context.dev" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.api" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/api</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.admin" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>.*</argument>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router" on-invalid="null"/>
      <argument type="service" id="router" on-invalid="null"/>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
          <argument>80</argument>
          <argument>443</argument>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/register</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/resetting</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/login$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/logout$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/login_check$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/load/digitalSignature$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/soap</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/espe</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/siaps/timeInfo$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/api/checkin$</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/dashboard</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/.*</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>ROLE_USER</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="router"/>
      <call method="registerListener">
        <argument>api</argument>
        <argument>/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
      </call>
      <call method="registerListener">
        <argument>admin</argument>
        <argument>/admin/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.context" on-invalid="ignore"/>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="collection">
              <argument type="service" id="core_user_manager"/>
            </argument>
            <argument>api</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.http_utils"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument>/</argument>
              </service>
            </argument>
            <argument type="collection">
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">logout</argument>
              <argument key="logout_path">/logout</argument>
            </argument>
            <call method="addHandler">
              <argument type="service" id="security.logout.handler.session"/>
            </call>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
            <argument type="service" id="security.context"/>
            <argument>59480f3ecdef9</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.context"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>api</argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
        </service>
      </argument>
    </service>
    <service id="security.authentication.provider.core.admin" class="Application\CoreBundle\Security\Authentication\Provider\AuthenticationProvider">
      <argument type="service" id="core_user_manager"/>
      <argument>/var/www/html/siaptb/app/cache/dev/security/nonces</argument>
      <argument type="service" id="service_container"/>
      <argument>rsa</argument>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="security.authentication.listener.core.admin" class="Application\CoreBundle\Security\Firewall\ListenerInterface">
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>rsa</argument>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="logger"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="security.firewall.map.context.admin" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="collection">
              <argument type="service" id="core_user_manager"/>
            </argument>
            <argument>user</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.http_utils"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument>/admin/login</argument>
              </service>
            </argument>
            <argument type="collection">
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">logout</argument>
              <argument key="logout_path">/admin/logout</argument>
            </argument>
            <call method="addHandler">
              <argument type="service" id="security.logout.handler.session"/>
            </call>
          </service>
        </argument>
        <argument type="service" id="security.authentication.listener.core.admin"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
            <tag name="security.remember_me_aware" id="admin" provider="security.user.provider.concrete.fos_userbundle"/>
            <argument type="service" id="security.context"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="security.authentication.session_strategy"/>
            <argument type="service" id="security.http_utils"/>
            <argument>admin</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument type="collection">
                  <argument key="login_path">/admin/login</argument>
                  <argument key="use_referer">true</argument>
                  <argument key="default_target_path">/admin/dashboard</argument>
                  <argument key="always_use_default_target_path">false</argument>
                  <argument key="target_path_parameter">_target_path</argument>
                </argument>
                <call method="setProviderKey">
                  <argument>admin</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
                <argument type="service" id="http_kernel"/>
                <argument type="service" id="security.http_utils"/>
                <argument type="collection">
                  <argument key="login_path">/admin/login</argument>
                  <argument key="failure_path">null</argument>
                  <argument key="failure_forward">false</argument>
                  <argument key="failure_path_parameter">_failure_path</argument>
                </argument>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
              </service>
            </argument>
            <argument type="collection">
              <argument key="use_forward">false</argument>
              <argument key="check_path">/admin/login_check</argument>
              <argument key="require_previous_session">true</argument>
              <argument key="username_parameter">_username</argument>
              <argument key="password_parameter">_password</argument>
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">authenticate</argument>
              <argument key="post_only">true</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument>null</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
            <argument type="service" id="security.context"/>
            <argument>59480f3ecdef9</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service" id="security.access_listener"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false">
            <argument type="service" id="security.context"/>
            <argument type="service" id="core_user_manager"/>
            <argument type="service" id="security.user_checker"/>
            <argument>admin</argument>
            <argument type="service" id="security.access.decision_manager"/>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument>_switch_user</argument>
            <argument>ROLE_ALLOWED_TO_SWITCH</argument>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
          </service>
        </argument>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.context"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>admin</argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
              <argument type="service" id="http_kernel"/>
              <argument type="service" id="security.http_utils"/>
              <argument>/admin/login</argument>
              <argument>false</argument>
            </service>
          </argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
        </service>
      </argument>
    </service>
    <service id="twig" class="Twig_Environment">
      <argument type="service" id="twig.loader"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="exception_controller">twig.controller.exception:showAction</argument>
        <argument key="autoescape_service">null</argument>
        <argument key="autoescape_service_method">null</argument>
        <argument key="cache">/var/www/html/siaptb/app/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="paths" type="collection"/>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.intl"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\SecurityBundle\Twig\Extension\LogoutUrlExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="templating.helper.logout_url"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="security.context" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="translator.default"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\Extension\AssetsExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="service_container"/>
            <argument type="service" id="router.request_context"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\Extension\ActionsExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
            <tag name="twig.extension"/>
            <argument>null</argument>
            <argument>/var/www/html/siaptb/app</argument>
            <argument>UTF-8</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="fragment.handler"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Symfony\Bridge\Twig\Form\TwigRenderer" public="false">
                <argument type="service">
                  <service class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
                    <argument type="collection">
                      <argument>form_div_layout.html.twig</argument>
                      <argument>SonataFormatterBundle:Form:formatter.html.twig</argument>
                      <argument>ApplicationCoreBundle:CRUD:FieldType/edit_field_file.html.twig</argument>
                      <argument>SonataUserBundle:Form:form_admin_fields.html.twig</argument>
                      <argument>IvoryCKEditorBundle:Form:ckeditor_widget.html.twig</argument>
                    </argument>
                  </service>
                </argument>
                <argument type="service" id="form.csrf_provider" on-invalid="null"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Debug" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Twig\AsseticExtension" public="false">
            <tag name="twig.extension"/>
            <tag name="assetic.templating.twig"/>
            <argument type="service" id="assetic.asset_factory"/>
            <argument type="service" id="templating.name_parser"/>
            <argument>true</argument>
            <argument type="collection"/>
            <argument type="collection"/>
            <argument type="service" id="assetic.value_supplier.default" on-invalid="null"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.flashmessage.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.text"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.status_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.template_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\BlockBundle\Twig\Extension\BlockExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.block.templating.helper"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Menu\Twig\MenuExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Knp\Menu\Twig\Helper" public="false">
                <argument type="service" id="knp_menu.renderer_provider"/>
                <argument type="service" id="knp_menu.menu_provider"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Bundle\MarkdownBundle\Twig\Extension\MarkdownTwigExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Knp\Bundle\MarkdownBundle\Helper\MarkdownHelper" public="false">
                <tag name="templating.helper" alias="markdown"/>
                <argument type="service" id="markdown.parser"/>
                <call method="addParser">
                  <argument type="service">
                    <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Min" public="false">
                      <tag name="markdown.parser" alias="min"/>
                    </service>
                  </argument>
                  <argument>min</argument>
                </call>
                <call method="addParser">
                  <argument type="service">
                    <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Light" public="false">
                      <tag name="markdown.parser" alias="light"/>
                    </service>
                  </argument>
                  <argument>light</argument>
                </call>
                <call method="addParser">
                  <argument type="service">
                    <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Medium" public="false">
                      <tag name="markdown.parser" alias="medium"/>
                    </service>
                  </argument>
                  <argument>medium</argument>
                </call>
                <call method="addParser">
                  <argument type="service" id="markdown.parser"/>
                  <argument>default</argument>
                </call>
                <call method="addParser">
                  <argument type="service">
                    <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Flavored" public="false">
                      <tag name="markdown.parser" alias="flavored"/>
                    </service>
                  </argument>
                  <argument>flavored</argument>
                </call>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="ivory_ck_editor.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\FormatterBundle\Twig\Extension\TextFormatterExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.formatter.pool"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\IntlBundle\Twig\Extension\LocaleExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.intl.templating.helper.locale"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\IntlBundle\Twig\Extension\NumberExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.intl.templating.helper.number"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\IntlBundle\Twig\Extension\DateTimeExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.intl.templating.helper.datetime"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="JMS\Serializer\Twig\SerializerExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="jms_serializer"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="JMS\SecurityExtraBundle\Twig\SecurityExtension" public="false">
            <tag name="twig.extension" alias="jms_security_extra"/>
            <argument type="service" id="security.context"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="endroid.qrcode.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Bundle\TimeBundle\Twig\Extension\TimeExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="time.templating.helper.time"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="templating.globals"/>
      </call>
      <call method="addGlobal">
        <argument>signed_modules</argument>
        <argument>3,6,7</argument>
      </call>
      <call method="addGlobal">
        <argument>max_iddle_time</argument>
        <argument>7200</argument>
      </call>
      <call method="addGlobal">
        <argument>print_ticket</argument>
        <argument type="collection">
          <argument>2</argument>
        </argument>
      </call>
      <call method="addGlobal">
        <argument>sonata_block</argument>
        <argument type="service" id="sonata.block.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_user</argument>
        <argument type="service" id="sonata.user.twig.global"/>
      </call>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <argument>/var/www/html/siaptb/app/logs/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument type="collection"/>
    </service>
    <service id="c79d228f3bcb63d5af76a6b8fa1f4dfa4e1473d524a9d1045fc6ae6fbfdf0ed1_3" class="Swift_Transport_Esmtp_Auth_PlainAuthenticator"/>
    <service id="c79d228f3bcb63d5af76a6b8fa1f4dfa4e1473d524a9d1045fc6ae6fbfdf0ed1_2" class="Swift_Transport_Esmtp_Auth_LoginAuthenticator"/>
    <service id="c79d228f3bcb63d5af76a6b8fa1f4dfa4e1473d524a9d1045fc6ae6fbfdf0ed1_1" class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator"/>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer">
      <argument type="service" id="swiftmailer.mailer.default.transport"/>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="assetic.filter_manager" class="Symfony\Bundle\AsseticBundle\FilterManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="cssrewrite">assetic.filter.cssrewrite</argument>
      </argument>
    </service>
    <service id="assetic.asset_manager" class="Assetic\Factory\LazyAssetManager">
      <argument type="service" id="assetic.asset_factory"/>
      <argument type="collection">
        <argument key="twig" type="service">
          <service class="Assetic\Factory\Loader\CachedFormulaLoader" public="false">
            <tag name="assetic.formula_loader" alias="twig"/>
            <tag name="assetic.templating.twig"/>
            <argument type="service">
              <service class="Assetic\Extension\Twig\TwigFormulaLoader" public="false">
                <tag name="assetic.templating.twig"/>
                <argument type="service" id="twig"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Assetic\Cache\ConfigCache" public="false">
                <argument>/var/www/html/siaptb/app/cache/dev/assetic/config</argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </argument>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="service" id="templating.loader"/>
            <argument></argument>
            <argument>/var/www/html/siaptb/app/Resources/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
    </service>
    <service id="assetic.asset_factory" class="Symfony\Bundle\AsseticBundle\Factory\AssetFactory" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service">
        <service class="Symfony\Component\DependencyInjection\ParameterBag\ParameterBag" factory-method="getParameterBag" factory-service="service_container" public="false"/>
      </argument>
      <argument>/var/www/html/siaptb/app/../web</argument>
      <argument>true</argument>
      <call method="addWorker">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Worker\UseControllerWorker" public="false">
            <tag name="assetic.factory_worker"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="assetic.value_supplier.default" class="Symfony\Bundle\AsseticBundle\DefaultValueSupplier" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="assetic.filter.cssrewrite" class="Assetic\Filter\CssRewriteFilter">
      <tag name="assetic.filter" alias="cssrewrite"/>
    </service>
    <service id="assetic.controller" class="Symfony\Bundle\AsseticBundle\Controller\AsseticController" scope="prototype">
      <argument type="service" id="request"/>
      <argument type="service" id="assetic.asset_manager"/>
      <argument type="service" id="assetic.cache"/>
      <argument>false</argument>
      <argument type="service" id="profiler" on-invalid="null"/>
      <call method="setValueSupplier">
        <argument type="service" id="assetic.value_supplier.default" on-invalid="ignore"/>
      </call>
    </service>
    <service id="assetic.cache" class="Assetic\Cache\FilesystemCache" public="false">
      <argument>/var/www/html/siaptb/app/cache/dev/assetic/assets</argument>
    </service>
    <service id="assetic.request_listener" class="Symfony\Bundle\AsseticBundle\EventListener\RequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection">
        <argument key="json" type="collection">
          <argument key="class">Sonata\Doctrine\Types\JsonType</argument>
          <argument key="commented">true</argument>
        </argument>
      </argument>
    </service>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="default">doctrine.dbal.default_connection</argument>
      </argument>
      <argument type="collection">
        <argument key="default">doctrine.orm.default_entity_manager</argument>
      </argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.default_connection" class="stdClass" factory-method="createConnection" factory-service="doctrine.dbal.connection_factory">
      <argument type="collection">
        <argument key="driver">pdo_pgsql</argument>
        <argument key="host">localhost</argument>
        <argument key="port">5432</argument>
        <argument key="dbname">siap</argument>
        <argument key="user">postgres</argument>
        <argument key="password">password</argument>
        <argument key="charset">UTF8</argument>
        <argument key="driverOptions" type="collection"/>
      </argument>
      <argument type="service">
        <service class="Doctrine\DBAL\Configuration" public="false">
          <call method="setSQLLogger">
            <argument type="service">
              <service class="Doctrine\DBAL\Logging\LoggerChain" public="false">
                <call method="addLogger">
                  <argument type="service">
                    <service class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
                      <tag name="monolog.logger" channel="doctrine"/>
                      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
                      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
                    </service>
                  </argument>
                </call>
                <call method="addLogger">
                  <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
                </call>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
          <argument type="service" id="service_container"/>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="FOS\UserBundle\Entity\UserListener" public="false">
                <tag name="doctrine.event_subscriber"/>
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="sonata.easy_extends.doctrine.mapper"/>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="sonata.cache.orm.event_subscriber"/>
          </call>
        </service>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="EntityManager59480f3fc0c25_546a8d27f194334ee012bfe64f629947b07e4919\__CG__\Doctrine\ORM\EntityManager">
      <file>/var/www/html/siaptb/app/cache/dev/jms_diextra/doctrine/EntityManager_59480f3fc0c25.php</file>
      <argument type="service">
        <service class="Doctrine\ORM\EntityManager" factory-method="create" public="false">
          <argument type="service" id="doctrine.dbal.default_connection"/>
          <argument type="service">
            <service class="Doctrine\ORM\Configuration" public="false">
              <call method="setEntityNamespaces">
                <argument type="collection">
                  <argument key="FOSUserBundle">FOS\UserBundle\Entity</argument>
                  <argument key="SonataUserBundle">Sonata\UserBundle\Entity</argument>
                  <argument key="ApplicationSonataUserBundle">Application\Sonata\UserBundle\Entity</argument>
                  <argument key="ApplicationCoreBundle">Application\CoreBundle\Entity</argument>
                  <argument key="MinsalSiapsBundle">Minsal\SiapsBundle\Entity</argument>
                  <argument key="MinsalSeguimientoBundle">Minsal\SeguimientoBundle\Entity</argument>
                  <argument key="MinsalCitasBundle">Minsal\CitasBundle\Entity</argument>
                  <argument key="ADesignsCalendarBundle">ADesigns\CalendarBundle\Entity</argument>
                  <argument key="MinsalLaboratorioBundle">Minsal\LaboratorioBundle\Entity</argument>
                  <argument key="MinsalFarmaciaBundle">Minsal\FarmaciaBundle\Entity</argument>
                </argument>
              </call>
              <call method="setMetadataCacheImpl">
                <argument type="service">
                  <service class="Doctrine\Common\Cache\ArrayCache" public="false">
                    <call method="setNamespace">
                      <argument>sf2orm_default_853442daada002fe3d60756c707a8434e8de5a0b7851f32d34572a2cf981dd72</argument>
                    </call>
                  </service>
                </argument>
              </call>
              <call method="setQueryCacheImpl">
                <argument type="service">
                  <service class="Doctrine\Common\Cache\ArrayCache" public="false">
                    <call method="setNamespace">
                      <argument>sf2orm_default_853442daada002fe3d60756c707a8434e8de5a0b7851f32d34572a2cf981dd72</argument>
                    </call>
                  </service>
                </argument>
              </call>
              <call method="setResultCacheImpl">
                <argument type="service">
                  <service class="Doctrine\Common\Cache\ArrayCache" public="false">
                    <call method="setNamespace">
                      <argument>sf2orm_default_853442daada002fe3d60756c707a8434e8de5a0b7851f32d34572a2cf981dd72</argument>
                    </call>
                  </service>
                </argument>
              </call>
              <call method="setMetadataDriverImpl">
                <argument type="service">
                  <service class="Doctrine\ORM\Mapping\Driver\DriverChain" public="false">
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                          <argument type="collection">
                            <argument key="/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                            <argument key="/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                          </argument>
                          <call method="setGlobalBasename">
                            <argument>mapping</argument>
                          </call>
                        </service>
                      </argument>
                      <argument>FOS\UserBundle\Entity</argument>
                    </call>
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                          <argument type="collection">
                            <argument key="/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine">FOS\UserBundle\Entity</argument>
                            <argument key="/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/config/doctrine">Sonata\UserBundle\Entity</argument>
                          </argument>
                          <call method="setGlobalBasename">
                            <argument>mapping</argument>
                          </call>
                        </service>
                      </argument>
                      <argument>Sonata\UserBundle\Entity</argument>
                    </call>
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                          <argument type="service" id="annotation_reader"/>
                          <argument type="collection">
                            <argument>/var/www/html/siaptb/src/Application/Sonata/UserBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Application/CoreBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SiapsBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SeguimientoBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/CitasBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/vendor/adesigns/calendar-bundle/ADesigns/CalendarBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/LaboratorioBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/FarmaciaBundle/Entity</argument>
                          </argument>
                        </service>
                      </argument>
                      <argument>Application\Sonata\UserBundle\Entity</argument>
                    </call>
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                          <argument type="service" id="annotation_reader"/>
                          <argument type="collection">
                            <argument>/var/www/html/siaptb/src/Application/Sonata/UserBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Application/CoreBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SiapsBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SeguimientoBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/CitasBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/vendor/adesigns/calendar-bundle/ADesigns/CalendarBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/LaboratorioBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/FarmaciaBundle/Entity</argument>
                          </argument>
                        </service>
                      </argument>
                      <argument>Application\CoreBundle\Entity</argument>
                    </call>
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                          <argument type="service" id="annotation_reader"/>
                          <argument type="collection">
                            <argument>/var/www/html/siaptb/src/Application/Sonata/UserBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Application/CoreBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SiapsBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SeguimientoBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/CitasBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/vendor/adesigns/calendar-bundle/ADesigns/CalendarBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/LaboratorioBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/FarmaciaBundle/Entity</argument>
                          </argument>
                        </service>
                      </argument>
                      <argument>Minsal\SiapsBundle\Entity</argument>
                    </call>
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                          <argument type="service" id="annotation_reader"/>
                          <argument type="collection">
                            <argument>/var/www/html/siaptb/src/Application/Sonata/UserBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Application/CoreBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SiapsBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SeguimientoBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/CitasBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/vendor/adesigns/calendar-bundle/ADesigns/CalendarBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/LaboratorioBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/FarmaciaBundle/Entity</argument>
                          </argument>
                        </service>
                      </argument>
                      <argument>Minsal\SeguimientoBundle\Entity</argument>
                    </call>
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                          <argument type="service" id="annotation_reader"/>
                          <argument type="collection">
                            <argument>/var/www/html/siaptb/src/Application/Sonata/UserBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Application/CoreBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SiapsBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SeguimientoBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/CitasBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/vendor/adesigns/calendar-bundle/ADesigns/CalendarBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/LaboratorioBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/FarmaciaBundle/Entity</argument>
                          </argument>
                        </service>
                      </argument>
                      <argument>Minsal\CitasBundle\Entity</argument>
                    </call>
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                          <argument type="service" id="annotation_reader"/>
                          <argument type="collection">
                            <argument>/var/www/html/siaptb/src/Application/Sonata/UserBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Application/CoreBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SiapsBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SeguimientoBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/CitasBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/vendor/adesigns/calendar-bundle/ADesigns/CalendarBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/LaboratorioBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/FarmaciaBundle/Entity</argument>
                          </argument>
                        </service>
                      </argument>
                      <argument>ADesigns\CalendarBundle\Entity</argument>
                    </call>
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                          <argument type="service" id="annotation_reader"/>
                          <argument type="collection">
                            <argument>/var/www/html/siaptb/src/Application/Sonata/UserBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Application/CoreBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SiapsBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SeguimientoBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/CitasBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/vendor/adesigns/calendar-bundle/ADesigns/CalendarBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/LaboratorioBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/FarmaciaBundle/Entity</argument>
                          </argument>
                        </service>
                      </argument>
                      <argument>Minsal\LaboratorioBundle\Entity</argument>
                    </call>
                    <call method="addDriver">
                      <argument type="service">
                        <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                          <argument type="service" id="annotation_reader"/>
                          <argument type="collection">
                            <argument>/var/www/html/siaptb/src/Application/Sonata/UserBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Application/CoreBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SiapsBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/SeguimientoBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/CitasBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/vendor/adesigns/calendar-bundle/ADesigns/CalendarBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/LaboratorioBundle/Entity</argument>
                            <argument>/var/www/html/siaptb/src/Minsal/FarmaciaBundle/Entity</argument>
                          </argument>
                        </service>
                      </argument>
                      <argument>Minsal\FarmaciaBundle\Entity</argument>
                    </call>
                  </service>
                </argument>
              </call>
              <call method="setProxyDir">
                <argument>/var/www/html/siaptb/app/cache/dev/doctrine/orm/Proxies</argument>
              </call>
              <call method="setProxyNamespace">
                <argument>Proxies</argument>
              </call>
              <call method="setAutoGenerateProxyClasses">
                <argument>true</argument>
              </call>
              <call method="setClassMetadataFactoryName">
                <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
              </call>
              <call method="setDefaultRepositoryClassName">
                <argument>Doctrine\ORM\EntityRepository</argument>
              </call>
              <call method="setNamingStrategy">
                <argument type="service">
                  <service class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
                </argument>
              </call>
              <call method="addCustomStringFunction">
                <argument>COALESCE</argument>
                <argument>Application\CoreBundle\Dql\CoalesceDql</argument>
              </call>
              <call method="addCustomStringFunction">
                <argument>NULLIF</argument>
                <argument>Application\CoreBundle\Dql\NullIfDql</argument>
              </call>
              <call method="addCustomStringFunction">
                <argument>CONCAT_WS</argument>
                <argument>Application\CoreBundle\Dql\ConcatWsDql</argument>
              </call>
              <call method="addCustomStringFunction">
                <argument>UNACCENT</argument>
                <argument>Application\CoreBundle\Dql\UnaccentString</argument>
              </call>
              <call method="addCustomStringFunction">
                <argument>INITCAP</argument>
                <argument>Application\CoreBundle\Dql\InitcapDql</argument>
              </call>
              <call method="addCustomNumericFunction">
                <argument>TO_NUMBER</argument>
                <argument>Application\CoreBundle\Dql\ToNumberDql</argument>
              </call>
              <call method="addCustomDatetimeFunction">
                <argument>DATE</argument>
                <argument>Application\CoreBundle\Dql\DateDql</argument>
              </call>
            </service>
          </argument>
          <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
        </service>
      </argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.core.date.moment_format_converter" class="Sonata\CoreBundle\Date\MomentFormatConverter"/>
    <service id="sonata.core.flashmessage.manager" class="Sonata\CoreBundle\FlashMessage\FlashManager">
      <tag name="sonata.status.renderer"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator.default"/>
      <argument type="collection">
        <argument key="warning" type="collection">
          <argument key="sonata_flash_warning" type="collection">
            <argument key="domain">sonata_flash_warning</argument>
          </argument>
          <argument key="warning" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_info" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
        </argument>
        <argument key="success" type="collection">
          <argument key="success" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_success" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_success" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
          <argument key="fos_user_success" type="collection">
            <argument key="domain">FOSUserBundle</argument>
          </argument>
        </argument>
        <argument key="danger" type="collection">
          <argument key="error" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_error" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_error" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="warning">warning</argument>
        <argument key="success">success</argument>
        <argument key="danger">danger</argument>
      </argument>
    </service>
    <service id="sonata.core.flashmessage.twig.extension" class="Sonata\CoreBundle\Twig\Extension\FlashMessageExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.core.flashmessage.manager"/>
    </service>
    <service id="sonata.core.form.type.array" class="Sonata\CoreBundle\Form\Type\ImmutableArrayType">
      <tag name="form.type" alias="sonata_type_immutable_array"/>
    </service>
    <service id="sonata.core.form.type.boolean" class="Sonata\CoreBundle\Form\Type\BooleanType">
      <tag name="form.type" alias="sonata_type_boolean"/>
    </service>
    <service id="sonata.core.form.type.collection" class="Sonata\CoreBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_collection"/>
    </service>
    <service id="sonata.core.form.type.translatable_choice" class="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">
      <tag name="form.type" alias="sonata_type_translatable_choice"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="sonata.core.form.type.date_range" class="Sonata\CoreBundle\Form\Type\DateRangeType">
      <tag name="form.type" alias="sonata_type_date_range"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="sonata.core.form.type.datetime_range" class="Sonata\CoreBundle\Form\Type\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_datetime_range"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="sonata.core.form.type.date_picker" class="Sonata\CoreBundle\Form\Type\DatePickerType">
      <tag name="form.type" alias="sonata_type_date_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
    </service>
    <service id="sonata.core.form.type.datetime_picker" class="Sonata\CoreBundle\Form\Type\DateTimePickerType">
      <tag name="form.type" alias="sonata_type_datetime_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
    </service>
    <service id="sonata.core.form.type.equal" class="Sonata\CoreBundle\Form\Type\EqualType">
      <tag name="form.type" alias="sonata_type_equal"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="sonata.core.twig.extension.text" class="Twig_Extensions_Extension_Text">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.core.twig.status_extension" class="Sonata\CoreBundle\Twig\Extension\StatusExtension">
      <tag name="twig.extension"/>
      <call method="addStatusService">
        <argument type="service" id="sonata.core.flashmessage.manager"/>
      </call>
    </service>
    <service id="sonata.core.twig.template_extension" class="Sonata\CoreBundle\Twig\Extension\TemplateExtension">
      <tag name="twig.extension"/>
      <argument>true</argument>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="sonata.core.model.adapter.chain"/>
    </service>
    <service id="sonata.core.model.adapter.chain" class="Sonata\CoreBundle\Model\Adapter\AdapterChain">
      <call method="addAdapter">
        <argument type="service">
          <service class="Sonata\CoreBundle\Model\Adapter\DoctrineORMAdapter" public="false">
            <argument type="service" id="doctrine" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.block.service.container" class="Sonata\BlockBundle\Block\Service\ContainerBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.container</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.empty" class="Sonata\BlockBundle\Block\Service\EmptyBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.empty</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.text" class="Sonata\BlockBundle\Block\Service\TextBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.text</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.rss" class="Sonata\BlockBundle\Block\Service\RssBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.rss</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.menu" class="Sonata\BlockBundle\Block\Service\MenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.menu</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.block.form.type.block" class="Sonata\BlockBundle\Form\Type\ServiceListType">
      <tag name="form.type" alias="sonata_block_service_choice"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="admin" type="collection">
          <argument>sonata.admin.block.admin_list</argument>
        </argument>
        <argument key="cms" type="collection">
          <argument>sonata.user.block.menu</argument>
          <argument>sonata.user.block.account</argument>
          <argument>sonata.block.service.text</argument>
          <argument>sonata.block.service.rss</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.block.manager" class="Sonata\BlockBundle\Block\BlockServiceManager" public="false">
      <argument type="service" id="service_container"/>
      <argument>true</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <call method="add">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.block.service.container</argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.empty</argument>
        <argument>sonata.block.service.empty</argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.text</argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.block.service.rss</argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.menu</argument>
        <argument>sonata.block.service.menu</argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.admin_list</argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.admin.block.search_result</argument>
      </call>
      <call method="add">
        <argument>sonata.user.block.menu</argument>
        <argument>sonata.user.block.menu</argument>
      </call>
      <call method="add">
        <argument>sonata.user.block.account</argument>
        <argument>sonata.user.block.account</argument>
      </call>
      <call method="add">
        <argument>sonata.formatter.block.formatter</argument>
        <argument>sonata.formatter.block.formatter</argument>
      </call>
    </service>
    <service id="sonata.block.context_manager.default" class="Sonata\BlockBundle\Block\BlockContextManager">
      <argument type="service" id="sonata.block.loader.chain"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
          <argument key="sonata.user.block.menu">sonata.cache.noop</argument>
          <argument key="sonata.user.block.account">sonata.cache.noop</argument>
          <argument key="sonata.block.service.text">sonata.cache.noop</argument>
          <argument key="sonata.block.service.rss">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.renderer.default" class="Sonata\BlockBundle\Block\BlockRenderer">
      <argument type="service" id="sonata.block.manager"/>
      <argument type="service" id="sonata.block.exception.strategy.manager"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="sonata.block.templating.helper" class="Sonata\BlockBundle\Templating\Helper\BlockHelper" public="false">
      <tag name="templating.helper" alias="sonata_block"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
          <argument key="sonata.user.block.menu">sonata.cache.noop</argument>
          <argument key="sonata.user.block.account">sonata.cache.noop</argument>
          <argument key="sonata.block.service.text">sonata.cache.noop</argument>
          <argument key="sonata.block.service.rss">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.block.context_manager.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="sonata.cache.manager" on-invalid="ignore"/>
      <argument type="service" id="sonata.block.cache.handler.default" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.loader.chain" class="Sonata\BlockBundle\Block\BlockLoaderChain">
      <argument type="collection">
        <argument type="service" id="sonata.block.loader.service"/>
      </argument>
    </service>
    <service id="sonata.block.loader.service" class="Sonata\BlockBundle\Block\Loader\ServiceLoader">
      <tag name="sonata.block.loader"/>
      <argument type="collection">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.user.block.menu</argument>
        <argument>sonata.user.block.account</argument>
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.rss</argument>
      </argument>
    </service>
    <service id="sonata.block.twig.global" class="Sonata\BlockBundle\Twig\GlobalVariables">
      <argument type="collection">
        <argument key="block_base">SonataBlockBundle:Block:block_base.html.twig</argument>
        <argument key="block_container">SonataBlockBundle:Block:block_container.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.block.cache.handler.default" class="Sonata\BlockBundle\Cache\HttpCacheHandler">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
    </service>
    <service id="sonata.block.cache.handler.noop" class="Sonata\BlockBundle\Cache\NoopHttpCacheHandler"/>
    <service id="sonata.block.exception.strategy.manager" class="Sonata\BlockBundle\Exception\Strategy\StrategyManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="debug_only">sonata.block.exception.filter.debug_only</argument>
        <argument key="ignore_block_exception">sonata.block.exception.filter.ignore_block_exception</argument>
        <argument key="keep_all">sonata.block.exception.filter.keep_all</argument>
        <argument key="keep_none">sonata.block.exception.filter.keep_none</argument>
      </argument>
      <argument type="collection">
        <argument key="inline">sonata.block.exception.renderer.inline</argument>
        <argument key="inline_debug">sonata.block.exception.renderer.inline_debug</argument>
        <argument key="throw">sonata.block.exception.renderer.throw</argument>
      </argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setDefaultFilter">
        <argument>debug_only</argument>
      </call>
      <call method="setDefaultRenderer">
        <argument>throw</argument>
      </call>
    </service>
    <service id="sonata.block.exception.filter.keep_none" class="Sonata\BlockBundle\Exception\Filter\KeepNoneFilter"/>
    <service id="sonata.block.exception.filter.keep_all" class="Sonata\BlockBundle\Exception\Filter\KeepAllFilter"/>
    <service id="sonata.block.exception.filter.debug_only" class="Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter">
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.filter.ignore_block_exception" class="Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter">
      <argument>Sonata\BlockBundle\Exception\BlockExceptionInterface</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline" class="Sonata\BlockBundle\Exception\Renderer\InlineRenderer">
      <argument type="service" id="templating"/>
      <argument>SonataBlockBundle:Block:block_exception.html.twig</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline_debug" class="Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer">
      <argument type="service" id="templating"/>
      <argument>SonataBlockBundle:Block:block_exception_debug.html.twig</argument>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.renderer.throw" class="Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer"/>
    <service id="knp_menu.factory" class="Knp\Menu\Silex\RouterAwareFactory">
      <argument type="service" id="router"/>
    </service>
    <service id="knp_menu.renderer_provider" class="Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider">
      <argument type="service" id="service_container"/>
      <argument>twig</argument>
      <argument type="collection">
        <argument key="list">knp_menu.renderer.list</argument>
        <argument key="twig">knp_menu.renderer.twig</argument>
      </argument>
    </service>
    <service id="knp_menu.renderer.list" class="Knp\Menu\Renderer\ListRenderer">
      <tag name="knp_menu.renderer" alias="list"/>
      <argument type="collection"/>
      <argument>UTF-8</argument>
    </service>
    <service id="knp_menu.renderer.twig" class="Knp\Menu\Renderer\TwigRenderer">
      <tag name="knp_menu.renderer" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>knp_menu.html.twig</argument>
      <argument type="collection"/>
    </service>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.datetime"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="sensio_framework_extra.converter.datetime" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.context" on-invalid="null"/>
      <argument type="service">
        <service class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage" public="false"/>
      </argument>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="sonata.admin.manager.orm" class="Sonata\DoctrineORMAdminBundle\Model\ModelManager">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.admin.builder.orm_form" class="Sonata\DoctrineORMAdminBundle\Builder\FormContractor">
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.admin.builder.orm_list" class="Sonata\DoctrineORMAdminBundle\Builder\ListBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_list_chain"/>
      <argument type="collection">
        <argument key="array">SonataAdminBundle:CRUD:list_array.html.twig</argument>
        <argument key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</argument>
        <argument key="date">SonataIntlBundle:CRUD:list_date.html.twig</argument>
        <argument key="time">SonataAdminBundle:CRUD:list_time.html.twig</argument>
        <argument key="datetime">SonataIntlBundle:CRUD:list_datetime.html.twig</argument>
        <argument key="text">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="email">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</argument>
        <argument key="string">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="smallint">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="bigint">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="integer">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="decimal">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="currency">SonataIntlBundle:CRUD:list_currency.html.twig</argument>
        <argument key="percent">SonataIntlBundle:CRUD:list_percent.html.twig</argument>
        <argument key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</argument>
        <argument key="url">SonataAdminBundle:CRUD:list_url.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_list" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_list"/>
    </service>
    <service id="sonata.admin.guesser.orm_list_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_list"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_show" class="Sonata\DoctrineORMAdminBundle\Builder\ShowBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_show_chain"/>
      <argument type="collection">
        <argument key="array">SonataAdminBundle:CRUD:show_array.html.twig</argument>
        <argument key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</argument>
        <argument key="date">SonataIntlBundle:CRUD:show_date.html.twig</argument>
        <argument key="time">SonataAdminBundle:CRUD:show_time.html.twig</argument>
        <argument key="datetime">SonataIntlBundle:CRUD:show_datetime.html.twig</argument>
        <argument key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</argument>
        <argument key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="smallint">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="bigint">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="integer">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="decimal">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="currency">SonataIntlBundle:CRUD:show_currency.html.twig</argument>
        <argument key="percent">SonataIntlBundle:CRUD:show_percent.html.twig</argument>
        <argument key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</argument>
        <argument key="url">SonataAdminBundle:CRUD:show_url.html.twig</argument>
        <argument key="file">ApplicationCoreBundle:CRUD:FieldType/show_field_file.html.twig</argument>
        <argument key="html">MinsalSiapsBundle:CRUD:Type/show_field_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_show" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_show"/>
    </service>
    <service id="sonata.admin.guesser.orm_show_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_show"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Builder\DatagridBuilder">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sonata.admin.builder.filter.factory"/>
      <argument type="service" id="sonata.admin.guesser.orm_datagrid_chain"/>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Guesser\FilterTypeGuesser">
      <tag name="sonata.admin.guesser.orm_datagrid"/>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_datagrid"/>
      </argument>
    </service>
    <service id="sonata.admin.orm.filter.type.boolean" class="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_boolean"/>
    </service>
    <service id="sonata.admin.orm.filter.type.callback" class="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_callback"/>
    </service>
    <service id="sonata.admin.orm.filter.type.choice" class="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_choice"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model" class="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model"/>
    </service>
    <service id="sonata.admin.orm.filter.type.string" class="Minsal\SiapsBundle\Filter\StringFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_string"/>
    </service>
    <service id="sonata.admin.orm.filter.type.number" class="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_number"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date" class="Sonata\DoctrineORMAdminBundle\Filter\DateFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime"/>
    </service>
    <service id="sonata.admin.orm.filter.type.time" class="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_time"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.class" class="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter" scope="prototype">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_class"/>
    </service>
    <service id="sonata.admin.manipulator.acl.object.orm" class="Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator"/>
    <service id="sonata.admin.twig.extension" class="Sonata\AdminBundle\Twig\Extension\SonataAdminExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.pool" class="Sonata\AdminBundle\Admin\Pool">
      <argument type="service" id="service_container"/>
      <argument>SIAP</argument>
      <argument>/bundles/applicationcore/images/siap_icon.png</argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="title_mode">both</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonataadmin/vendor/jquery/dist/jquery.min.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonataadmin/vendor/bootstrap/dist/js/bootstrap.min.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js</argument>
          <argument>bundles/sonataadmin/vendor/select2/select2.min.js</argument>
          <argument>bundles/sonataadmin/App.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonataadmin/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonataadmin/vendor/AdminLTE/css/font-awesome.min.css</argument>
          <argument>bundles/sonataadmin/vendor/AdminLTE/css/ionicons.min.css</argument>
          <argument>bundles/sonataadmin/vendor/AdminLTE/css/AdminLTE.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonataadmin/vendor/select2/select2.css</argument>
          <argument>bundles/sonataadmin/vendor/select2/select2-bootstrap.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
        </argument>
      </call>
      <call method="setAdminServiceIds">
        <argument type="collection">
          <argument>sonata.admin.establecimiento</argument>
          <argument>sonata.admin.modalidadestablecimiento</argument>
          <argument>sonata.admin.areamodalidadestablecimiento</argument>
          <argument>sonata.admin.ambientes</argument>
          <argument>sonata.admin.manualusuario</argument>
          <argument>sonata.admin.conexion</argument>
          <argument>sonata.admin.mntpaciente</argument>
          <argument>sonata.admin.secingreso</argument>
          <argument>sonata.admin.secemergencia</argument>
          <argument>sonata.admin.expediente</argument>
          <argument>sonata.admin.reporte.ingreso</argument>
          <argument>sonata.admin.cie10</argument>
          <argument>sonata.admin.ciq</argument>
          <argument>sonata.user.admin.user</argument>
          <argument>sonata.user.admin.group</argument>
          <argument>sonata.admin.empleado</argument>
          <argument>sonata.admin.sechistorialclinico</argument>
          <argument>sonata.admin.sechistoriallugar</argument>
          <argument>sonata.admin.secmotivoconsulta</argument>
          <argument>sonata.admin.frmformulario</argument>
          <argument>sonata.admin.mntusertour</argument>
          <argument>sonata.admin.secantecedentes</argument>
          <argument>sonata.admin.tarsolicitudfvih</argument>
          <argument>sonata.admin.tarsectar</argument>
          <argument>sonata.admin.secremisionpaciente</argument>
          <argument>minsal_farmacia.admin.farm_recetas</argument>
          <argument>minsal_farmacia.admin.farm_medicinarecetada</argument>
          <argument>minsal_farmacia.admin.farm_estados</argument>
          <argument>minsal_siaps.admin.mnt_paciente_referido</argument>
          <argument>minsal_siaps.admin.mnt_consultorio</argument>
          <argument>minsal_siaps.admin.mnt_rangohora</argument>
          <argument>minsal_siaps.admin.mnt_procedimiento_establecimiento</argument>
          <argument>minsal_siaps.admin.mnt_tipo_evento</argument>
          <argument>minsal_siaps.admin.mnt_evento</argument>
          <argument>minsal_seguimiento.admin.sec_dato_embarazo</argument>
          <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica</argument>
          <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica_aptitud</argument>
          <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica_procedimiento</argument>
          <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica_tipo_anestesia</argument>
          <argument>sonata.admin.citcitasdia</argument>
          <argument>minsal_citas.admin.cit_tipo_distribucion</argument>
          <argument>minsal_citas.admin.cit_distribucion</argument>
          <argument>minsal_citas.admin.cit_distribucion_procedimiento</argument>
          <argument>minsal_citas.admin.cit_estado_cita</argument>
          <argument>minsal_citas.admin.cit_tipocita</argument>
          <argument>minsal_citas.admin.cit_citas_procedimientos</argument>
          <argument>minsal_laboratorio.admin.lab_suministrante</argument>
          <argument>minsal_laboratorio.admin.sec_solicitudestudios</argument>
        </argument>
      </call>
      <call method="setAdminGroups">
        <argument type="collection">
          <argument key="AD-1-Administración" type="collection">
            <argument key="label">AD-1-Administración</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="items" type="collection">
              <argument>sonata.admin.establecimiento</argument>
              <argument>sonata.admin.modalidadestablecimiento</argument>
              <argument>sonata.admin.areamodalidadestablecimiento</argument>
              <argument>sonata.admin.ambientes</argument>
              <argument>sonata.admin.manualusuario</argument>
              <argument>sonata.admin.conexion</argument>
              <argument>sonata.admin.frmformulario</argument>
            </argument>
          </argument>
          <argument key="IP-1-Identificación Paciente" type="collection">
            <argument key="label">IP-1-Identificación Paciente</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="items" type="collection">
              <argument>sonata.admin.mntpaciente</argument>
              <argument>sonata.admin.secingreso</argument>
              <argument>sonata.admin.secemergencia</argument>
              <argument>minsal_siaps.admin.mnt_paciente_referido</argument>
            </argument>
          </argument>
          <argument key="RP-2-Identificación Paciente" type="collection">
            <argument key="label">RP-2-Identificación Paciente</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="items" type="collection">
              <argument>sonata.admin.expediente</argument>
              <argument>sonata.admin.reporte.ingreso</argument>
            </argument>
          </argument>
          <argument key="RP-1-Reportes" type="collection">
            <argument key="label">RP-1-Reportes</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="items" type="collection">
              <argument>sonata.admin.cie10</argument>
              <argument>sonata.admin.ciq</argument>
            </argument>
          </argument>
          <argument key="US-1-Usuario" type="collection">
            <argument key="label">US-1-Usuario</argument>
            <argument key="label_catalogue">SonataUserBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="items" type="collection">
              <argument>sonata.user.admin.user</argument>
              <argument>sonata.user.admin.group</argument>
              <argument>sonata.admin.empleado</argument>
            </argument>
          </argument>
          <argument key="HC-1-Historia Clinica" type="collection">
            <argument key="label">HC-1-Historia Clinica</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="items" type="collection">
              <argument>sonata.admin.sechistorialclinico</argument>
            </argument>
          </argument>
          <argument key="FR-1-Farmacia" type="collection">
            <argument key="label">FR-1-Farmacia</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="items" type="collection">
              <argument>minsal_farmacia.admin.farm_recetas</argument>
            </argument>
          </argument>
          <argument key="RP-2-Farmacia" type="collection">
            <argument key="label">RP-2-Farmacia</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="items" type="collection">
              <argument>minsal_farmacia.admin.farm_estados</argument>
            </argument>
          </argument>
          <argument key="CT-2-Administración" type="collection">
            <argument key="label">CT-2-Administración</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="items" type="collection">
              <argument>minsal_siaps.admin.mnt_consultorio</argument>
              <argument>minsal_siaps.admin.mnt_rangohora</argument>
              <argument>minsal_siaps.admin.mnt_procedimiento_establecimiento</argument>
              <argument>minsal_siaps.admin.mnt_tipo_evento</argument>
              <argument>minsal_siaps.admin.mnt_evento</argument>
              <argument>minsal_citas.admin.cit_tipo_distribucion</argument>
              <argument>minsal_citas.admin.cit_distribucion</argument>
              <argument>minsal_citas.admin.cit_distribucion_procedimiento</argument>
              <argument>minsal_citas.admin.cit_estado_cita</argument>
              <argument>minsal_citas.admin.cit_tipocita</argument>
            </argument>
          </argument>
          <argument key="SQ-1-Solicitud Quirurgica" type="collection">
            <argument key="label">SQ-1-Solicitud Quirurgica</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="items" type="collection">
              <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica</argument>
            </argument>
          </argument>
          <argument key="AG-1-Agenda" type="collection">
            <argument key="label">AG-1-Agenda</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="items" type="collection">
              <argument>sonata.admin.citcitasdia</argument>
            </argument>
          </argument>
          <argument key="CT-2-Citas Procedimiento" type="collection">
            <argument key="label">CT-2-Citas Procedimiento</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="items" type="collection">
              <argument>minsal_citas.admin.cit_citas_procedimientos</argument>
            </argument>
          </argument>
          <argument key="LB-2-Configuración" type="collection">
            <argument key="label">LB-2-Configuración</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="items" type="collection">
              <argument>minsal_laboratorio.admin.lab_suministrante</argument>
            </argument>
          </argument>
          <argument key="LB-1-Laboratorio" type="collection">
            <argument key="label">LB-1-Laboratorio</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="fa fa-folder"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="items" type="collection">
              <argument>minsal_laboratorio.admin.sec_solicitudestudios</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="setAdminClasses">
        <argument type="collection">
          <argument key="Minsal\SiapsBundle\Entity\CtlEstablecimiento" type="collection">
            <argument>sonata.admin.establecimiento</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntModalidadEstablecimiento" type="collection">
            <argument>sonata.admin.modalidadestablecimiento</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntAreaModEstab" type="collection">
            <argument>sonata.admin.areamodalidadestablecimiento</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntAtenAreaModEstab" type="collection">
            <argument>sonata.admin.ambientes</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntManualUsuario" type="collection">
            <argument>sonata.admin.manualusuario</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntConexion" type="collection">
            <argument>sonata.admin.conexion</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntPaciente" type="collection">
            <argument>sonata.admin.mntpaciente</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\SecIngreso" type="collection">
            <argument>sonata.admin.secingreso</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\SecEmergencia" type="collection">
            <argument>sonata.admin.secemergencia</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntExpediente" type="collection">
            <argument>sonata.admin.expediente</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\SecProcedenciaIngreso" type="collection">
            <argument>sonata.admin.reporte.ingreso</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntCie10" type="collection">
            <argument>sonata.admin.cie10</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntCiq" type="collection">
            <argument>sonata.admin.ciq</argument>
          </argument>
          <argument key="Application\Sonata\UserBundle\Entity\User" type="collection">
            <argument>sonata.user.admin.user</argument>
          </argument>
          <argument key="Application\Sonata\UserBundle\Entity\Group" type="collection">
            <argument>sonata.user.admin.group</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntEmpleado" type="collection">
            <argument>sonata.admin.empleado</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\SecHistorialClinico" type="collection">
            <argument>sonata.admin.sechistorialclinico</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\SecHistorialLugar" type="collection">
            <argument>sonata.admin.sechistoriallugar</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\SecMotivoConsulta" type="collection">
            <argument>sonata.admin.secmotivoconsulta</argument>
          </argument>
          <argument key="Application\CoreBundle\Entity\FrmFormulario" type="collection">
            <argument>sonata.admin.frmformulario</argument>
          </argument>
          <argument key="Application\CoreBundle\Entity\MntUserTour" type="collection">
            <argument>sonata.admin.mntusertour</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\SecAntecedentes" type="collection">
            <argument>sonata.admin.secantecedentes</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\TarSolicitudFvih" type="collection">
            <argument>sonata.admin.tarsolicitudfvih</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\TarSecTar" type="collection">
            <argument>sonata.admin.tarsectar</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\SecRemisionPaciente" type="collection">
            <argument>sonata.admin.secremisionpaciente</argument>
          </argument>
          <argument key="Minsal\FarmaciaBundle\Entity\FarmRecetas" type="collection">
            <argument>minsal_farmacia.admin.farm_recetas</argument>
          </argument>
          <argument key="Minsal\FarmaciaBundle\Entity\FarmMedicinarecetada" type="collection">
            <argument>minsal_farmacia.admin.farm_medicinarecetada</argument>
          </argument>
          <argument key="Minsal\FarmaciaBundle\Entity\FarmEstados" type="collection">
            <argument>minsal_farmacia.admin.farm_estados</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntPacienteReferido" type="collection">
            <argument>minsal_siaps.admin.mnt_paciente_referido</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntConsultorio" type="collection">
            <argument>minsal_siaps.admin.mnt_consultorio</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntRangohora" type="collection">
            <argument>minsal_siaps.admin.mnt_rangohora</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntProcedimientoEstablecimiento" type="collection">
            <argument>minsal_siaps.admin.mnt_procedimiento_establecimiento</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntTipoEvento" type="collection">
            <argument>minsal_siaps.admin.mnt_tipo_evento</argument>
          </argument>
          <argument key="Minsal\SiapsBundle\Entity\MntEvento" type="collection">
            <argument>minsal_siaps.admin.mnt_evento</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\SecDatoEmbarazo" type="collection">
            <argument>minsal_seguimiento.admin.sec_dato_embarazo</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\SecSolicitudQuirurgica" type="collection">
            <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\SecSolicitudQuirurgicaAptitud" type="collection">
            <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica_aptitud</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\SecSolicitudQuirurgicaProcedimiento" type="collection">
            <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica_procedimiento</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\SecSolicitudQuirurgicaTipoAnestesia" type="collection">
            <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica_tipo_anestesia</argument>
          </argument>
          <argument key="Minsal\CitasBundle\Entity\CitCitasDia" type="collection">
            <argument>sonata.admin.citcitasdia</argument>
          </argument>
          <argument key="Minsal\CitasBundle\Entity\CitTipoDistribucion" type="collection">
            <argument>minsal_citas.admin.cit_tipo_distribucion</argument>
          </argument>
          <argument key="Minsal\CitasBundle\Entity\CitDistribucion" type="collection">
            <argument>minsal_citas.admin.cit_distribucion</argument>
          </argument>
          <argument key="Minsal\CitasBundle\Entity\CitDistribucionProcedimiento" type="collection">
            <argument>minsal_citas.admin.cit_distribucion_procedimiento</argument>
          </argument>
          <argument key="Minsal\CitasBundle\Entity\CitEstadoCita" type="collection">
            <argument>minsal_citas.admin.cit_estado_cita</argument>
          </argument>
          <argument key="Minsal\CitasBundle\Entity\CitTipocita" type="collection">
            <argument>minsal_citas.admin.cit_tipocita</argument>
          </argument>
          <argument key="Minsal\CitasBundle\Entity\CitCitasProcedimientos" type="collection">
            <argument>minsal_citas.admin.cit_citas_procedimientos</argument>
          </argument>
          <argument key="Minsal\LaboratorioBundle\Entity\LabSuministrante" type="collection">
            <argument>minsal_laboratorio.admin.lab_suministrante</argument>
          </argument>
          <argument key="Minsal\SeguimientoBundle\Entity\SecSolicitudestudios" type="collection">
            <argument>minsal_laboratorio.admin.sec_solicitudestudios</argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.route_loader" class="Sonata\AdminBundle\Route\AdminPoolLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection">
        <argument>sonata.admin.establecimiento</argument>
        <argument>sonata.admin.modalidadestablecimiento</argument>
        <argument>sonata.admin.areamodalidadestablecimiento</argument>
        <argument>sonata.admin.ambientes</argument>
        <argument>sonata.admin.manualusuario</argument>
        <argument>sonata.admin.conexion</argument>
        <argument>sonata.admin.mntpaciente</argument>
        <argument>sonata.admin.secingreso</argument>
        <argument>sonata.admin.secemergencia</argument>
        <argument>sonata.admin.expediente</argument>
        <argument>sonata.admin.reporte.ingreso</argument>
        <argument>sonata.admin.cie10</argument>
        <argument>sonata.admin.ciq</argument>
        <argument>sonata.user.admin.user</argument>
        <argument>sonata.user.admin.group</argument>
        <argument>sonata.admin.empleado</argument>
        <argument>sonata.admin.sechistorialclinico</argument>
        <argument>sonata.admin.sechistoriallugar</argument>
        <argument>sonata.admin.secmotivoconsulta</argument>
        <argument>sonata.admin.frmformulario</argument>
        <argument>sonata.admin.mntusertour</argument>
        <argument>sonata.admin.secantecedentes</argument>
        <argument>sonata.admin.tarsolicitudfvih</argument>
        <argument>sonata.admin.tarsectar</argument>
        <argument>sonata.admin.secremisionpaciente</argument>
        <argument>minsal_farmacia.admin.farm_recetas</argument>
        <argument>minsal_farmacia.admin.farm_medicinarecetada</argument>
        <argument>minsal_farmacia.admin.farm_estados</argument>
        <argument>minsal_siaps.admin.mnt_paciente_referido</argument>
        <argument>minsal_siaps.admin.mnt_consultorio</argument>
        <argument>minsal_siaps.admin.mnt_rangohora</argument>
        <argument>minsal_siaps.admin.mnt_procedimiento_establecimiento</argument>
        <argument>minsal_siaps.admin.mnt_tipo_evento</argument>
        <argument>minsal_siaps.admin.mnt_evento</argument>
        <argument>minsal_seguimiento.admin.sec_dato_embarazo</argument>
        <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica</argument>
        <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica_aptitud</argument>
        <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica_procedimiento</argument>
        <argument>minsal_seguimiento.admin.sec_solicitud_quirurgica_tipo_anestesia</argument>
        <argument>sonata.admin.citcitasdia</argument>
        <argument>minsal_citas.admin.cit_tipo_distribucion</argument>
        <argument>minsal_citas.admin.cit_distribucion</argument>
        <argument>minsal_citas.admin.cit_distribucion_procedimiento</argument>
        <argument>minsal_citas.admin.cit_estado_cita</argument>
        <argument>minsal_citas.admin.cit_tipocita</argument>
        <argument>minsal_citas.admin.cit_citas_procedimientos</argument>
        <argument>minsal_laboratorio.admin.lab_suministrante</argument>
        <argument>minsal_laboratorio.admin.sec_solicitudestudios</argument>
      </argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.helper" class="Sonata\AdminBundle\Admin\AdminHelper">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.builder.filter.factory" class="Sonata\AdminBundle\Filter\FilterFactory">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="doctrine_orm_boolean">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="doctrine_orm_callback">sonata.admin.orm.filter.type.callback</argument>
        <argument key="doctrine_orm_choice">sonata.admin.orm.filter.type.choice</argument>
        <argument key="doctrine_orm_model">sonata.admin.orm.filter.type.model</argument>
        <argument key="doctrine_orm_string">sonata.admin.orm.filter.type.string</argument>
        <argument key="doctrine_orm_number">sonata.admin.orm.filter.type.number</argument>
        <argument key="doctrine_orm_date">sonata.admin.orm.filter.type.date</argument>
        <argument key="doctrine_orm_date_range">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="doctrine_orm_datetime">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="doctrine_orm_time">sonata.admin.orm.filter.type.time</argument>
        <argument key="doctrine_orm_datetime_range">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="doctrine_orm_class">sonata.admin.orm.filter.type.class</argument>
      </argument>
    </service>
    <service id="sonata.admin.label.strategy.bc" class="Sonata\AdminBundle\Translator\BCLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.native" class="Sonata\AdminBundle\Translator\NativeLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.noop" class="Sonata\AdminBundle\Translator\NoopLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.underscore" class="Sonata\AdminBundle\Translator\UnderscoreLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.form_component" class="Sonata\AdminBundle\Translator\FormLabelTranslatorStrategy"/>
    <service id="sonata.admin.controller.admin" class="Sonata\AdminBundle\Controller\HelperController">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.helper"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="sonata.admin.audit.manager" class="Sonata\AdminBundle\Model\AuditManager">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.exporter" class="Sonata\AdminBundle\Export\Exporter"/>
    <service id="sonata.admin.search.handler" class="Sonata\AdminBundle\Search\SearchHandler">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.event.extension" class="Sonata\AdminBundle\Event\AdminEventExtension">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.form.type.admin" class="Sonata\AdminBundle\Form\Type\AdminType">
      <tag name="form.type" alias="sonata_type_admin"/>
    </service>
    <service id="sonata.admin.form.type.model_choice" class="Sonata\AdminBundle\Form\Type\ModelType">
      <tag name="form.type" alias="sonata_type_model"/>
    </service>
    <service id="sonata.admin.form.type.model_list" class="Sonata\AdminBundle\Form\Type\ModelTypeList">
      <tag name="form.type" alias="sonata_type_model_list"/>
    </service>
    <service id="sonata.admin.form.type.model_reference" class="Sonata\AdminBundle\Form\Type\ModelReferenceType">
      <tag name="form.type" alias="sonata_type_model_reference"/>
    </service>
    <service id="sonata.admin.form.type.model_hidden" class="Sonata\AdminBundle\Form\Type\ModelHiddenType">
      <tag name="form.type" alias="sonata_type_model_hidden"/>
    </service>
    <service id="sonata.admin.form.extension.field" class="Sonata\AdminBundle\Form\Extension\Field\Type\FormTypeFieldExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="collection">
        <argument key="email"></argument>
        <argument key="textarea"></argument>
        <argument key="text"></argument>
        <argument key="choice"></argument>
        <argument key="integer"></argument>
        <argument key="datetime">sonata-medium-date</argument>
        <argument key="date">sonata-medium-date</argument>
      </argument>
    </service>
    <service id="sonata.admin.form.extension.field.mopa" class="Sonata\AdminBundle\Form\Extension\Field\Type\MopaCompatibilityTypeFieldExtension">
      <tag name="form.type_extension" alias="form"/>
    </service>
    <service id="sonata.admin.form.filter.type.number" class="Sonata\AdminBundle\Form\Type\Filter\NumberType">
      <tag name="form.type" alias="sonata_type_filter_number"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="sonata.admin.form.filter.type.choice" class="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">
      <tag name="form.type" alias="sonata_type_filter_choice"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="sonata.admin.form.filter.type.default" class="Sonata\AdminBundle\Form\Type\Filter\DefaultType">
      <tag name="form.type" alias="sonata_type_filter_default"/>
    </service>
    <service id="sonata.admin.form.filter.type.date" class="Sonata\AdminBundle\Form\Type\Filter\DateType">
      <tag name="form.type" alias="sonata_type_filter_date"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="sonata.admin.form.filter.type.daterange" class="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">
      <tag name="form.type" alias="sonata_type_filter_date_range"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">
      <tag name="form.type" alias="sonata_type_filter_datetime"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime_range" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_filter_datetime_range"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="sonata.admin.validator.inline" class="Sonata\AdminBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.admin.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.admin.route.path_info" class="Sonata\AdminBundle\Route\PathInfoBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.query_string" class="Sonata\AdminBundle\Route\QueryStringBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.default_generator" class="Sonata\AdminBundle\Route\DefaultRouteGenerator">
      <argument type="service" id="router"/>
      <argument type="service" id="sonata.admin.route.cache"/>
    </service>
    <service id="sonata.admin.route.cache" class="Sonata\AdminBundle\Route\RoutesCache">
      <argument>/var/www/html/siaptb/app/cache/dev/sonata/admin</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.route.cache_warmup" class="Sonata\AdminBundle\Route\RoutesCacheWarmUp">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="sonata.admin.route.cache"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.admin_list" class="Sonata\AdminBundle\Block\AdminListBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.admin_list</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.search_result" class="Sonata\AdminBundle\Block\AdminSearchBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.search_result</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.search.handler"/>
    </service>
    <service id="sonata.admin.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminAclManipulator">
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.object.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminObjectAclManipulator">
      <argument type="service" id="form.factory"/>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="fos_user.entity_manager" class="Doctrine\ORM\EntityManager" factory-method="getManager" factory-service="doctrine" public="false">
      <argument>null</argument>
    </service>
    <service id="fos_user.security.interactive_login_listener" class="FOS\UserBundle\Security\InteractiveLoginListener">
      <tag name="kernel.event_listener" event="security.interactive_login" method="onSecurityInteractiveLogin"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.security.login_manager" class="FOS\UserBundle\Security\LoginManager">
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="fos_user.util.user_manipulator" class="FOS\UserBundle\Util\UserManipulator">
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.username_form_type" class="FOS\UserBundle\Form\Type\UsernameFormType">
      <tag name="form.type" alias="fos_user_username"/>
      <argument type="service">
        <service class="FOS\UserBundle\Form\DataTransformer\UserToUsernameTransformer" public="false">
          <argument type="service" id="fos_user.user_manager"/>
        </service>
      </argument>
    </service>
    <service id="fos_user.profile.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_profile_form</argument>
      <argument>fos_user_profile</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Authentication</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.profile.form.type" class="FOS\UserBundle\Form\Type\ProfileFormType">
      <tag name="form.type" alias="fos_user_profile"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.registration.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_registration_form</argument>
      <argument>fos_user_registration</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Registration</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.registration.form.type" class="FOS\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="fos_user_registration"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.change_password.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_change_password_form</argument>
      <argument>fos_user_change_password</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>ChangePassword</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.change_password.form.type" class="FOS\UserBundle\Form\Type\ChangePasswordFormType">
      <tag name="form.type" alias="fos_user_change_password"/>
    </service>
    <service id="fos_user.change_password.form.handler.default" class="FOS\UserBundle\Form\Handler\ChangePasswordFormHandler" scope="request">
      <argument type="service" id="fos_user.change_password.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.resetting.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_resetting_form</argument>
      <argument>fos_user_resetting</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>ResetPassword</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.resetting.form.type" class="FOS\UserBundle\Form\Type\ResettingFormType">
      <tag name="form.type" alias="fos_user_resetting"/>
    </service>
    <service id="fos_user.group.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>fos_user_group_form</argument>
      <argument>fos_user_group</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Registration</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.group.form.type" class="FOS\UserBundle\Form\Type\GroupFormType">
      <tag name="form.type" alias="fos_user_group"/>
      <argument>Application\Sonata\UserBundle\Entity\Group</argument>
    </service>
    <service id="sonata.user.editable_role_builder" class="Sonata\UserBundle\Security\EditableRolesBuilder">
      <argument type="service" id="security.context"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection">
        <argument key="ROLE_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
          <argument>ROLE_USER_LISTAREXPEDIENTES</argument>
          <argument>ROLE_USER_BUSCAREMERGENCIA</argument>
          <argument>ROLE_USER_CONSULTAR</argument>
          <argument>ROLE_USER_DEPURACION</argument>
        </argument>
        <argument key="ROLE_SUPER_ADMIN" type="collection">
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_ALLOWED_TO_SWITCH</argument>
        </argument>
        <argument key="SONATA" type="collection">
          <argument>ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT</argument>
        </argument>
        <argument key="ROLE_SONATA_LAB_SEC_SOLICITUDESTUDIOS" type="collection">
          <argument>ROLE_MINSAL_LABORATORIO_ADMIN_SEC_SOLICITUDESTUDIOS_ASSIGNEXAM</argument>
          <argument>ROLE_MINSAL_LABORATORIO_ADMIN_SEC_SOLICITUDESTUDIOS_HISTORY</argument>
        </argument>
        <argument key="ROLE_SONATA_FARM_RECETAS" type="collection">
          <argument>ROLE_MINSAL_FARMACIA_ADMIN_FARM_RECETAS_ASSIGNRECETA</argument>
          <argument>ROLE_SONATA_ADMIN_FARMRECETAS_COMPLEMENT</argument>
          <argument>ROLE_SONATA_ADMIN_FARMRECETAS_COMPLEMENTALL</argument>
        </argument>
        <argument key="ROLE_SONATA_CIT_CITAS_DIA" type="collection">
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_TRANSFER</argument>
          <argument>ROLE_SONATA_ADMIN_CITAMEDICAS</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_CITAINTEGRAL</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_ASIGNAR</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_LISTAMEDICA_LIST</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_REFERENCIA</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_REPROGRAMAR</argument>
          <argument>ROLE_SONATA_ADMIN_AGENDAMEDICA_EMPLEADO_ESPECIALIDAD_LIST</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_EXCLUYENDO_TIPO_CITA</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_MEDICO_EXCLUYENDO_TIPO_CITA</argument>
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_REPORTES</argument>
          <argument>ROLE_SONATA_ADMIN_AGENDADIA</argument>
        </argument>
        <argument key="ROLE_SONATA_CIT_CITAS_PROCEDIMIENTOS" type="collection">
          <argument>ROLE_SONATA_ADMIN_CITCITASPROCEDIMIENTOS_REFERENCIA</argument>
          <argument>ROLE_MINSAL_CITAS_ADMIN_CIT_CITAS_PROCEDIMIENTOS_AGENDA</argument>
          <argument>ROLE_MINSAL_CITAS_ADMIN_CIT_CITAS_PROCEDIMIENTOS_PROCEDIMIENTOEMPLEADO_LIST</argument>
          <argument>ROLE_MINSAL_CITAS_ADMIN_CIT_CITAS_PROCEDIMIENTOS_REPORTES</argument>
        </argument>
        <argument key="ROLE_SONATA_SECHISTORIALCLINICO" type="collection">
          <argument>ROLE_SONATA_ADMIN_SECHISTORIALCLINICO_RETROACTIVE</argument>
          <argument>ROLE_SONATA_ADMIN_SECHISTORIALCLINICO_PACIENTESAPTOSESPECIALIZADA</argument>
          <argument>ROLE_SONATA_ADMIN_CONSULTAS_ATENDIDAS</argument>
        </argument>
        <argument key="ROLE_SONATA_CLINICASELECCION" type="collection">
          <argument>ROLE_SONATA_ADMIN_CITCITASDIA_CSELECCION</argument>
        </argument>
        <argument key="ROLE_API_LABORATORIO" type="collection">
          <argument>ROLE_API_CHECKOUT</argument>
          <argument>ROLE_API_LABORATORIO_INGRESORESULTADOS</argument>
          <argument>ROLE_API_LABORATORIO_ENVIAR_SOLICITUD_EQUIPOAUTOMATIZADO</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.user.form.type.security_roles" class="Sonata\UserBundle\Form\Type\SecurityRolesType">
      <tag name="form.type" alias="sonata_security_roles"/>
      <argument type="service" id="sonata.user.editable_role_builder"/>
    </service>
    <service id="sonata.user.manager.user" class="Sonata\UserBundle\Entity\UserManagerProxy">
      <argument>Sonata\UserBundle\Entity\User</argument>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="sonata.user.block.menu" class="Sonata\UserBundle\Block\ProfileMenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.user.block.menu</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="sonata.user.profile.menu_builder"/>
    </service>
    <service id="sonata.user.block.account" class="Sonata\UserBundle\Block\AccountBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.user.block.account</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="security.context"/>
    </service>
    <service id="sonata.user.profile.menu_builder" class="Sonata\UserBundle\Menu\ProfileMenuBuilder">
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="translator.default"/>
      <argument type="collection">
        <argument type="collection">
          <argument key="route">sonata_user_profile_edit</argument>
          <argument key="label">link_edit_profile</argument>
          <argument key="domain">SonataUserBundle</argument>
          <argument key="route_parameters" type="collection"/>
        </argument>
        <argument type="collection">
          <argument key="route">sonata_user_profile_edit_authentication</argument>
          <argument key="label">link_edit_authentication</argument>
          <argument key="domain">SonataUserBundle</argument>
          <argument key="route_parameters" type="collection"/>
        </argument>
      </argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.user.profile.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>sonata_user_profile_form</argument>
      <argument>sonata_user_profile</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Profile</argument>
        </argument>
        <argument key="translation_domain">SonataUserBundle</argument>
      </argument>
    </service>
    <service id="sonata.user.profile.form.type" class="Sonata\UserBundle\Form\Type\ProfileType">
      <tag name="form.type" alias="sonata_user_profile"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
    </service>
    <service id="sonata.user.form.gender_list" class="Sonata\CoreBundle\Form\Type\StatusType">
      <tag name="form.type" alias="sonata_user_gender"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
      <argument>getGenderList</argument>
      <argument>sonata_user_gender</argument>
    </service>
    <service id="sonata.user.registration.form" class="Symfony\Component\Form\Form" factory-method="createNamed" factory-service="form.factory">
      <argument>sonata_user_registration_form</argument>
      <argument>sonata_user_registration</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Registration</argument>
          <argument>Default</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.user.registration.form.type" class="Sonata\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="sonata_user_registration"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
      <argument type="collection"/>
    </service>
    <service id="sonata.user.twig.global" class="Sonata\UserBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.user.serializer.handler.user" class="Sonata\UserBundle\Serializer\UserSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.user.manager.user"/>
    </service>
    <service id="sonata.easy_extends.generator.bundle" class="Sonata\EasyExtendsBundle\Generator\BundleGenerator"/>
    <service id="sonata.easy_extends.generator.orm" class="Sonata\EasyExtendsBundle\Generator\OrmGenerator"/>
    <service id="sonata.easy_extends.generator.odm" class="Sonata\EasyExtendsBundle\Generator\OdmGenerator"/>
    <service id="sonata.easy_extends.generator.phpcr" class="Sonata\EasyExtendsBundle\Generator\PHPCRGenerator"/>
    <service id="sonata.easy_extends.generator.serializer" class="Sonata\EasyExtendsBundle\Generator\SerializerGenerator"/>
    <service id="sonata.easy_extends.doctrine.mapper" class="Sonata\EasyExtendsBundle\Mapper\DoctrineORMMapper">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="doctrine"/>
      <argument type="collection"/>
      <call method="addAssociation">
        <argument>Application\Sonata\UserBundle\Entity\User</argument>
        <argument>mapManyToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">groups</argument>
            <argument key="targetEntity">Application\Sonata\UserBundle\Entity\Group</argument>
            <argument key="cascade" type="collection"/>
            <argument key="joinTable" type="collection">
              <argument key="name">fos_user_user_group</argument>
              <argument key="joinColumns" type="collection">
                <argument type="collection">
                  <argument key="name">user_id</argument>
                  <argument key="referencedColumnName">id</argument>
                  <argument key="onDelete">CASCADE</argument>
                </argument>
              </argument>
              <argument key="inverseJoinColumns" type="collection">
                <argument type="collection">
                  <argument key="name">group_id</argument>
                  <argument key="referencedColumnName">id</argument>
                  <argument key="onDelete">CASCADE</argument>
                </argument>
              </argument>
            </argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="sonata.cache.manager" class="Sonata\Cache\CacheManager">
      <argument type="service" id="sonata.cache.invalidation.simple"/>
      <argument type="collection">
        <argument key="sonata.cache.noop" type="service" id="sonata.cache.noop"/>
        <argument key="sonata.cache.apc" type="service" id="sonata.cache.apc"/>
      </argument>
      <call method="setRecorder">
        <argument type="service" id="sonata.cache.recorder"/>
      </call>
    </service>
    <service id="sonata.cache.recorder" class="Sonata\Cache\Invalidation\Recorder">
      <argument type="service" id="sonata.cache.model_identifier"/>
    </service>
    <service id="sonata.cache.model_identifier" class="Sonata\Cache\Invalidation\ModelCollectionIdentifiers">
      <argument type="collection"/>
    </service>
    <service id="sonata.cache.noop" class="Sonata\Cache\Adapter\Cache\NoopCache">
      <tag name="sonata.cache"/>
    </service>
    <service id="sonata.cache.apc" class="Sonata\CacheBundle\Adapter\ApcCache">
      <tag name="sonata.cache"/>
      <argument type="service" id="router"/>
      <argument>s3cur3</argument>
      <argument>test</argument>
      <argument type="collection">
        <argument type="collection">
          <argument key="domain">kooqit.local</argument>
          <argument key="ip">127.0.0.1</argument>
          <argument key="port">80</argument>
          <argument key="basic">false</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.cache.invalidation.simple" class="Sonata\CacheBundle\Invalidation\SimpleCacheInvalidation">
      <argument type="service" id="logger"/>
    </service>
    <service id="sonata.cache.orm.event_subscriber.default" class="Sonata\CacheBundle\Invalidation\DoctrineORMListener">
      <argument type="service" id="sonata.cache.model_identifier"/>
      <argument type="collection">
        <argument key="sonata.cache.noop" type="service" id="sonata.cache.noop"/>
        <argument key="sonata.cache.apc" type="service" id="sonata.cache.apc"/>
      </argument>
    </service>
    <service id="sonata.cache.orm.event_subscriber" class="Sonata\CacheBundle\Invalidation\DoctrineORMListenerContainerAware">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <argument type="service" id="service_container"/>
      <argument>sonata.cache.orm.event_subscriber.default</argument>
    </service>
    <service id="ivory_ck_editor.helper.assets_version_trimer" class="Ivory\CKEditorBundle\Helper\AssetsVersionTrimerHelper"/>
    <service id="ivory_ck_editor.helper.templating" class="Ivory\CKEditorBundle\Helper\CKEditorHelper">
      <tag name="templating.helper" alias="ivory_ckeditor"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="ivory_ck_editor.form.type" class="Ivory\CKEditorBundle\Form\Type\CKEditorType">
      <tag name="form.type" alias="ckeditor"/>
      <argument>true</argument>
      <argument>bundles/ivoryckeditor/</argument>
      <argument>bundles/ivoryckeditor/ckeditor.js</argument>
      <argument type="service" id="ivory_ck_editor.config_manager"/>
      <argument type="service" id="ivory_ck_editor.plugin_manager"/>
      <argument type="service" id="ivory_ck_editor.styles_set_manager"/>
      <argument type="service" id="ivory_ck_editor.template_manager"/>
    </service>
    <service id="ivory_ck_editor.config_manager" class="Ivory\CKEditorBundle\Model\ConfigManager"/>
    <service id="ivory_ck_editor.plugin_manager" class="Ivory\CKEditorBundle\Model\PluginManager"/>
    <service id="ivory_ck_editor.styles_set_manager" class="Ivory\CKEditorBundle\Model\StylesSetManager"/>
    <service id="ivory_ck_editor.template_manager" class="Ivory\CKEditorBundle\Model\TemplateManager"/>
    <service id="ivory_ck_editor.twig_extension" class="Ivory\CKEditorBundle\Twig\CKEditorExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="ivory_ck_editor.helper.templating"/>
    </service>
    <service id="ivory_ordered_form.form_extension" class="Ivory\OrderedForm\Extension\OrderedFormExtension">
      <tag name="form.type_extension" alias="form"/>
    </service>
    <service id="ivory_ordered_form.button_extension" class="Ivory\OrderedForm\Extension\OrderedButtonExtension">
      <tag name="form.type_extension" alias="button"/>
    </service>
    <service id="sonata.formatter.pool" class="Sonata\FormatterBundle\Formatter\Pool">
      <argument type="service" id="logger"/>
      <call method="add">
        <argument>markdown</argument>
        <argument type="service" id="sonata.formatter.text.markdown"/>
        <argument type="service" id="sonata.formatter.twig.env.markdown"/>
      </call>
      <call method="add">
        <argument>text</argument>
        <argument type="service" id="sonata.formatter.text.text"/>
        <argument type="service" id="sonata.formatter.twig.env.text"/>
      </call>
      <call method="add">
        <argument>rawhtml</argument>
        <argument type="service" id="sonata.formatter.text.raw"/>
        <argument type="service" id="sonata.formatter.twig.env.rawhtml"/>
      </call>
      <call method="add">
        <argument>richhtml</argument>
        <argument type="service" id="sonata.formatter.text.raw"/>
        <argument type="service" id="sonata.formatter.twig.env.richhtml"/>
      </call>
      <call method="add">
        <argument>twig</argument>
        <argument type="service" id="sonata.formatter.text.twigengine"/>
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.formatter.text.markdown" class="Sonata\FormatterBundle\Formatter\MarkdownFormatter">
      <tag name="sonata.text.formatter" code="markdown"/>
      <argument type="service" id="markdown.parser"/>
    </service>
    <service id="sonata.formatter.text.text" class="Sonata\FormatterBundle\Formatter\TextFormatter">
      <tag name="sonata.text.formatter"/>
    </service>
    <service id="sonata.formatter.text.raw" class="Sonata\FormatterBundle\Formatter\RawFormatter">
      <tag name="sonata.text.formatter"/>
    </service>
    <service id="sonata.formatter.text.twigengine" class="Sonata\FormatterBundle\Formatter\TwigFormatter">
      <tag name="sonata.text.formatter"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="sonata.formatter.twig.gist" class="Sonata\FormatterBundle\Extension\GistExtension"/>
    <service id="sonata.formatter.twig.control_flow" class="Sonata\FormatterBundle\Extension\ControlFlowExtension"/>
    <service id="sonata.formatter.form.type.selector" class="Sonata\FormatterBundle\Form\Type\FormatterType">
      <tag name="form.type" alias="sonata_formatter_type"/>
      <argument type="service" id="sonata.formatter.pool"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="ivory_ck_editor.config_manager"/>
    </service>
    <service id="sonata.formatter.validator.formatter" class="Sonata\FormatterBundle\Validator\Constraints\FormatterValidator">
      <tag name="validator.constraint_validator" alias="sonata.formatter.validator.formatter"/>
      <argument type="service" id="sonata.formatter.pool"/>
    </service>
    <service id="sonata.formatter.block.formatter" class="Sonata\FormatterBundle\Block\FormatterBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.empty</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.formatter.twig.env.markdown" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service">
            <service class="Twig_Loader_String" public="false"/>
          </argument>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Sandbox" public="false">
            <argument type="service">
              <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
                <argument type="service" id="service_container"/>
                <argument type="collection">
                  <argument>sonata.formatter.twig.control_flow</argument>
                  <argument>sonata.formatter.twig.gist</argument>
                </argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="setLexer">
        <argument type="service">
          <service class="Twig_Lexer" public="false">
            <argument type="service" id="sonata.formatter.twig.env.markdown"/>
            <argument type="collection">
              <argument key="tag_comment" type="collection">
                <argument>&lt;#</argument>
                <argument>#&gt;</argument>
              </argument>
              <argument key="tag_block" type="collection">
                <argument>&lt;%</argument>
                <argument>%&gt;</argument>
              </argument>
              <argument key="tag_variable" type="collection">
                <argument>&lt;%=</argument>
                <argument>%&gt;</argument>
              </argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.formatter.twig.env.text" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service">
            <service class="Twig_Loader_String" public="false"/>
          </argument>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Sandbox" public="false">
            <argument type="service">
              <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
                <argument type="service" id="service_container"/>
                <argument type="collection">
                  <argument>sonata.formatter.twig.control_flow</argument>
                  <argument>sonata.formatter.twig.gist</argument>
                </argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="setLexer">
        <argument type="service">
          <service class="Twig_Lexer" public="false">
            <argument type="service" id="sonata.formatter.twig.env.text"/>
            <argument type="collection">
              <argument key="tag_comment" type="collection">
                <argument>&lt;#</argument>
                <argument>#&gt;</argument>
              </argument>
              <argument key="tag_block" type="collection">
                <argument>&lt;%</argument>
                <argument>%&gt;</argument>
              </argument>
              <argument key="tag_variable" type="collection">
                <argument>&lt;%=</argument>
                <argument>%&gt;</argument>
              </argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.formatter.twig.env.rawhtml" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service">
            <service class="Twig_Loader_String" public="false"/>
          </argument>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Sandbox" public="false">
            <argument type="service">
              <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
                <argument type="service" id="service_container"/>
                <argument type="collection">
                  <argument>sonata.formatter.twig.control_flow</argument>
                  <argument>sonata.formatter.twig.gist</argument>
                </argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="setLexer">
        <argument type="service">
          <service class="Twig_Lexer" public="false">
            <argument type="service" id="sonata.formatter.twig.env.rawhtml"/>
            <argument type="collection">
              <argument key="tag_comment" type="collection">
                <argument>&lt;#</argument>
                <argument>#&gt;</argument>
              </argument>
              <argument key="tag_block" type="collection">
                <argument>&lt;%</argument>
                <argument>%&gt;</argument>
              </argument>
              <argument key="tag_variable" type="collection">
                <argument>&lt;%=</argument>
                <argument>%&gt;</argument>
              </argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.formatter.twig.env.richhtml" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service">
            <service class="Twig_Loader_String" public="false"/>
          </argument>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Sandbox" public="false">
            <argument type="service">
              <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
                <argument type="service" id="service_container"/>
                <argument type="collection">
                  <argument>sonata.formatter.twig.control_flow</argument>
                  <argument>sonata.formatter.twig.gist</argument>
                </argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="setLexer">
        <argument type="service">
          <service class="Twig_Lexer" public="false">
            <argument type="service" id="sonata.formatter.twig.env.richhtml"/>
            <argument type="collection">
              <argument key="tag_comment" type="collection">
                <argument>&lt;#</argument>
                <argument>#&gt;</argument>
              </argument>
              <argument key="tag_block" type="collection">
                <argument>&lt;%</argument>
                <argument>%&gt;</argument>
              </argument>
              <argument key="tag_variable" type="collection">
                <argument>&lt;%=</argument>
                <argument>%&gt;</argument>
              </argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.intl.locale_detector.request" class="Sonata\IntlBundle\Locale\RequestDetector">
      <argument type="service" id="service_container" strict="false"/>
      <argument>es_SV</argument>
    </service>
    <service id="sonata.intl.templating.helper.locale" class="Sonata\IntlBundle\Templating\Helper\LocaleHelper">
      <tag name="templating.helper" alias="locale"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request"/>
    </service>
    <service id="sonata.intl.templating.helper.number" class="Sonata\IntlBundle\Templating\Helper\NumberHelper">
      <tag name="templating.helper" alias="number"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request"/>
    </service>
    <service id="sonata.intl.templating.helper.datetime" class="Sonata\IntlBundle\Templating\Helper\DateTimeHelper">
      <tag name="templating.helper" alias="datetime"/>
      <argument type="service" id="sonata.intl.timezone_detector.chain"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request"/>
    </service>
    <service id="sonata.intl.timezone_detector.chain" class="Sonata\IntlBundle\Timezone\ChainTimezoneDetector">
      <argument>America/El_Salvador</argument>
      <call method="addDetector">
        <argument type="service" id="sonata.intl.timezone_detector.user"/>
      </call>
      <call method="addDetector">
        <argument type="service" id="sonata.intl.timezone_detector.locale"/>
      </call>
    </service>
    <service id="sonata.intl.timezone_detector.user" class="Sonata\IntlBundle\Timezone\UserBasedTimezoneDetector">
      <tag name="sonata_intl.timezone_detector" alias="user"/>
      <argument type="service" id="security.context"/>
      <argument></argument>
    </service>
    <service id="sonata.intl.timezone_detector.locale" class="Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector">
      <tag name="sonata_intl.timezone_detector" alias="locale"/>
      <argument type="service" id="sonata.intl.locale_detector.request"/>
      <argument type="collection"/>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber">
      <tag name="jms_serializer.event_subscriber"/>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="1" type="collection">
          <argument key="sonata_user_user_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.user.serializer.handler.user</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.user.serializer.handler.user</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.user.serializer.handler.user</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToyml</argument>
            </argument>
          </argument>
        </argument>
        <argument key="2" type="collection">
          <argument key="sonata_user_user_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.user.serializer.handler.user</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.user.serializer.handler.user</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.user.serializer.handler.user</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromyml</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sO</argument>
      <argument>America/El_Salvador</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.php_collection_handler" class="JMS\Serializer\Handler\PhpCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.form_error_handler" class="JMS\Serializer\Handler\FormErrorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.templating.helper.serializer" class="JMS\SerializerBundle\Templating\SerializerHelper">
      <tag name="templating.helper" alias="jms_serializer"/>
      <argument type="service" id="jms_serializer"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\JsonSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\JsonDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\XmlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\XmlDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <call method="setDoctypeWhitelist">
        <argument type="collection"/>
      </call>
    </service>
    <service id="jms_serializer.yaml_serialization_visitor" class="JMS\Serializer\YamlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="yml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
    </service>
    <service id="jms_aop.pointcut_container" class="JMS\AopBundle\Aop\PointcutContainer"/>
    <service id="jms_aop.interceptor_loader" class="JMS\AopBundle\Aop\InterceptorLoader">
      <argument type="service" id="service_container"/>
    </service>
    <service id="jms_di_extra.metadata.metadata_factory" class="Metadata\MetadataFactory">
      <argument type="service">
        <service class="Metadata\Driver\LazyLoadingDriver" public="false">
          <argument type="service" id="service_container"/>
          <argument>jms_di_extra.metadata_driver</argument>
        </service>
      </argument>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service">
          <service class="Metadata\Cache\FileCache" public="false">
            <argument>/var/www/html/siaptb/app/cache/dev/jms_diextra/metadata</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="jms_di_extra.metadata.converter" class="JMS\DiExtraBundle\Metadata\MetadataConverter"/>
    <service id="jms_di_extra.controller_resolver" class="JMS\DiExtraBundle\HttpKernel\ControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="security.access.method_interceptor" class="JMS\SecurityExtraBundle\Security\Authorization\Interception\MethodSecurityInterceptor">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.context"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument type="service">
        <service class="JMS\SecurityExtraBundle\Security\Authorization\AfterInvocation\AfterInvocationManager" public="false">
          <argument type="collection"/>
        </service>
      </argument>
      <argument type="service">
        <service class="JMS\SecurityExtraBundle\Security\Authorization\RunAsManager" public="false">
          <argument>RunAsToken</argument>
          <argument>ROLE_</argument>
        </service>
      </argument>
      <argument type="service" id="security.extra.metadata_factory"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access.pointcut" class="JMS\SecurityExtraBundle\Security\Authorization\Interception\SecurityPointcut">
      <tag name="jms_aop.pointcut" interceptor="security.access.method_interceptor"/>
      <argument type="service" id="security.extra.metadata_factory"/>
      <argument>false</argument>
      <argument type="collection"/>
      <call method="setSecuredClasses">
        <argument type="collection"/>
      </call>
    </service>
    <service id="security.extra.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service">
        <service class="Metadata\Driver\LazyLoadingDriver" public="false">
          <argument type="service" id="service_container"/>
          <argument>security.extra.metadata_driver</argument>
        </service>
      </argument>
      <call method="setCache">
        <argument type="service">
          <service class="Metadata\Cache\FileCache" public="false">
            <argument>/var/www/html/siaptb/app/cache/dev/jms_security</argument>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="setIncludeInterfaces">
        <argument>true</argument>
      </call>
    </service>
    <service id="security.expressions.reverse_interpreter" class="JMS\SecurityExtraBundle\Security\Authorization\Expression\ReverseInterpreter">
      <argument type="service" id="security.expressions.compiler"/>
      <argument type="service" id="security.expressions.handler"/>
    </service>
    <service id="security.expressions.handler" class="JMS\SecurityExtraBundle\Security\Authorization\Expression\ContainerAwareExpressionHandler" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="security.expressions.compiler" class="JMS\SecurityExtraBundle\Security\Authorization\Expression\ExpressionCompiler">
      <call method="addFunctionCompiler">
        <argument type="service">
          <service class="JMS\SecurityExtraBundle\Security\Acl\Expression\HasPermissionFunctionCompiler" public="false">
            <tag name="security.expressions.function_compiler"/>
            <tag name="security.expressions.variable" variable="permission_evaluator" service="security.acl.permission_evaluator"/>
          </service>
        </argument>
      </call>
      <call method="addTypeCompiler">
        <argument type="service">
          <service class="JMS\SecurityExtraBundle\Security\Authorization\Expression\Compiler\ParameterExpressionCompiler" public="false">
            <tag name="security.expressions.type_compiler"/>
          </service>
        </argument>
      </call>
      <call method="addTypeCompiler">
        <argument type="service">
          <service class="JMS\SecurityExtraBundle\Security\Authorization\Expression\Compiler\ContainerAwareVariableCompiler" public="false">
            <tag name="security.expressions.type_compiler"/>
            <tag name="security.expressions.variable" variable="trust_resolver" service="security.authentication.trust_resolver"/>
            <tag name="security.expressions.variable" variable="role_hierarchy" service="security.role_hierarchy"/>
            <call method="setMaps">
              <argument type="collection">
                <argument key="trust_resolver">security.authentication.trust_resolver</argument>
                <argument key="role_hierarchy">security.role_hierarchy</argument>
                <argument key="permission_evaluator">security.acl.permission_evaluator</argument>
              </argument>
              <argument type="collection"/>
            </call>
          </service>
        </argument>
      </call>
    </service>
    <service id="fos_js_routing.extractor" class="FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor">
      <argument type="service" id="router"/>
      <argument type="collection"/>
      <argument>/var/www/html/siaptb/app/cache/dev</argument>
      <argument type="collection">
        <argument key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</argument>
        <argument key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</argument>
        <argument key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</argument>
        <argument key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</argument>
        <argument key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</argument>
        <argument key="AsseticBundle">Symfony\Bundle\AsseticBundle\AsseticBundle</argument>
        <argument key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</argument>
        <argument key="SonataCoreBundle">Sonata\CoreBundle\SonataCoreBundle</argument>
        <argument key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</argument>
        <argument key="SonatajQueryBundle">Sonata\jQueryBundle\SonatajQueryBundle</argument>
        <argument key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</argument>
        <argument key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</argument>
        <argument key="SonataDoctrineORMAdminBundle">Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle</argument>
        <argument key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</argument>
        <argument key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</argument>
        <argument key="SonataUserBundle">Sonata\UserBundle\SonataUserBundle</argument>
        <argument key="SonataEasyExtendsBundle">Sonata\EasyExtendsBundle\SonataEasyExtendsBundle</argument>
        <argument key="SonataCacheBundle">Sonata\CacheBundle\SonataCacheBundle</argument>
        <argument key="ApplicationSonataUserBundle">Application\Sonata\UserBundle\ApplicationSonataUserBundle</argument>
        <argument key="KnpMarkdownBundle">Knp\Bundle\MarkdownBundle\KnpMarkdownBundle</argument>
        <argument key="IvoryCKEditorBundle">Ivory\CKEditorBundle\IvoryCKEditorBundle</argument>
        <argument key="IvoryOrderedFormBundle">Ivory\OrderedFormBundle\IvoryOrderedFormBundle</argument>
        <argument key="SonataFormatterBundle">Sonata\FormatterBundle\SonataFormatterBundle</argument>
        <argument key="SonataIntlBundle">Sonata\IntlBundle\SonataIntlBundle</argument>
        <argument key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</argument>
        <argument key="JMSAopBundle">JMS\AopBundle\JMSAopBundle</argument>
        <argument key="JMSDiExtraBundle">JMS\DiExtraBundle\JMSDiExtraBundle</argument>
        <argument key="JMSSecurityExtraBundle">JMS\SecurityExtraBundle\JMSSecurityExtraBundle</argument>
        <argument key="FOSJsRoutingBundle">FOS\JsRoutingBundle\FOSJsRoutingBundle</argument>
        <argument key="ApplicationCoreBundle">Application\CoreBundle\ApplicationCoreBundle</argument>
        <argument key="MinsalSiapsBundle">Minsal\SiapsBundle\MinsalSiapsBundle</argument>
        <argument key="MinsalSeguimientoBundle">Minsal\SeguimientoBundle\MinsalSeguimientoBundle</argument>
        <argument key="MinsalCitasBundle">Minsal\CitasBundle\MinsalCitasBundle</argument>
        <argument key="ADesignsCalendarBundle">ADesigns\CalendarBundle\ADesignsCalendarBundle</argument>
        <argument key="MinsalLaboratorioBundle">Minsal\LaboratorioBundle\MinsalLaboratorioBundle</argument>
        <argument key="MinsalFarmaciaBundle">Minsal\FarmaciaBundle\MinsalFarmaciaBundle</argument>
        <argument key="EndroidQrCodeBundle">Endroid\Bundle\QrCodeBundle\EndroidQrCodeBundle</argument>
        <argument key="KnpSnappyBundle">Knp\Bundle\SnappyBundle\KnpSnappyBundle</argument>
        <argument key="ApplicationSoapBundle">Application\SoapBundle\ApplicationSoapBundle</argument>
        <argument key="KnpTimeBundle">Knp\Bundle\TimeBundle\KnpTimeBundle</argument>
        <argument key="ApplicationApiBundle">Application\ApiBundle\ApplicationApiBundle</argument>
        <argument key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</argument>
        <argument key="SensioDistributionBundle">Sensio\Bundle\DistributionBundle\SensioDistributionBundle</argument>
        <argument key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</argument>
      </argument>
    </service>
    <service id="fos_js_routing.controller" class="FOS\JsRoutingBundle\Controller\Controller">
      <argument type="service" id="fos_js_routing.serializer"/>
      <argument type="service" id="fos_js_routing.extractor"/>
      <argument type="collection">
        <argument key="enabled">false</argument>
      </argument>
      <argument>true</argument>
    </service>
    <service id="fos_js_routing.serializer" class="Symfony\Component\Serializer\Serializer">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer" public="false"/>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="json" type="service">
          <service class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false"/>
        </argument>
      </argument>
    </service>
    <service id="sonata.admin.citcitasdia" class="Minsal\CitasBundle\Admin\CitCitasDiaAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="AG-1-Agenda" label="Agenda Médica"/>
      <argument>sonata.admin.citcitasdia</argument>
      <argument>Minsal\CitasBundle\Entity\CitCitasDia</argument>
      <argument>MinsalCitasBundle:CitCitasDiaAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Agenda Médica</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_citas.admin.cit_tipo_distribucion" class="Minsal\CitasBundle\Admin\CitTipoDistribucionAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="CT-2-Administración" label="Tipo de Distribución"/>
      <argument>minsal_citas.admin.cit_tipo_distribucion</argument>
      <argument>Minsal\CitasBundle\Entity\CitTipoDistribucion</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Tipo de Distribución</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_citas.admin.cit_distribucion" class="Minsal\CitasBundle\Admin\CitDistribucionAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="CT-2-Administración" label="Distribución Médica"/>
      <argument>minsal_citas.admin.cit_distribucion</argument>
      <argument>Minsal\CitasBundle\Entity\CitDistribucion</argument>
      <argument>MinsalCitasBundle:CitDistribucionAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Distribución Médica</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_citas.admin.cit_distribucion_procedimiento" class="Minsal\CitasBundle\Admin\CitDistribucionProcedimientoAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="CT-2-Administración" label="Distribución de Procedimiento"/>
      <argument>minsal_citas.admin.cit_distribucion_procedimiento</argument>
      <argument>Minsal\CitasBundle\Entity\CitDistribucionProcedimiento</argument>
      <argument>MinsalCitasBundle:CitDistribucionProcedimientoAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Distribución de Procedimiento</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_citas.admin.cit_estado_cita" class="Minsal\CitasBundle\Admin\CitEstadoCitaAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="CT-2-Administración" label="Estado de la Cita"/>
      <argument>minsal_citas.admin.cit_estado_cita</argument>
      <argument>Minsal\CitasBundle\Entity\CitEstadoCita</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Estado de la Cita</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_citas.admin.cit_tipocita" class="Minsal\CitasBundle\Admin\CitTipocitaAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="CT-2-Administración" label="Tipo de Cita"/>
      <argument>minsal_citas.admin.cit_tipocita</argument>
      <argument>Minsal\CitasBundle\Entity\CitTipocita</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Tipo de Cita</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_citas.admin.cit_citas_procedimientos" class="Minsal\CitasBundle\Admin\CitCitasProcedimientosAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="CT-2-Citas Procedimiento" label="Asignar"/>
      <argument>minsal_citas.admin.cit_citas_procedimientos</argument>
      <argument>Minsal\CitasBundle\Entity\CitCitasProcedimientos</argument>
      <argument>MinsalCitasBundle:CitCitasProcedimientosAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Asignar</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_laboratorio.admin.lab_suministrante" class="Minsal\LaboratorioBundle\Admin\LabSuministranteAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="LB-2-Configuración" label="Suministrante"/>
      <argument>minsal_laboratorio.admin.lab_suministrante</argument>
      <argument>Minsal\LaboratorioBundle\Entity\LabSuministrante</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Suministrante</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="minsal_laboratorio.admin.sec_solicitudestudios" class="Minsal\LaboratorioBundle\Admin\SecSolicitudestudiosAdmin" scope="prototype">
      <tag name="sonata.admin" manager_type="orm" group="LB-1-Laboratorio" label="Solicitud de Estudio"/>
      <argument>minsal_laboratorio.admin.sec_solicitudestudios</argument>
      <argument>Minsal\SeguimientoBundle\Entity\SecSolicitudestudios</argument>
      <argument>MinsalLaboratorioBundle:SecSolicitudestudiosAdmin</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>MinsalSiapsBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setLabel">
        <argument>Solicitud de Estudio</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataUserBundle:Admin/Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">MinsalSiapsBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="OPERATOR" type="collection">
            <argument>OPERATOR</argument>
          </argument>
          <argument key="MASTER" type="collection">
            <argument>MASTER</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
    </service>
    <service id="endroid.qrcode.twig.extension" class="Endroid\Bundle\QrCodeBundle\Twig\Extension\QrCodeExtension">
      <tag name="twig.extension"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="knp_snappy.pdf" class="Knp\Bundle\SnappyBundle\Snappy\LoggableGenerator">
      <tag name="monolog.logger" channel="snappy"/>
      <argument type="service">
        <service class="Knp\Snappy\Pdf" public="false">
          <argument>wkhtmltopdf</argument>
          <argument type="collection"/>
          <argument type="collection"/>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.snappy" on-invalid="null"/>
    </service>
    <service id="knp_snappy.image" class="Knp\Bundle\SnappyBundle\Snappy\LoggableGenerator">
      <tag name="monolog.logger" channel="snappy"/>
      <argument type="service">
        <service class="Knp\Snappy\Image" public="false">
          <argument>wkhtmltoimage</argument>
          <argument type="collection"/>
          <argument type="collection"/>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.snappy" on-invalid="null"/>
    </service>
    <service id="seguimientowebservice" class="Application\SoapBundle\Service\SeguimientoWebService">
      <argument type="service" id="service_container"/>
    </service>
    <service id="soapclient" class="Application\SoapBundle\Service\SoapClientService" scope="prototype">
      <argument>true</argument>
      <argument>1</argument>
    </service>
    <service id="laboratoriowebservice" class="Application\SoapBundle\Service\LaboratorioWebService">
      <argument type="service" id="service_container"/>
    </service>
    <service id="interfaceliswebservice" class="Application\SoapBundle\Service\InterfaceLisWebService">
      <argument type="service" id="service_container"/>
    </service>
    <service id="time.datetime_formatter" class="Knp\Bundle\TimeBundle\DateTimeFormatter">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="time.templating.helper.time" class="Knp\Bundle\TimeBundle\Templating\Helper\TimeHelper">
      <tag name="templating.helper" alias="time"/>
      <argument type="service" id="time.datetime_formatter"/>
    </service>
    <service id="api.authenticator" class="Application\ApiBundle\Service\ApiService">
      <argument type="service" id="service_container"/>
    </service>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController">
      <argument type="service" id="router" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="data_collector.config" type="collection">
          <argument>config</argument>
          <argument>@WebProfiler/Collector/config.html.twig</argument>
        </argument>
        <argument key="data_collector.request" type="collection">
          <argument>request</argument>
          <argument>@WebProfiler/Collector/request.html.twig</argument>
        </argument>
        <argument key="data_collector.exception" type="collection">
          <argument>exception</argument>
          <argument>@WebProfiler/Collector/exception.html.twig</argument>
        </argument>
        <argument key="data_collector.events" type="collection">
          <argument>events</argument>
          <argument>@WebProfiler/Collector/events.html.twig</argument>
        </argument>
        <argument key="data_collector.logger" type="collection">
          <argument>logger</argument>
          <argument>@WebProfiler/Collector/logger.html.twig</argument>
        </argument>
        <argument key="data_collector.time" type="collection">
          <argument>time</argument>
          <argument>@WebProfiler/Collector/time.html.twig</argument>
        </argument>
        <argument key="data_collector.memory" type="collection">
          <argument>memory</argument>
          <argument>@WebProfiler/Collector/memory.html.twig</argument>
        </argument>
        <argument key="data_collector.router" type="collection">
          <argument>router</argument>
          <argument>@WebProfiler/Collector/router.html.twig</argument>
        </argument>
        <argument key="data_collector.form" type="collection">
          <argument>form</argument>
          <argument>@WebProfiler/Collector/form.html.twig</argument>
        </argument>
        <argument key="data_collector.security" type="collection">
          <argument>security</argument>
          <argument>@Security/Collector/security.html.twig</argument>
        </argument>
        <argument key="swiftmailer.data_collector" type="collection">
          <argument>swiftmailer</argument>
          <argument>@Swiftmailer/Collector/swiftmailer.html.twig</argument>
        </argument>
        <argument key="data_collector.doctrine" type="collection">
          <argument>db</argument>
          <argument>DoctrineBundle:Collector:db</argument>
        </argument>
        <argument key="sonata.block.data_collector" type="collection">
          <argument>block</argument>
          <argument>SonataBlockBundle:Profiler:block.html.twig</argument>
        </argument>
      </argument>
      <argument>bottom</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument>bottom</argument>
      <argument type="service" id="router" on-invalid="ignore"/>
    </service>
    <service id="sensio_distribution.webconfigurator" class="Sensio\Bundle\DistributionBundle\Configurator\Configurator">
      <argument>/var/www/html/siaptb/app</argument>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.emergency" class="Symfony\Bridge\Monolog\Logger">
      <argument>emergency</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.deprecation" class="Symfony\Bridge\Monolog\Logger">
      <argument>deprecation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.scream" class="Symfony\Bridge\Monolog\Logger">
      <argument>scream</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.snappy" class="Symfony\Bridge\Monolog\Logger">
      <argument>snappy</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.handler.debug" class="Symfony\Bridge\Monolog\Handler\DebugHandler">
      <argument>100</argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.filesystem" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage">
      <argument>/var/www/html/siaptb/app/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="templating.loader" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="debug.templating.engine.php" class="Symfony\Bundle\FrameworkBundle\Templating\TimedPhpEngine">
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="templating.loader"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="templating.globals"/>
      <call method="setCharset">
        <argument>UTF-8</argument>
      </call>
      <call method="setHelpers">
        <argument type="collection">
          <argument key="slots">templating.helper.slots</argument>
          <argument key="assets">templating.helper.assets</argument>
          <argument key="request">templating.helper.request</argument>
          <argument key="session">templating.helper.session</argument>
          <argument key="router">templating.helper.router</argument>
          <argument key="actions">templating.helper.actions</argument>
          <argument key="code">templating.helper.code</argument>
          <argument key="translator">templating.helper.translator</argument>
          <argument key="form">templating.helper.form</argument>
          <argument key="stopwatch">templating.helper.stopwatch</argument>
          <argument key="logout_url">templating.helper.logout_url</argument>
          <argument key="security">templating.helper.security</argument>
          <argument key="assetic">assetic.helper.dynamic</argument>
          <argument key="sonata_block">sonata.block.templating.helper</argument>
          <argument key="markdown">templating.helper.markdown</argument>
          <argument key="ivory_ckeditor">ivory_ck_editor.helper.templating</argument>
          <argument key="locale">sonata.intl.templating.helper.locale</argument>
          <argument key="number">sonata.intl.templating.helper.number</argument>
          <argument key="datetime">sonata.intl.templating.helper.datetime</argument>
          <argument key="jms_serializer">jms_serializer.templating.helper.serializer</argument>
          <argument key="time">time.templating.helper.time</argument>
        </argument>
      </call>
    </service>
    <service id="templating" class="Symfony\Bundle\TwigBundle\Debug\TimedTwigEngine">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="debug.stopwatch"/>
      <call method="setDefaultEscapingStrategy">
        <argument type="collection">
          <argument type="service" id="templating"/>
          <argument>guessDefaultEscapingStrategy</argument>
        </argument>
      </call>
    </service>
    <service id="router" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="service_container"/>
      <argument>/var/www/html/siaptb/app/cache/dev/assetic/routing.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/html/siaptb/app/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appDevUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appDevUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
    </service>
    <service id="annotation_reader" class="Doctrine\Common\Annotations\FileCacheReader">
      <argument type="service">
        <service class="Doctrine\Common\Annotations\AnnotationReader" public="false"/>
      </argument>
      <argument>/var/www/html/siaptb/app/cache/dev/annotations</argument>
      <argument>true</argument>
    </service>
    <service id="security.encoder_factory" class="Symfony\Component\Security\Core\Encoder\EncoderFactory">
      <argument type="collection">
        <argument key="FOS\UserBundle\Model\UserInterface" type="collection">
          <argument key="class">%security.encoder.digest.class%</argument>
          <argument key="arguments" type="collection">
            <argument>sha512</argument>
            <argument>true</argument>
            <argument>5000</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="twig.loader" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/symfony/swiftmailer-bundle/Symfony/Bundle/SwiftmailerBundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/doctrine/doctrine-bundle/Doctrine/Bundle/DoctrineBundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/views</argument>
        <argument>SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/sonata-project/block-bundle/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/app/Resources/SonataAdminBundle/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/app/Resources/SonataUserBundle/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/egeloen/ckeditor-bundle/Ivory/CKEditorBundle/Resources/views</argument>
        <argument>IvoryCKEditor</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/sonata-project/formatter-bundle/Resources/views</argument>
        <argument>SonataFormatter</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/sonata-project/intl-bundle/Resources/views</argument>
        <argument>SonataIntl</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/src/Application/CoreBundle/Resources/views</argument>
        <argument>ApplicationCore</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/src/Minsal/SiapsBundle/Resources/views</argument>
        <argument>MinsalSiaps</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/src/Minsal/SeguimientoBundle/Resources/views</argument>
        <argument>MinsalSeguimiento</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/src/Minsal/CitasBundle/Resources/views</argument>
        <argument>MinsalCitas</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/adesigns/calendar-bundle/ADesigns/CalendarBundle/Resources/views</argument>
        <argument>ADesignsCalendar</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/src/Minsal/LaboratorioBundle/Resources/views</argument>
        <argument>MinsalLaboratorio</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/src/Minsal/FarmaciaBundle/Resources/views</argument>
        <argument>MinsalFarmacia</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/src/Application/SoapBundle/Resources/views</argument>
        <argument>ApplicationSoap</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/src/Application/ApiBundle/Resources/views</argument>
        <argument>ApplicationApi</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/sensio/distribution-bundle/Sensio/Bundle/DistributionBundle/Resources/views</argument>
        <argument>SensioDistribution</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/siaptb/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
      </call>
    </service>
    <service id="logger" class="Symfony\Bridge\Monolog\Logger">
      <argument>app</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport" class="Swift_Transport_SpoolTransport">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.spool" class="Swift_MemorySpool"/>
    <service id="swiftmailer.mailer.default.transport.real" class="Swift_Transport_EsmtpTransport">
      <argument type="service">
        <service class="Swift_Transport_StreamBuffer" public="false">
          <argument type="service">
            <service class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
          </argument>
        </service>
      </argument>
      <argument type="collection">
        <argument type="service">
          <service class="Swift_Transport_Esmtp_AuthHandler" public="false">
            <argument type="collection">
              <argument type="service" id="c79d228f3bcb63d5af76a6b8fa1f4dfa4e1473d524a9d1045fc6ae6fbfdf0ed1_1"/>
              <argument type="service" id="c79d228f3bcb63d5af76a6b8fa1f4dfa4e1473d524a9d1045fc6ae6fbfdf0ed1_2"/>
              <argument type="service" id="c79d228f3bcb63d5af76a6b8fa1f4dfa4e1473d524a9d1045fc6ae6fbfdf0ed1_3"/>
            </argument>
            <call method="setUsername">
              <argument>null</argument>
            </call>
            <call method="setPassword">
              <argument>null</argument>
            </call>
            <call method="setAuthMode">
              <argument>null</argument>
            </call>
          </service>
        </argument>
      </argument>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <call method="setHost">
        <argument>localhost</argument>
      </call>
      <call method="setPort">
        <argument>25</argument>
      </call>
      <call method="setEncryption">
        <argument>null</argument>
      </call>
      <call method="setTimeout">
        <argument>30</argument>
      </call>
      <call method="setSourceIp">
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.admin.security.handler" class="Sonata\AdminBundle\Security\Handler\RoleSecurityHandler">
      <argument type="service" id="security.context" on-invalid="null"/>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
      </argument>
    </service>
    <service id="fos_user.mailer" class="FOS\UserBundle\Mailer\Mailer">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="router"/>
      <argument type="service" id="templating"/>
      <argument type="collection">
        <argument key="confirmation.template">FOSUserBundle:Registration:email.txt.twig</argument>
        <argument key="resetting.template">FOSUserBundle:Resetting:email.txt.twig</argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation" type="collection">
            <argument key="webmaster@example.com">webmaster</argument>
          </argument>
          <argument key="resetting" type="collection">
            <argument key="webmaster@example.com">webmaster</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.util.email_canonicalizer" class="FOS\UserBundle\Util\Canonicalizer"/>
    <service id="fos_user.util.token_generator" class="FOS\UserBundle\Util\TokenGenerator">
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="fos_user.user_manager" class="Sonata\UserBundle\Entity\UserManager">
      <argument type="service" id="security.encoder_factory"/>
      <argument type="service" id="fos_user.util.email_canonicalizer"/>
      <argument type="service" id="fos_user.util.email_canonicalizer"/>
      <argument type="service" id="fos_user.entity_manager"/>
      <argument>Application\Sonata\UserBundle\Entity\User</argument>
    </service>
    <service id="fos_user.profile.form.handler" class="FOS\UserBundle\Form\Handler\ProfileFormHandler" scope="request">
      <argument type="service" id="fos_user.profile.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.registration.form.handler" class="FOS\UserBundle\Form\Handler\RegistrationFormHandler" scope="request">
      <argument type="service" id="fos_user.registration.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
      <argument type="service" id="fos_user.mailer"/>
      <argument type="service" id="fos_user.util.token_generator"/>
    </service>
    <service id="fos_user.resetting.form.handler" class="FOS\UserBundle\Form\Handler\ResettingFormHandler" scope="request">
      <argument type="service" id="fos_user.resetting.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="fos_user.group_manager" class="Sonata\UserBundle\Entity\GroupManager">
      <argument type="service" id="fos_user.entity_manager"/>
      <argument>Application\Sonata\UserBundle\Entity\Group</argument>
    </service>
    <service id="fos_user.group.form.handler" class="FOS\UserBundle\Form\Handler\GroupFormHandler" scope="request">
      <argument type="service" id="fos_user.group.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.group_manager"/>
    </service>
    <service id="sonata.user.profile.form.handler" class="Sonata\UserBundle\Form\Handler\ProfileFormHandler" scope="request">
      <argument type="service" id="sonata.user.profile.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
    </service>
    <service id="sonata.user.registration.form.handler" class="Sonata\UserBundle\Form\Handler\RegistrationFormHandler" scope="request">
      <argument type="service" id="sonata.user.registration.form"/>
      <argument type="service" id="request"/>
      <argument type="service" id="fos_user.user_manager"/>
      <argument type="service" id="fos_user.mailer"/>
      <argument type="service" id="fos_user.util.token_generator"/>
    </service>
    <service id="markdown.parser" class="Knp\Bundle\MarkdownBundle\Parser\Preset\Max">
      <tag name="markdown.parser" alias="max"/>
    </service>
    <service id="jms_serializer.metadata_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver">
      <argument type="service">
        <service class="Metadata\Driver\DriverChain" public="false">
          <argument type="collection">
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/var/www/html/siaptb/vendor/symfony/monolog-bundle/Symfony/Bundle/MonologBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/var/www/html/siaptb/vendor/symfony/swiftmailer-bundle/Symfony/Bundle/SwiftmailerBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">/var/www/html/siaptb/vendor/symfony/assetic-bundle/Symfony/Bundle/AsseticBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/var/www/html/siaptb/vendor/doctrine/doctrine-bundle/Doctrine/Bundle/DoctrineBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">/var/www/html/siaptb/vendor/sonata-project/block-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\jQueryBundle">/var/www/html/siaptb/vendor/sonata-project/jquery-bundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">/var/www/html/siaptb/vendor/knplabs/knp-menu-bundle/Knp/Bundle/MenuBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/var/www/html/siaptb/vendor/sensio/framework-extra-bundle/Sensio/Bundle/FrameworkExtraBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">/var/www/html/siaptb/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\UserBundle">/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">/var/www/html/siaptb/vendor/sonata-project/easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CacheBundle">/var/www/html/siaptb/vendor/sonata-project/cache-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\UserBundle">/var/www/html/siaptb/src/Application/Sonata/UserBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MarkdownBundle">/var/www/html/siaptb/vendor/knplabs/knp-markdown-bundle/Knp/Bundle/MarkdownBundle/Resources/config/serializer</argument>
                      <argument key="Ivory\CKEditorBundle">/var/www/html/siaptb/vendor/egeloen/ckeditor-bundle/Ivory/CKEditorBundle/Resources/config/serializer</argument>
                      <argument key="Ivory\OrderedFormBundle">/var/www/html/siaptb/vendor/egeloen/ordered-form-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\FormatterBundle">/var/www/html/siaptb/vendor/sonata-project/formatter-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\IntlBundle">/var/www/html/siaptb/vendor/sonata-project/intl-bundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/var/www/html/siaptb/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="JMS\AopBundle">/var/www/html/siaptb/vendor/jms/aop-bundle/JMS/AopBundle/Resources/config/serializer</argument>
                      <argument key="JMS\DiExtraBundle">/var/www/html/siaptb/vendor/jms/di-extra-bundle/JMS/DiExtraBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SecurityExtraBundle">/var/www/html/siaptb/vendor/jms/security-extra-bundle/JMS/SecurityExtraBundle/Resources/config/serializer</argument>
                      <argument key="FOS\JsRoutingBundle">/var/www/html/siaptb/vendor/friendsofsymfony/jsrouting-bundle/FOS/JsRoutingBundle/Resources/config/serializer</argument>
                      <argument key="Application\CoreBundle">/var/www/html/siaptb/src/Application/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\SiapsBundle">/var/www/html/siaptb/src/Minsal/SiapsBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\SeguimientoBundle">/var/www/html/siaptb/src/Minsal/SeguimientoBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\CitasBundle">/var/www/html/siaptb/src/Minsal/CitasBundle/Resources/config/serializer</argument>
                      <argument key="ADesigns\CalendarBundle">/var/www/html/siaptb/vendor/adesigns/calendar-bundle/ADesigns/CalendarBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\LaboratorioBundle">/var/www/html/siaptb/src/Minsal/LaboratorioBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\FarmaciaBundle">/var/www/html/siaptb/src/Minsal/FarmaciaBundle/Resources/config/serializer</argument>
                      <argument key="Endroid\Bundle\QrCodeBundle">/var/www/html/siaptb/vendor/endroid/qrcode-bundle/Endroid/Bundle/QrCodeBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\SnappyBundle">/var/www/html/siaptb/vendor/knplabs/knp-snappy-bundle/Resources/config/serializer</argument>
                      <argument key="Application\SoapBundle">/var/www/html/siaptb/src/Application/SoapBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\TimeBundle">/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/config/serializer</argument>
                      <argument key="Application\ApiBundle">/var/www/html/siaptb/src/Application/ApiBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">/var/www/html/siaptb/vendor/sensio/distribution-bundle/Sensio/Bundle/DistributionBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/var/www/html/siaptb/vendor/sensio/generator-bundle/Sensio/Bundle/GeneratorBundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/var/www/html/siaptb/vendor/symfony/monolog-bundle/Symfony/Bundle/MonologBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/var/www/html/siaptb/vendor/symfony/swiftmailer-bundle/Symfony/Bundle/SwiftmailerBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">/var/www/html/siaptb/vendor/symfony/assetic-bundle/Symfony/Bundle/AsseticBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/var/www/html/siaptb/vendor/doctrine/doctrine-bundle/Doctrine/Bundle/DoctrineBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">/var/www/html/siaptb/vendor/sonata-project/block-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\jQueryBundle">/var/www/html/siaptb/vendor/sonata-project/jquery-bundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">/var/www/html/siaptb/vendor/knplabs/knp-menu-bundle/Knp/Bundle/MenuBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/var/www/html/siaptb/vendor/sensio/framework-extra-bundle/Sensio/Bundle/FrameworkExtraBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">/var/www/html/siaptb/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\UserBundle">/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">/var/www/html/siaptb/vendor/sonata-project/easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CacheBundle">/var/www/html/siaptb/vendor/sonata-project/cache-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\UserBundle">/var/www/html/siaptb/src/Application/Sonata/UserBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MarkdownBundle">/var/www/html/siaptb/vendor/knplabs/knp-markdown-bundle/Knp/Bundle/MarkdownBundle/Resources/config/serializer</argument>
                      <argument key="Ivory\CKEditorBundle">/var/www/html/siaptb/vendor/egeloen/ckeditor-bundle/Ivory/CKEditorBundle/Resources/config/serializer</argument>
                      <argument key="Ivory\OrderedFormBundle">/var/www/html/siaptb/vendor/egeloen/ordered-form-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\FormatterBundle">/var/www/html/siaptb/vendor/sonata-project/formatter-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\IntlBundle">/var/www/html/siaptb/vendor/sonata-project/intl-bundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/var/www/html/siaptb/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="JMS\AopBundle">/var/www/html/siaptb/vendor/jms/aop-bundle/JMS/AopBundle/Resources/config/serializer</argument>
                      <argument key="JMS\DiExtraBundle">/var/www/html/siaptb/vendor/jms/di-extra-bundle/JMS/DiExtraBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SecurityExtraBundle">/var/www/html/siaptb/vendor/jms/security-extra-bundle/JMS/SecurityExtraBundle/Resources/config/serializer</argument>
                      <argument key="FOS\JsRoutingBundle">/var/www/html/siaptb/vendor/friendsofsymfony/jsrouting-bundle/FOS/JsRoutingBundle/Resources/config/serializer</argument>
                      <argument key="Application\CoreBundle">/var/www/html/siaptb/src/Application/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\SiapsBundle">/var/www/html/siaptb/src/Minsal/SiapsBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\SeguimientoBundle">/var/www/html/siaptb/src/Minsal/SeguimientoBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\CitasBundle">/var/www/html/siaptb/src/Minsal/CitasBundle/Resources/config/serializer</argument>
                      <argument key="ADesigns\CalendarBundle">/var/www/html/siaptb/vendor/adesigns/calendar-bundle/ADesigns/CalendarBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\LaboratorioBundle">/var/www/html/siaptb/src/Minsal/LaboratorioBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\FarmaciaBundle">/var/www/html/siaptb/src/Minsal/FarmaciaBundle/Resources/config/serializer</argument>
                      <argument key="Endroid\Bundle\QrCodeBundle">/var/www/html/siaptb/vendor/endroid/qrcode-bundle/Endroid/Bundle/QrCodeBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\SnappyBundle">/var/www/html/siaptb/vendor/knplabs/knp-snappy-bundle/Resources/config/serializer</argument>
                      <argument key="Application\SoapBundle">/var/www/html/siaptb/src/Application/SoapBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\TimeBundle">/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/config/serializer</argument>
                      <argument key="Application\ApiBundle">/var/www/html/siaptb/src/Application/ApiBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">/var/www/html/siaptb/vendor/sensio/distribution-bundle/Sensio/Bundle/DistributionBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/var/www/html/siaptb/vendor/sensio/generator-bundle/Sensio/Bundle/GeneratorBundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\PhpDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/var/www/html/siaptb/vendor/symfony/monolog-bundle/Symfony/Bundle/MonologBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/var/www/html/siaptb/vendor/symfony/swiftmailer-bundle/Symfony/Bundle/SwiftmailerBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">/var/www/html/siaptb/vendor/symfony/assetic-bundle/Symfony/Bundle/AsseticBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/var/www/html/siaptb/vendor/doctrine/doctrine-bundle/Doctrine/Bundle/DoctrineBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">/var/www/html/siaptb/vendor/sonata-project/core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">/var/www/html/siaptb/vendor/sonata-project/block-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\jQueryBundle">/var/www/html/siaptb/vendor/sonata-project/jquery-bundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">/var/www/html/siaptb/vendor/knplabs/knp-menu-bundle/Knp/Bundle/MenuBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/var/www/html/siaptb/vendor/sensio/framework-extra-bundle/Sensio/Bundle/FrameworkExtraBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">/var/www/html/siaptb/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">/var/www/html/siaptb/vendor/sonata-project/admin-bundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">/var/www/html/siaptb/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/serializer</argument>
                      <argument key="Sonata\UserBundle">/var/www/html/siaptb/vendor/sonata-project/user-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">/var/www/html/siaptb/vendor/sonata-project/easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CacheBundle">/var/www/html/siaptb/vendor/sonata-project/cache-bundle/Resources/config/serializer</argument>
                      <argument key="Application\Sonata\UserBundle">/var/www/html/siaptb/src/Application/Sonata/UserBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MarkdownBundle">/var/www/html/siaptb/vendor/knplabs/knp-markdown-bundle/Knp/Bundle/MarkdownBundle/Resources/config/serializer</argument>
                      <argument key="Ivory\CKEditorBundle">/var/www/html/siaptb/vendor/egeloen/ckeditor-bundle/Ivory/CKEditorBundle/Resources/config/serializer</argument>
                      <argument key="Ivory\OrderedFormBundle">/var/www/html/siaptb/vendor/egeloen/ordered-form-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\FormatterBundle">/var/www/html/siaptb/vendor/sonata-project/formatter-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\IntlBundle">/var/www/html/siaptb/vendor/sonata-project/intl-bundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/var/www/html/siaptb/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="JMS\AopBundle">/var/www/html/siaptb/vendor/jms/aop-bundle/JMS/AopBundle/Resources/config/serializer</argument>
                      <argument key="JMS\DiExtraBundle">/var/www/html/siaptb/vendor/jms/di-extra-bundle/JMS/DiExtraBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SecurityExtraBundle">/var/www/html/siaptb/vendor/jms/security-extra-bundle/JMS/SecurityExtraBundle/Resources/config/serializer</argument>
                      <argument key="FOS\JsRoutingBundle">/var/www/html/siaptb/vendor/friendsofsymfony/jsrouting-bundle/FOS/JsRoutingBundle/Resources/config/serializer</argument>
                      <argument key="Application\CoreBundle">/var/www/html/siaptb/src/Application/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\SiapsBundle">/var/www/html/siaptb/src/Minsal/SiapsBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\SeguimientoBundle">/var/www/html/siaptb/src/Minsal/SeguimientoBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\CitasBundle">/var/www/html/siaptb/src/Minsal/CitasBundle/Resources/config/serializer</argument>
                      <argument key="ADesigns\CalendarBundle">/var/www/html/siaptb/vendor/adesigns/calendar-bundle/ADesigns/CalendarBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\LaboratorioBundle">/var/www/html/siaptb/src/Minsal/LaboratorioBundle/Resources/config/serializer</argument>
                      <argument key="Minsal\FarmaciaBundle">/var/www/html/siaptb/src/Minsal/FarmaciaBundle/Resources/config/serializer</argument>
                      <argument key="Endroid\Bundle\QrCodeBundle">/var/www/html/siaptb/vendor/endroid/qrcode-bundle/Endroid/Bundle/QrCodeBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\SnappyBundle">/var/www/html/siaptb/vendor/knplabs/knp-snappy-bundle/Resources/config/serializer</argument>
                      <argument key="Application\SoapBundle">/var/www/html/siaptb/src/Application/SoapBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\TimeBundle">/var/www/html/siaptb/vendor/knplabs/knp-time-bundle/Knp/Bundle/TimeBundle/Resources/config/serializer</argument>
                      <argument key="Application\ApiBundle">/var/www/html/siaptb/src/Application/ApiBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/var/www/html/siaptb/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">/var/www/html/siaptb/vendor/sensio/distribution-bundle/Sensio/Bundle/DistributionBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/var/www/html/siaptb/vendor/sensio/generator-bundle/Sensio/Bundle/GeneratorBundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_serializer.naming_strategy" class="JMS\Serializer\Naming\CacheNamingStrategy">
      <argument type="service">
        <service class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
          <argument type="service">
            <service class="JMS\Serializer\Naming\CamelCaseNamingStrategy" public="false">
              <argument>_</argument>
              <argument>true</argument>
            </service>
          </argument>
        </service>
      </argument>
    </service>
    <service id="jms_serializer.object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer" class="JMS\Serializer\Serializer">
      <argument type="service">
        <service class="Metadata\MetadataFactory" public="false">
          <argument type="service">
            <service class="Metadata\Driver\LazyLoadingDriver" public="false">
              <argument type="service" id="service_container"/>
              <argument>jms_serializer.metadata_driver</argument>
            </service>
          </argument>
          <argument>Metadata\ClassHierarchyMetadata</argument>
          <argument>true</argument>
          <call method="setCache">
            <argument type="service">
              <service class="Metadata\Cache\FileCache" public="false">
                <argument>/var/www/html/siaptb/app/cache/dev/jms_serializer</argument>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="service">
        <service class="JMS\DiExtraBundle\DependencyInjection\Collection\LazyServiceMap">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="json">jms_serializer.json_serialization_visitor</argument>
            <argument key="xml">jms_serializer.xml_serialization_visitor</argument>
            <argument key="yml">jms_serializer.yaml_serialization_visitor</argument>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="JMS\DiExtraBundle\DependencyInjection\Collection\LazyServiceMap">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="json">jms_serializer.json_deserialization_visitor</argument>
            <argument key="xml">jms_serializer.xml_deserialization_visitor</argument>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
          <call method="setListeners">
            <argument type="collection">
              <argument key="serializer.pre_serialize" type="collection">
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.stopwatch_subscriber</argument>
                    <argument>onPreSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                    <argument>onPreSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
              </argument>
              <argument key="serializer.post_serialize" type="collection">
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.stopwatch_subscriber</argument>
                    <argument>onPostSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
              </argument>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="jms_di_extra.metadata_driver" class="JMS\DiExtraBundle\Metadata\Driver\AnnotationDriver">
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="security.extra.metadata_driver" class="Metadata\Driver\DriverChain">
      <argument type="collection">
        <argument type="service">
          <service class="JMS\SecurityExtraBundle\Metadata\Driver\AnnotationDriver" public="false">
            <argument type="service" id="annotation_reader"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="knp_menu.menu_provider" class="Knp\Menu\Provider\ChainProvider">
      <argument type="collection">
        <argument type="service">
          <service class="Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="service_container"/>
            <argument type="collection"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="kernel"/>
            <argument type="service" id="service_container"/>
            <argument type="service" id="knp_menu.factory"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="event_dispatcher" alias="debug.event_dispatcher"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="translator" alias="translator.default"/>
    <service id="debug.templating.engine.twig" alias="templating"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.real"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport"/>
    <service id="mailer" alias="swiftmailer.mailer.default"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="sonata.block.context_manager" alias="sonata.block.context_manager.default"/>
    <service id="sonata.block.cache.handler" alias="sonata.block.cache.handler.default"/>
    <service id="sonata.block.renderer" alias="sonata.block.renderer.default"/>
    <service id="fos_user.util.username_canonicalizer" alias="fos_user.util.email_canonicalizer"/>
    <service id="fos_user.change_password.form.handler" alias="fos_user.change_password.form.handler.default"/>
    <service id="sonata.user.user_manager" alias="fos_user.user_manager"/>
    <service id="sonata.user.group_manager" alias="fos_user.group_manager"/>
    <service id="sonata.user.authentication.form" alias="fos_user.profile.form"/>
    <service id="sonata.user.authentication.form_handler" alias="fos_user.profile.form.handler"/>
    <service id="sonata.intl.timezone_detector" alias="sonata.intl.timezone_detector.chain"/>
    <service id="sonata.intl.locale_detector" alias="sonata.intl.locale_detector.request"/>
    <service id="serializer" alias="jms_serializer"/>
    <service id="sensio.distribution.webconfigurator" alias="sensio_distribution.webconfigurator"/>
  </services>
</container>
